

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 30 14:07:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.31
    42                           ; Generated 13/10/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  001C48                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for main@F2442
    82  001C48  53                 	db	83
    83  001C49  6F                 	db	111
    84  001C4A  6D                 	db	109
    85  001C4B  61                 	db	97
    86  001C4C  20                 	db	32
    87  001C4D  3D                 	db	61
    88  001C4E  20                 	db	32
    89  001C4F  2A                 	db	42
    90  001C50  00                 	db	0
    91  001C51  00                 	db	0
    92  001C52  00                 	db	0
    93  001C53  00                 	db	0
    94  001C54  00                 	db	0
    95  001C55  00                 	db	0
    96  001C56  00                 	db	0
    97  001C57  00                 	db	0
    98                           
    99                           ;initializer for _operacao
   100  001C58  FFFF               	dw	65535
   101                           
   102                           	psect	smallconst
   103  000600                     __psmallconst:
   104                           	callstack 0
   105  000600  00                 	db	0
   106  000601                     _valor@ssd$F336:
   107                           	callstack 0
   108  000601  3F                 	db	63
   109  000602  06                 	db	6
   110  000603  5B                 	db	91
   111  000604  4F                 	db	79
   112  000605  66                 	db	102
   113  000606  6D                 	db	109
   114  000607  7D                 	db	125
   115  000608  07                 	db	7
   116  000609  7F                 	db	127
   117  00060A  6F                 	db	111
   118  00060B  77                 	db	119
   119  00060C  7C                 	db	124
   120  00060D  39                 	db	57
   121  00060E  5E                 	db	94
   122  00060F  79                 	db	121
   123  000610  71                 	db	113
   124  000611                     __end_of_valor@ssd$F336:
   125                           	callstack 0
   126  0000                     _PORTEbits	set	3972
   127  0000                     _PORTCbits	set	3970
   128  0000                     _TRISEbits	set	3990
   129  0000                     _TRISCbits	set	3988
   130  0000                     _T2CON	set	4042
   131  0000                     _CCP1CON	set	4029
   132  0000                     _CCPR1L	set	4030
   133  0000                     _PR2	set	4043
   134  0000                     _TRISE	set	3990
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISA	set	3986
   138  0000                     _PORTE	set	3972
   139  0000                     _PORTD	set	3971
   140  0000                     _PORTC	set	3970
   141  0000                     _PORTA	set	3968
   142  0000                     _PORTBbits	set	3969
   143  0000                     _PORTB	set	3969
   144  0000                     _TRISB	set	3987
   145  0000                     _ADCON1	set	4033
   146  000611                     STR_1:
   147  000611  53                 	db	83	;'S'
   148  000612  6F                 	db	111	;'o'
   149  000613  6D                 	db	109	;'m'
   150  000614  61                 	db	97	;'a'
   151  000615  20                 	db	32
   152  000616  3D                 	db	61	;'='
   153  000617  20                 	db	32
   154  000618  52                 	db	82	;'R'
   155  000619  42                 	db	66	;'B'
   156  00061A  33                 	db	51	;'3'
   157  00061B  20                 	db	32
   158  00061C  20                 	db	32
   159  00061D  20                 	db	32
   160  00061E  20                 	db	32
   161  00061F  20                 	db	32
   162  000620  00                 	db	0
   163  000621                     STR_3:
   164  000621  4D                 	db	77	;'M'
   165  000622  75                 	db	117	;'u'
   166  000623  6C                 	db	108	;'l'
   167  000624  74                 	db	116	;'t'
   168  000625  20                 	db	32
   169  000626  3D                 	db	61	;'='
   170  000627  20                 	db	32
   171  000628  52                 	db	82	;'R'
   172  000629  42                 	db	66	;'B'
   173  00062A  35                 	db	53	;'5'
   174  00062B  20                 	db	32
   175  00062C  20                 	db	32
   176  00062D  20                 	db	32
   177  00062E  20                 	db	32
   178  00062F  20                 	db	32
   179  000630  00                 	db	0
   180  000631                     STR_2:
   181  000631  53                 	db	83	;'S'
   182  000632  75                 	db	117	;'u'
   183  000633  62                 	db	98	;'b'
   184  000634  74                 	db	116	;'t'
   185  000635  72                 	db	114	;'r'
   186  000636  61                 	db	97	;'a'
   187  000637  63                 	db	99	;'c'
   188  000638  61                 	db	97	;'a'
   189  000639  6F                 	db	111	;'o'
   190  00063A  20                 	db	32
   191  00063B  3D                 	db	61	;'='
   192  00063C  20                 	db	32
   193  00063D  52                 	db	82	;'R'
   194  00063E  42                 	db	66	;'B'
   195  00063F  34                 	db	52	;'4'
   196  000640  00                 	db	0
   197  000641                     STR_4:
   198  000641  44                 	db	68	;'D'
   199  000642  69                 	db	105	;'i'
   200  000643  76                 	db	118	;'v'
   201  000644  20                 	db	32
   202  000645  3D                 	db	61	;'='
   203  000646  20                 	db	32
   204  000647  2A                 	db	42
   205  000648  20                 	db	32
   206  000649  20                 	db	32
   207  00064A  20                 	db	32
   208  00064B  20                 	db	32
   209  00064C  20                 	db	32
   210  00064D  20                 	db	32
   211  00064E  00                 	db	0
   212  00064F  00                 	db	0	; dummy byte at the end
   213  0000                     
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217  001B78                     __pcinit:
   218                           	callstack 0
   219  001B78                     start_initialization:
   220                           	callstack 0
   221  001B78                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to COMRAM (18 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226  001B78  0E48               	movlw	low __pidataCOMRAM
   227  001B7A  6EF6               	movwf	tblptrl,c
   228  001B7C  0E1C               	movlw	high __pidataCOMRAM
   229  001B7E  6EF7               	movwf	tblptrh,c
   230  001B80  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231  001B82  6EF8               	movwf	tblptru,c
   232  001B84  EE00  F02F         	lfsr	0,__pdataCOMRAM
   233  001B88  EE10 F012          	lfsr	1,18
   234  001B8C                     copy_data0:
   235  001B8C  0009               	tblrd		*+
   236  001B8E  CFF5 FFEE          	movff	tablat,postinc0
   237  001B92  50E5               	movf	postdec1,w,c
   238  001B94  50E1               	movf	fsr1l,w,c
   239  001B96  E1FA               	bnz	copy_data0
   240                           
   241                           ; Clear objects allocated to COMRAM (16 bytes)
   242  001B98  EE00  F041         	lfsr	0,__pbssCOMRAM
   243  001B9C  0E10               	movlw	16
   244  001B9E                     clear_0:
   245  001B9E  6AEE               	clrf	postinc0,c
   246  001BA0  06E8               	decf	wreg,f,c
   247  001BA2  E1FD               	bnz	clear_0
   248  001BA4                     end_of_initialization:
   249                           	callstack 0
   250  001BA4                     __end_of__initialization:
   251                           	callstack 0
   252  001BA4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   253  001BA6  6EF8               	movwf	tblptru,c
   254  001BA8  0100               	movlb	0
   255  001BAA  EF28  F003         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMRAM
   258  000041                     __pbssCOMRAM:
   259                           	callstack 0
   260  000041                     kpDebounce@valorAntigo:
   261                           	callstack 0
   262  000041                     	ds	2
   263  000043                     kpDebounce@valorNovo:
   264                           	callstack 0
   265  000043                     	ds	2
   266  000045                     _valor:
   267                           	callstack 0
   268  000045                     	ds	2
   269  000047                     _a1:
   270                           	callstack 0
   271  000047                     	ds	2
   272  000049                     _igual:
   273                           	callstack 0
   274  000049                     	ds	2
   275  00004B                     _v3:
   276                           	callstack 0
   277  00004B                     	ds	1
   278  00004C                     _v2:
   279                           	callstack 0
   280  00004C                     	ds	1
   281  00004D                     _v1:
   282                           	callstack 0
   283  00004D                     	ds	1
   284  00004E                     _v0:
   285                           	callstack 0
   286  00004E                     	ds	1
   287  00004F                     _display:
   288                           	callstack 0
   289  00004F                     	ds	1
   290  000050                     kpDebounce@tempo:
   291                           	callstack 0
   292  000050                     	ds	1
   293                           
   294                           	psect	dataCOMRAM
   295  00002F                     __pdataCOMRAM:
   296                           	callstack 0
   297  00002F                     main@F2442:
   298                           	callstack 0
   299  00002F                     	ds	16
   300  00003F                     _operacao:
   301                           	callstack 0
   302  00003F                     	ds	2
   303                           
   304                           	psect	cstackCOMRAM
   305  000001                     __pcstackCOMRAM:
   306                           	callstack 0
   307  000001                     ??_kpDebounce:
   308  000001                     ?_kpRead:
   309                           	callstack 0
   310  000001                     ?___wmul:
   311                           	callstack 0
   312  000001                     ?___awdiv:
   313                           	callstack 0
   314  000001                     ?___aldiv:
   315                           	callstack 0
   316  000001                     Delay40us@i:
   317                           	callstack 0
   318  000001                     digitalWrite@pin:
   319                           	callstack 0
   320  000001                     pinMode@pin:
   321                           	callstack 0
   322  000001                     reles@rele:
   323                           	callstack 0
   324  000001                     ventoinha@v:
   325                           	callstack 0
   326  000001                     ___wmul@multiplier:
   327                           	callstack 0
   328  000001                     ___awdiv@dividend:
   329                           	callstack 0
   330  000001                     ___aldiv@dividend:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x0
   334  000001                     	ds	1
   335  000002                     Delay2ms@i:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x1
   339  000002                     	ds	1
   340  000003                     digitalWrite@value:
   341                           	callstack 0
   342  000003                     pinMode@type:
   343                           	callstack 0
   344  000003                     ventoinha@i:
   345                           	callstack 0
   346  000003                     ___wmul@multiplicand:
   347                           	callstack 0
   348  000003                     ___awdiv@divisor:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000003                     	ds	2
   353  000005                     ??_digitalWrite:
   354  000005                     ??_pinMode:
   355  000005                     ___awdiv@counter:
   356                           	callstack 0
   357  000005                     ___wmul@product:
   358                           	callstack 0
   359  000005                     ___aldiv@divisor:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x4
   363  000005                     	ds	1
   364  000006                     kpDebounce@old_D:
   365                           	callstack 0
   366  000006                     ___awdiv@sign:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x5
   370  000006                     	ds	1
   371  000007                     ??_ssdUpdate:
   372  000007                     lcdCommand@old_D:
   373                           	callstack 0
   374  000007                     lcdData@valor:
   375                           	callstack 0
   376  000007                     kpDebounce@k:
   377                           	callstack 0
   378  000007                     ___awdiv@quotient:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x6
   382  000007                     	ds	1
   383  000008                     lcdCommand@cmd:
   384                           	callstack 0
   385  000008                     lcdData@old_D:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x7
   389  000008                     	ds	1
   390  000009                     ?___awmod:
   391                           	callstack 0
   392  000009                     kpDebounce@j:
   393                           	callstack 0
   394  000009                     ___aldiv@counter:
   395                           	callstack 0
   396  000009                     lcdPrint@msg:
   397                           	callstack 0
   398  000009                     ___awmod@dividend:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x8
   402  000009                     	ds	1
   403  00000A                     kpDebounce@i:
   404                           	callstack 0
   405  00000A                     ___aldiv@sign:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x9
   409  00000A                     	ds	1
   410  00000B                     lcdPrint@linha:
   411                           	callstack 0
   412  00000B                     ___awmod@divisor:
   413                           	callstack 0
   414  00000B                     ___aldiv@quotient:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0xA
   418  00000B                     	ds	2
   419  00000D                     ??_lcdPrint:
   420  00000D                     ___awmod@counter:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xC
   424  00000D                     	ds	1
   425  00000E                     ___awmod@sign:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xD
   429  00000E                     	ds	1
   430  00000F                     ssdDigit@pos:
   431                           	callstack 0
   432  00000F                     lcdPrint@i:
   433                           	callstack 0
   434  00000F                     pwmFrequency@freq:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xE
   438  00000F                     	ds	1
   439  000010                     ssdDigit@val:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0xF
   443  000010                     	ds	1
   444  000011                     print@n:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x10
   448  000011                     	ds	2
   449  000013                     main@msg:
   450                           	callstack 0
   451                           
   452                           ; 16 bytes @ 0x12
   453  000013                     	ds	16
   454  000023                     main@aux:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x22
   458  000023                     	ds	2
   459  000025                     main@tempo:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x24
   463  000025                     	ds	2
   464  000027                     main@n:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x26
   468  000027                     	ds	2
   469  000029                     main@cont:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x28
   473  000029                     	ds	2
   474  00002B                     main@x:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2A
   478  00002B                     	ds	2
   479  00002D                     main@y:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2C
   483  00002D                     	ds	2
   484                           
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 25 in file "newmain.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  msg            16   18[COMRAM] unsigned char [16]
   495 ;;  y               2   44[COMRAM] int 
   496 ;;  x               2   42[COMRAM] int 
   497 ;;  cont            2   40[COMRAM] int 
   498 ;;  n               2   38[COMRAM] int 
   499 ;;  tempo           2   36[COMRAM] int 
   500 ;;  aux             2   34[COMRAM] int 
   501 ;;  i               2    0        int 
   502 ;;  a               1    0        volatile unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:        28       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0
   515 ;;      Totals:        28       0       0       0       0       0       0
   516 ;;Total ram usage:       28 bytes
   517 ;; Hardware stack levels required when called:    4
   518 ;; This function calls:
   519 ;;		___awdiv
   520 ;;		___wmul
   521 ;;		_kpDebounce
   522 ;;		_kpInit
   523 ;;		_kpRead
   524 ;;		_lcdInit
   525 ;;		_lcdPrint
   526 ;;		_print
   527 ;;		_pwmInit
   528 ;;		_reles
   529 ;;		_ssdDigit
   530 ;;		_ssdInit
   531 ;;		_ssdUpdate
   532 ;;		_updateCalc
   533 ;;		_ventoinha
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540  000650                     __ptext0:
   541                           	callstack 0
   542  000650                     _main:
   543                           	callstack 27
   544  000650                     
   545                           ;newmain.c: 27:     int cont=2, i, n, x=-1, y=-1, tempo, aux;
   546  000650  0E00               	movlw	0
   547  000652  6E2A               	movwf	(main@cont+1)^0,c
   548  000654  0E02               	movlw	2
   549  000656  6E29               	movwf	main@cont^0,c
   550  000658  682B               	setf	main@x^0,c
   551  00065A  682C               	setf	(main@x+1)^0,c
   552  00065C  682D               	setf	main@y^0,c
   553  00065E  682E               	setf	(main@y+1)^0,c
   554  000660                     
   555                           ;newmain.c: 28:     char msg[16] = "Soma = *";
   556  000660  EE20  F02F         	lfsr	2,main@F2442
   557  000664  EE10  F013         	lfsr	1,main@msg
   558  000668  0E0F               	movlw	15
   559  00066A                     u2281:
   560  00066A  CFDB FFE3          	movff	plusw2,plusw1
   561  00066E  06E8               	decf	wreg,f,c
   562  000670  E2FC               	bc	u2281
   563  000672                     
   564                           ;newmain.c: 29:     volatile unsigned char a;;newmain.c: 31:     ssdInit();
   565  000672  EC02  F00D         	call	_ssdInit	;wreg free
   566  000676                     
   567                           ;newmain.c: 32:     kpInit();
   568  000676  EC32  F00E         	call	_kpInit	;wreg free
   569  00067A                     
   570                           ;newmain.c: 33:     lcdInit();
   571  00067A  EC9A  F00C         	call	_lcdInit	;wreg free
   572  00067E                     
   573                           ;newmain.c: 34:     pwmInit();
   574  00067E  EC0B  F00E         	call	_pwmInit	;wreg free
   575  000682                     
   576                           ;newmain.c: 36:     ADCON1=0x06;
   577  000682  0E06               	movlw	6
   578  000684  6EC1               	movwf	193,c	;volatile
   579  000686                     
   580                           ;newmain.c: 37:     TRISB = 0b11111111;
   581  000686  6893               	setf	147,c	;volatile
   582  000688                     
   583                           ;newmain.c: 38:     PORTB = 0b00000000;
   584  000688  0E00               	movlw	0
   585  00068A  6E81               	movwf	129,c	;volatile
   586  00068C                     
   587                           ;newmain.c: 40:     lcdPrint("Soma = RB3     ", 1);
   588  00068C  0E11               	movlw	low STR_1
   589  00068E  6E09               	movwf	lcdPrint@msg^0,c
   590  000690  0E06               	movlw	high STR_1
   591  000692  6E0A               	movwf	(lcdPrint@msg+1)^0,c
   592  000694  0E00               	movlw	0
   593  000696  6E0C               	movwf	(lcdPrint@linha+1)^0,c
   594  000698  0E01               	movlw	1
   595  00069A  6E0B               	movwf	lcdPrint@linha^0,c
   596  00069C  EC2B  F00A         	call	_lcdPrint	;wreg free
   597  0006A0                     
   598                           ;newmain.c: 41:     lcdPrint("Subtracao = RB4", 2);
   599  0006A0  0E31               	movlw	low STR_2
   600  0006A2  6E09               	movwf	lcdPrint@msg^0,c
   601  0006A4  0E06               	movlw	high STR_2
   602  0006A6  6E0A               	movwf	(lcdPrint@msg+1)^0,c
   603  0006A8  0E00               	movlw	0
   604  0006AA  6E0C               	movwf	(lcdPrint@linha+1)^0,c
   605  0006AC  0E02               	movlw	2
   606  0006AE  6E0B               	movwf	lcdPrint@linha^0,c
   607  0006B0  EC2B  F00A         	call	_lcdPrint	;wreg free
   608  0006B4                     
   609                           ;newmain.c: 42:     lcdPrint("Mult = RB5     ", 3);
   610  0006B4  0E21               	movlw	low STR_3
   611  0006B6  6E09               	movwf	lcdPrint@msg^0,c
   612  0006B8  0E06               	movlw	high STR_3
   613  0006BA  6E0A               	movwf	(lcdPrint@msg+1)^0,c
   614  0006BC  0E00               	movlw	0
   615  0006BE  6E0C               	movwf	(lcdPrint@linha+1)^0,c
   616  0006C0  0E03               	movlw	3
   617  0006C2  6E0B               	movwf	lcdPrint@linha^0,c
   618  0006C4  EC2B  F00A         	call	_lcdPrint	;wreg free
   619  0006C8                     
   620                           ;newmain.c: 43:     lcdPrint("Div = *      ", 4);
   621  0006C8  0E41               	movlw	low STR_4
   622  0006CA  6E09               	movwf	lcdPrint@msg^0,c
   623  0006CC  0E06               	movlw	high STR_4
   624  0006CE  6E0A               	movwf	(lcdPrint@msg+1)^0,c
   625  0006D0  0E00               	movlw	0
   626  0006D2  6E0C               	movwf	(lcdPrint@linha+1)^0,c
   627  0006D4  0E04               	movlw	4
   628  0006D6  6E0B               	movwf	lcdPrint@linha^0,c
   629  0006D8  EC2B  F00A         	call	_lcdPrint	;wreg free
   630  0006DC                     l2379:
   631                           
   632                           ;newmain.c: 47:        ADCON1 = 0x06;
   633  0006DC  0E06               	movlw	6
   634  0006DE  6EC1               	movwf	193,c	;volatile
   635  0006E0                     
   636                           ;newmain.c: 48:        TRISB = 0b11111111;
   637  0006E0  6893               	setf	147,c	;volatile
   638  0006E2                     
   639                           ;newmain.c: 49:        PORTB= 0b00000000;
   640  0006E2  0E00               	movlw	0
   641  0006E4  6E81               	movwf	129,c	;volatile
   642  0006E6                     
   643                           ;newmain.c: 51:        if(PORTBbits.RB3 == 0){
   644  0006E6  B681               	btfsc	129,3,c	;volatile
   645  0006E8  EF78  F003         	goto	u2291
   646  0006EC  EF7A  F003         	goto	u2290
   647  0006F0                     u2291:
   648  0006F0  EF7E  F003         	goto	l2389
   649  0006F4                     u2290:
   650  0006F4                     
   651                           ;newmain.c: 52:            operacao = 0;
   652  0006F4  0E00               	movlw	0
   653  0006F6  6E40               	movwf	(_operacao+1)^0,c
   654  0006F8  0E00               	movlw	0
   655  0006FA  6E3F               	movwf	_operacao^0,c
   656  0006FC                     l2389:
   657                           
   658                           ;newmain.c: 55:         if(PORTBbits.RB4 == 0){
   659  0006FC  B881               	btfsc	129,4,c	;volatile
   660  0006FE  EF83  F003         	goto	u2301
   661  000702  EF85  F003         	goto	u2300
   662  000706                     u2301:
   663  000706  EF89  F003         	goto	l2393
   664  00070A                     u2300:
   665  00070A                     
   666                           ;newmain.c: 56:             operacao = 1;
   667  00070A  0E00               	movlw	0
   668  00070C  6E40               	movwf	(_operacao+1)^0,c
   669  00070E  0E01               	movlw	1
   670  000710  6E3F               	movwf	_operacao^0,c
   671  000712                     l2393:
   672                           
   673                           ;newmain.c: 59:         if(PORTBbits.RB5 == 0){
   674  000712  BA81               	btfsc	129,5,c	;volatile
   675  000714  EF8E  F003         	goto	u2311
   676  000718  EF90  F003         	goto	u2310
   677  00071C                     u2311:
   678  00071C  EF94  F003         	goto	l54
   679  000720                     u2310:
   680  000720                     
   681                           ;newmain.c: 60:             operacao = 2;
   682  000720  0E00               	movlw	0
   683  000722  6E40               	movwf	(_operacao+1)^0,c
   684  000724  0E02               	movlw	2
   685  000726  6E3F               	movwf	_operacao^0,c
   686  000728                     l54:
   687                           
   688                           ;newmain.c: 63:        ADCON1 = 0x00;
   689  000728  0E00               	movlw	0
   690  00072A  6EC1               	movwf	193,c	;volatile
   691                           
   692                           ;newmain.c: 64:        TRISB = 0b00000000;
   693  00072C  0E00               	movlw	0
   694  00072E  6E93               	movwf	147,c	;volatile
   695  000730                     
   696                           ;newmain.c: 66:        if(kpRead() != aux){
   697  000730  EC2D  F00E         	call	_kpRead	;wreg free
   698  000734  5023               	movf	main@aux^0,w,c
   699  000736  1801               	xorwf	?_kpRead^0,w,c
   700  000738  E109               	bnz	u2320
   701  00073A  5024               	movf	(main@aux+1)^0,w,c
   702  00073C  1802               	xorwf	(?_kpRead+1)^0,w,c
   703  00073E  B4D8               	btfsc	status,2,c
   704  000740  EFA4  F003         	goto	u2321
   705  000744  EFA6  F003         	goto	u2320
   706  000748                     u2321:
   707  000748  EF24  F005         	goto	l2527
   708  00074C                     u2320:
   709  00074C                     
   710                           ;newmain.c: 67:             aux = kpRead();
   711  00074C  EC2D  F00E         	call	_kpRead	;wreg free
   712  000750  C001  F023         	movff	?_kpRead,main@aux
   713  000754  C002  F024         	movff	?_kpRead+1,main@aux+1
   714                           
   715                           ;newmain.c: 69:             if(((kpRead()) & (1<<(3)))){
   716  000758  EC2D  F00E         	call	_kpRead	;wreg free
   717  00075C  A601               	btfss	?_kpRead^0,3,c
   718  00075E  EFB3  F003         	goto	u2331
   719  000762  EFB5  F003         	goto	u2330
   720  000766                     u2331:
   721  000766  EFCF  F003         	goto	l2411
   722  00076A                     u2330:
   723  00076A                     
   724                           ;newmain.c: 71:                 updateCalc();
   725  00076A  EC9F  F00D         	call	_updateCalc	;wreg free
   726                           
   727                           ;newmain.c: 73:                 ssdDigit(1, 0);
   728  00076E  0E00               	movlw	0
   729  000770  6E0F               	movwf	ssdDigit@pos^0,c
   730  000772  0E01               	movlw	1
   731  000774  ECD6  F00C         	call	_ssdDigit
   732  000778                     
   733                           ;newmain.c: 75:                 if(cont % 2 == 0)
   734  000778  B029               	btfsc	main@cont^0,0,c
   735  00077A  EFC1  F003         	goto	u2341
   736  00077E  EFC3  F003         	goto	u2340
   737  000782                     u2341:
   738  000782  EFC9  F003         	goto	l2407
   739  000786                     u2340:
   740  000786                     
   741                           ;newmain.c: 76:                     x = 1;
   742  000786  0E00               	movlw	0
   743  000788  6E2C               	movwf	(main@x+1)^0,c
   744  00078A  0E01               	movlw	1
   745  00078C  6E2B               	movwf	main@x^0,c
   746  00078E  EFCD  F003         	goto	l2409
   747  000792                     l2407:
   748                           
   749                           ;newmain.c: 79:                     y = 1;
   750  000792  0E00               	movlw	0
   751  000794  6E2E               	movwf	(main@y+1)^0,c
   752  000796  0E01               	movlw	1
   753  000798  6E2D               	movwf	main@y^0,c
   754  00079A                     l2409:
   755                           
   756                           ;newmain.c: 81:                 cont++;
   757  00079A  4A29               	infsnz	main@cont^0,f,c
   758  00079C  2A2A               	incf	(main@cont+1)^0,f,c
   759  00079E                     l2411:
   760                           
   761                           ;newmain.c: 84:             if(((kpRead()) & (1<<(7)))){
   762  00079E  EC2D  F00E         	call	_kpRead	;wreg free
   763  0007A2  AE01               	btfss	?_kpRead^0,7,c
   764  0007A4  EFD6  F003         	goto	u2351
   765  0007A8  EFD8  F003         	goto	u2350
   766  0007AC                     u2351:
   767  0007AC  EFF2  F003         	goto	l2423
   768  0007B0                     u2350:
   769  0007B0                     
   770                           ;newmain.c: 86:                 updateCalc();
   771  0007B0  EC9F  F00D         	call	_updateCalc	;wreg free
   772                           
   773                           ;newmain.c: 88:                 ssdDigit(2, 0);
   774  0007B4  0E00               	movlw	0
   775  0007B6  6E0F               	movwf	ssdDigit@pos^0,c
   776  0007B8  0E02               	movlw	2
   777  0007BA  ECD6  F00C         	call	_ssdDigit
   778  0007BE                     
   779                           ;newmain.c: 90:                 if(cont % 2 == 0)
   780  0007BE  B029               	btfsc	main@cont^0,0,c
   781  0007C0  EFE4  F003         	goto	u2361
   782  0007C4  EFE6  F003         	goto	u2360
   783  0007C8                     u2361:
   784  0007C8  EFEC  F003         	goto	l2419
   785  0007CC                     u2360:
   786  0007CC                     
   787                           ;newmain.c: 91:                     x = 2;
   788  0007CC  0E00               	movlw	0
   789  0007CE  6E2C               	movwf	(main@x+1)^0,c
   790  0007D0  0E02               	movlw	2
   791  0007D2  6E2B               	movwf	main@x^0,c
   792  0007D4  EFF0  F003         	goto	l2421
   793  0007D8                     l2419:
   794                           
   795                           ;newmain.c: 94:                     y = 2;
   796  0007D8  0E00               	movlw	0
   797  0007DA  6E2E               	movwf	(main@y+1)^0,c
   798  0007DC  0E02               	movlw	2
   799  0007DE  6E2D               	movwf	main@y^0,c
   800  0007E0                     l2421:
   801                           
   802                           ;newmain.c: 96:                 cont++;
   803  0007E0  4A29               	infsnz	main@cont^0,f,c
   804  0007E2  2A2A               	incf	(main@cont+1)^0,f,c
   805  0007E4                     l2423:
   806                           
   807                           ;newmain.c: 99:             if(((kpRead()) & (1<<(11)))){
   808  0007E4  EC2D  F00E         	call	_kpRead	;wreg free
   809  0007E8  A602               	btfss	(?_kpRead+1)^0,3,c
   810  0007EA  EFF9  F003         	goto	u2371
   811  0007EE  EFFB  F003         	goto	u2370
   812  0007F2                     u2371:
   813  0007F2  EF15  F004         	goto	l2435
   814  0007F6                     u2370:
   815  0007F6                     
   816                           ;newmain.c: 101:                 updateCalc();
   817  0007F6  EC9F  F00D         	call	_updateCalc	;wreg free
   818                           
   819                           ;newmain.c: 103:                 ssdDigit(3, 0);
   820  0007FA  0E00               	movlw	0
   821  0007FC  6E0F               	movwf	ssdDigit@pos^0,c
   822  0007FE  0E03               	movlw	3
   823  000800  ECD6  F00C         	call	_ssdDigit
   824  000804                     
   825                           ;newmain.c: 105:                 if(cont % 2 == 0)
   826  000804  B029               	btfsc	main@cont^0,0,c
   827  000806  EF07  F004         	goto	u2381
   828  00080A  EF09  F004         	goto	u2380
   829  00080E                     u2381:
   830  00080E  EF0F  F004         	goto	l2431
   831  000812                     u2380:
   832  000812                     
   833                           ;newmain.c: 106:                     x = 3;
   834  000812  0E00               	movlw	0
   835  000814  6E2C               	movwf	(main@x+1)^0,c
   836  000816  0E03               	movlw	3
   837  000818  6E2B               	movwf	main@x^0,c
   838  00081A  EF13  F004         	goto	l2433
   839  00081E                     l2431:
   840                           
   841                           ;newmain.c: 109:                     y = 3;
   842  00081E  0E00               	movlw	0
   843  000820  6E2E               	movwf	(main@y+1)^0,c
   844  000822  0E03               	movlw	3
   845  000824  6E2D               	movwf	main@y^0,c
   846  000826                     l2433:
   847                           
   848                           ;newmain.c: 111:                 cont++;
   849  000826  4A29               	infsnz	main@cont^0,f,c
   850  000828  2A2A               	incf	(main@cont+1)^0,f,c
   851  00082A                     l2435:
   852                           
   853                           ;newmain.c: 114:             if(((kpRead()) & (1<<(2)))){
   854  00082A  EC2D  F00E         	call	_kpRead	;wreg free
   855  00082E  A401               	btfss	?_kpRead^0,2,c
   856  000830  EF1C  F004         	goto	u2391
   857  000834  EF1E  F004         	goto	u2390
   858  000838                     u2391:
   859  000838  EF38  F004         	goto	l2447
   860  00083C                     u2390:
   861  00083C                     
   862                           ;newmain.c: 116:                 updateCalc();
   863  00083C  EC9F  F00D         	call	_updateCalc	;wreg free
   864                           
   865                           ;newmain.c: 118:                 ssdDigit(4, 0);
   866  000840  0E00               	movlw	0
   867  000842  6E0F               	movwf	ssdDigit@pos^0,c
   868  000844  0E04               	movlw	4
   869  000846  ECD6  F00C         	call	_ssdDigit
   870  00084A                     
   871                           ;newmain.c: 120:                 if(cont % 2 == 0)
   872  00084A  B029               	btfsc	main@cont^0,0,c
   873  00084C  EF2A  F004         	goto	u2401
   874  000850  EF2C  F004         	goto	u2400
   875  000854                     u2401:
   876  000854  EF32  F004         	goto	l2443
   877  000858                     u2400:
   878  000858                     
   879                           ;newmain.c: 121:                     x = 4;
   880  000858  0E00               	movlw	0
   881  00085A  6E2C               	movwf	(main@x+1)^0,c
   882  00085C  0E04               	movlw	4
   883  00085E  6E2B               	movwf	main@x^0,c
   884  000860  EF36  F004         	goto	l2445
   885  000864                     l2443:
   886                           
   887                           ;newmain.c: 124:                     y = 4;
   888  000864  0E00               	movlw	0
   889  000866  6E2E               	movwf	(main@y+1)^0,c
   890  000868  0E04               	movlw	4
   891  00086A  6E2D               	movwf	main@y^0,c
   892  00086C                     l2445:
   893                           
   894                           ;newmain.c: 126:                 cont++;
   895  00086C  4A29               	infsnz	main@cont^0,f,c
   896  00086E  2A2A               	incf	(main@cont+1)^0,f,c
   897  000870                     l2447:
   898                           
   899                           ;newmain.c: 129:             if(((kpRead()) & (1<<(6)))){
   900  000870  EC2D  F00E         	call	_kpRead	;wreg free
   901  000874  AC01               	btfss	?_kpRead^0,6,c
   902  000876  EF3F  F004         	goto	u2411
   903  00087A  EF41  F004         	goto	u2410
   904  00087E                     u2411:
   905  00087E  EF5B  F004         	goto	l2459
   906  000882                     u2410:
   907  000882                     
   908                           ;newmain.c: 131:                 updateCalc();
   909  000882  EC9F  F00D         	call	_updateCalc	;wreg free
   910                           
   911                           ;newmain.c: 133:                 ssdDigit(5, 0);
   912  000886  0E00               	movlw	0
   913  000888  6E0F               	movwf	ssdDigit@pos^0,c
   914  00088A  0E05               	movlw	5
   915  00088C  ECD6  F00C         	call	_ssdDigit
   916  000890                     
   917                           ;newmain.c: 135:                 if(cont % 2 == 0)
   918  000890  B029               	btfsc	main@cont^0,0,c
   919  000892  EF4D  F004         	goto	u2421
   920  000896  EF4F  F004         	goto	u2420
   921  00089A                     u2421:
   922  00089A  EF55  F004         	goto	l2455
   923  00089E                     u2420:
   924  00089E                     
   925                           ;newmain.c: 136:                     x = 5;
   926  00089E  0E00               	movlw	0
   927  0008A0  6E2C               	movwf	(main@x+1)^0,c
   928  0008A2  0E05               	movlw	5
   929  0008A4  6E2B               	movwf	main@x^0,c
   930  0008A6  EF59  F004         	goto	l2457
   931  0008AA                     l2455:
   932                           
   933                           ;newmain.c: 139:                     y = 5;
   934  0008AA  0E00               	movlw	0
   935  0008AC  6E2E               	movwf	(main@y+1)^0,c
   936  0008AE  0E05               	movlw	5
   937  0008B0  6E2D               	movwf	main@y^0,c
   938  0008B2                     l2457:
   939                           
   940                           ;newmain.c: 141:                 cont++;
   941  0008B2  4A29               	infsnz	main@cont^0,f,c
   942  0008B4  2A2A               	incf	(main@cont+1)^0,f,c
   943  0008B6                     l2459:
   944                           
   945                           ;newmain.c: 144:             if(((kpRead()) & (1<<(10)))){
   946  0008B6  EC2D  F00E         	call	_kpRead	;wreg free
   947  0008BA  A402               	btfss	(?_kpRead+1)^0,2,c
   948  0008BC  EF62  F004         	goto	u2431
   949  0008C0  EF64  F004         	goto	u2430
   950  0008C4                     u2431:
   951  0008C4  EF7E  F004         	goto	l2471
   952  0008C8                     u2430:
   953  0008C8                     
   954                           ;newmain.c: 146:                 updateCalc();
   955  0008C8  EC9F  F00D         	call	_updateCalc	;wreg free
   956                           
   957                           ;newmain.c: 148:                 ssdDigit(6, 0);
   958  0008CC  0E00               	movlw	0
   959  0008CE  6E0F               	movwf	ssdDigit@pos^0,c
   960  0008D0  0E06               	movlw	6
   961  0008D2  ECD6  F00C         	call	_ssdDigit
   962  0008D6                     
   963                           ;newmain.c: 150:                 if(cont % 2 == 0)
   964  0008D6  B029               	btfsc	main@cont^0,0,c
   965  0008D8  EF70  F004         	goto	u2441
   966  0008DC  EF72  F004         	goto	u2440
   967  0008E0                     u2441:
   968  0008E0  EF78  F004         	goto	l2467
   969  0008E4                     u2440:
   970  0008E4                     
   971                           ;newmain.c: 151:                     x = 6;
   972  0008E4  0E00               	movlw	0
   973  0008E6  6E2C               	movwf	(main@x+1)^0,c
   974  0008E8  0E06               	movlw	6
   975  0008EA  6E2B               	movwf	main@x^0,c
   976  0008EC  EF7C  F004         	goto	l2469
   977  0008F0                     l2467:
   978                           
   979                           ;newmain.c: 154:                     y = 6;
   980  0008F0  0E00               	movlw	0
   981  0008F2  6E2E               	movwf	(main@y+1)^0,c
   982  0008F4  0E06               	movlw	6
   983  0008F6  6E2D               	movwf	main@y^0,c
   984  0008F8                     l2469:
   985                           
   986                           ;newmain.c: 156:                 cont++;
   987  0008F8  4A29               	infsnz	main@cont^0,f,c
   988  0008FA  2A2A               	incf	(main@cont+1)^0,f,c
   989  0008FC                     l2471:
   990                           
   991                           ;newmain.c: 159:             if(((kpRead()) & (1<<(1)))){
   992  0008FC  EC2D  F00E         	call	_kpRead	;wreg free
   993  000900  A201               	btfss	?_kpRead^0,1,c
   994  000902  EF85  F004         	goto	u2451
   995  000906  EF87  F004         	goto	u2450
   996  00090A                     u2451:
   997  00090A  EFA1  F004         	goto	l2483
   998  00090E                     u2450:
   999  00090E                     
  1000                           ;newmain.c: 161:                 updateCalc();
  1001  00090E  EC9F  F00D         	call	_updateCalc	;wreg free
  1002                           
  1003                           ;newmain.c: 163:                 ssdDigit(7, 0);
  1004  000912  0E00               	movlw	0
  1005  000914  6E0F               	movwf	ssdDigit@pos^0,c
  1006  000916  0E07               	movlw	7
  1007  000918  ECD6  F00C         	call	_ssdDigit
  1008  00091C                     
  1009                           ;newmain.c: 165:                 if(cont % 2 == 0)
  1010  00091C  B029               	btfsc	main@cont^0,0,c
  1011  00091E  EF93  F004         	goto	u2461
  1012  000922  EF95  F004         	goto	u2460
  1013  000926                     u2461:
  1014  000926  EF9B  F004         	goto	l2479
  1015  00092A                     u2460:
  1016  00092A                     
  1017                           ;newmain.c: 166:                     x = 7;
  1018  00092A  0E00               	movlw	0
  1019  00092C  6E2C               	movwf	(main@x+1)^0,c
  1020  00092E  0E07               	movlw	7
  1021  000930  6E2B               	movwf	main@x^0,c
  1022  000932  EF9F  F004         	goto	l2481
  1023  000936                     l2479:
  1024                           
  1025                           ;newmain.c: 169:                     y = 7;
  1026  000936  0E00               	movlw	0
  1027  000938  6E2E               	movwf	(main@y+1)^0,c
  1028  00093A  0E07               	movlw	7
  1029  00093C  6E2D               	movwf	main@y^0,c
  1030  00093E                     l2481:
  1031                           
  1032                           ;newmain.c: 171:                 cont++;
  1033  00093E  4A29               	infsnz	main@cont^0,f,c
  1034  000940  2A2A               	incf	(main@cont+1)^0,f,c
  1035  000942                     l2483:
  1036                           
  1037                           ;newmain.c: 174:             if(((kpRead()) & (1<<(5)))){
  1038  000942  EC2D  F00E         	call	_kpRead	;wreg free
  1039  000946  AA01               	btfss	?_kpRead^0,5,c
  1040  000948  EFA8  F004         	goto	u2471
  1041  00094C  EFAA  F004         	goto	u2470
  1042  000950                     u2471:
  1043  000950  EFC4  F004         	goto	l2495
  1044  000954                     u2470:
  1045  000954                     
  1046                           ;newmain.c: 176:                 updateCalc();
  1047  000954  EC9F  F00D         	call	_updateCalc	;wreg free
  1048                           
  1049                           ;newmain.c: 178:                 ssdDigit(8, 0);
  1050  000958  0E00               	movlw	0
  1051  00095A  6E0F               	movwf	ssdDigit@pos^0,c
  1052  00095C  0E08               	movlw	8
  1053  00095E  ECD6  F00C         	call	_ssdDigit
  1054  000962                     
  1055                           ;newmain.c: 180:                 if(cont % 2 == 0)
  1056  000962  B029               	btfsc	main@cont^0,0,c
  1057  000964  EFB6  F004         	goto	u2481
  1058  000968  EFB8  F004         	goto	u2480
  1059  00096C                     u2481:
  1060  00096C  EFBE  F004         	goto	l2491
  1061  000970                     u2480:
  1062  000970                     
  1063                           ;newmain.c: 181:                     x = 8;
  1064  000970  0E00               	movlw	0
  1065  000972  6E2C               	movwf	(main@x+1)^0,c
  1066  000974  0E08               	movlw	8
  1067  000976  6E2B               	movwf	main@x^0,c
  1068  000978  EFC2  F004         	goto	l2493
  1069  00097C                     l2491:
  1070                           
  1071                           ;newmain.c: 184:                     y = 8;
  1072  00097C  0E00               	movlw	0
  1073  00097E  6E2E               	movwf	(main@y+1)^0,c
  1074  000980  0E08               	movlw	8
  1075  000982  6E2D               	movwf	main@y^0,c
  1076  000984                     l2493:
  1077                           
  1078                           ;newmain.c: 186:                 cont++;
  1079  000984  4A29               	infsnz	main@cont^0,f,c
  1080  000986  2A2A               	incf	(main@cont+1)^0,f,c
  1081  000988                     l2495:
  1082                           
  1083                           ;newmain.c: 189:             if(((kpRead()) & (1<<(9)))){
  1084  000988  EC2D  F00E         	call	_kpRead	;wreg free
  1085  00098C  A202               	btfss	(?_kpRead+1)^0,1,c
  1086  00098E  EFCB  F004         	goto	u2491
  1087  000992  EFCD  F004         	goto	u2490
  1088  000996                     u2491:
  1089  000996  EFE7  F004         	goto	l2507
  1090  00099A                     u2490:
  1091  00099A                     
  1092                           ;newmain.c: 191:                 updateCalc();
  1093  00099A  EC9F  F00D         	call	_updateCalc	;wreg free
  1094                           
  1095                           ;newmain.c: 193:                 ssdDigit(9, 0);
  1096  00099E  0E00               	movlw	0
  1097  0009A0  6E0F               	movwf	ssdDigit@pos^0,c
  1098  0009A2  0E09               	movlw	9
  1099  0009A4  ECD6  F00C         	call	_ssdDigit
  1100  0009A8                     
  1101                           ;newmain.c: 195:                 if(cont % 2 == 0)
  1102  0009A8  B029               	btfsc	main@cont^0,0,c
  1103  0009AA  EFD9  F004         	goto	u2501
  1104  0009AE  EFDB  F004         	goto	u2500
  1105  0009B2                     u2501:
  1106  0009B2  EFE1  F004         	goto	l2503
  1107  0009B6                     u2500:
  1108  0009B6                     
  1109                           ;newmain.c: 196:                     x = 9;
  1110  0009B6  0E00               	movlw	0
  1111  0009B8  6E2C               	movwf	(main@x+1)^0,c
  1112  0009BA  0E09               	movlw	9
  1113  0009BC  6E2B               	movwf	main@x^0,c
  1114  0009BE  EFE5  F004         	goto	l2505
  1115  0009C2                     l2503:
  1116                           
  1117                           ;newmain.c: 199:                     y = 9;
  1118  0009C2  0E00               	movlw	0
  1119  0009C4  6E2E               	movwf	(main@y+1)^0,c
  1120  0009C6  0E09               	movlw	9
  1121  0009C8  6E2D               	movwf	main@y^0,c
  1122  0009CA                     l2505:
  1123                           
  1124                           ;newmain.c: 201:                 cont++;
  1125  0009CA  4A29               	infsnz	main@cont^0,f,c
  1126  0009CC  2A2A               	incf	(main@cont+1)^0,f,c
  1127  0009CE                     l2507:
  1128                           
  1129                           ;newmain.c: 204:             if(((kpRead()) & (1<<(4)))){
  1130  0009CE  EC2D  F00E         	call	_kpRead	;wreg free
  1131  0009D2  A801               	btfss	?_kpRead^0,4,c
  1132  0009D4  EFEE  F004         	goto	u2511
  1133  0009D8  EFF0  F004         	goto	u2510
  1134  0009DC                     u2511:
  1135  0009DC  EF0A  F005         	goto	l2519
  1136  0009E0                     u2510:
  1137  0009E0                     
  1138                           ;newmain.c: 206:                 updateCalc();
  1139  0009E0  EC9F  F00D         	call	_updateCalc	;wreg free
  1140                           
  1141                           ;newmain.c: 208:                 ssdDigit(0, 0);
  1142  0009E4  0E00               	movlw	0
  1143  0009E6  6E0F               	movwf	ssdDigit@pos^0,c
  1144  0009E8  0E00               	movlw	0
  1145  0009EA  ECD6  F00C         	call	_ssdDigit
  1146  0009EE                     
  1147                           ;newmain.c: 210:                 if(cont % 2 == 0)
  1148  0009EE  B029               	btfsc	main@cont^0,0,c
  1149  0009F0  EFFC  F004         	goto	u2521
  1150  0009F4  EFFE  F004         	goto	u2520
  1151  0009F8                     u2521:
  1152  0009F8  EF04  F005         	goto	l2515
  1153  0009FC                     u2520:
  1154  0009FC                     
  1155                           ;newmain.c: 211:                     x = 0;
  1156  0009FC  0E00               	movlw	0
  1157  0009FE  6E2C               	movwf	(main@x+1)^0,c
  1158  000A00  0E00               	movlw	0
  1159  000A02  6E2B               	movwf	main@x^0,c
  1160  000A04  EF08  F005         	goto	l2517
  1161  000A08                     l2515:
  1162                           
  1163                           ;newmain.c: 214:                     y = 0;
  1164  000A08  0E00               	movlw	0
  1165  000A0A  6E2E               	movwf	(main@y+1)^0,c
  1166  000A0C  0E00               	movlw	0
  1167  000A0E  6E2D               	movwf	main@y^0,c
  1168  000A10                     l2517:
  1169                           
  1170                           ;newmain.c: 216:                 cont++;
  1171  000A10  4A29               	infsnz	main@cont^0,f,c
  1172  000A12  2A2A               	incf	(main@cont+1)^0,f,c
  1173  000A14                     l2519:
  1174                           
  1175                           ;newmain.c: 219:             if(((kpRead()) & (1<<(8))))
  1176  000A14  EC2D  F00E         	call	_kpRead	;wreg free
  1177  000A18  A002               	btfss	(?_kpRead+1)^0,0,c
  1178  000A1A  EF11  F005         	goto	u2531
  1179  000A1E  EF13  F005         	goto	u2530
  1180  000A22                     u2531:
  1181  000A22  EF17  F005         	goto	l2523
  1182  000A26                     u2530:
  1183  000A26                     
  1184                           ;newmain.c: 220:                 igual=1;
  1185  000A26  0E00               	movlw	0
  1186  000A28  6E4A               	movwf	(_igual+1)^0,c
  1187  000A2A  0E01               	movlw	1
  1188  000A2C  6E49               	movwf	_igual^0,c
  1189  000A2E                     l2523:
  1190                           
  1191                           ;newmain.c: 222:             if(((kpRead()) & (1<<(0))))
  1192  000A2E  EC2D  F00E         	call	_kpRead	;wreg free
  1193  000A32  A001               	btfss	?_kpRead^0,0,c
  1194  000A34  EF1E  F005         	goto	u2541
  1195  000A38  EF20  F005         	goto	u2540
  1196  000A3C                     u2541:
  1197  000A3C  EF24  F005         	goto	l2527
  1198  000A40                     u2540:
  1199  000A40                     
  1200                           ;newmain.c: 223:                 operacao = 3;
  1201  000A40  0E00               	movlw	0
  1202  000A42  6E40               	movwf	(_operacao+1)^0,c
  1203  000A44  0E03               	movlw	3
  1204  000A46  6E3F               	movwf	_operacao^0,c
  1205  000A48                     l2527:
  1206                           
  1207                           ;newmain.c: 227:        if(x != -1)
  1208  000A48  282B               	incf	main@x^0,w,c
  1209  000A4A  E108               	bnz	u2550
  1210  000A4C  282C               	incf	(main@x+1)^0,w,c
  1211  000A4E  B4D8               	btfsc	status,2,c
  1212  000A50  EF2C  F005         	goto	u2551
  1213  000A54  EF2E  F005         	goto	u2550
  1214  000A58                     u2551:
  1215  000A58  EF34  F005         	goto	l2531
  1216  000A5C                     u2550:
  1217  000A5C                     
  1218                           ;newmain.c: 228:            reles(1);
  1219  000A5C  0E00               	movlw	0
  1220  000A5E  6E02               	movwf	(reles@rele+1)^0,c
  1221  000A60  0E01               	movlw	1
  1222  000A62  6E01               	movwf	reles@rele^0,c
  1223  000A64  EC57  F00D         	call	_reles	;wreg free
  1224  000A68                     l2531:
  1225                           
  1226                           ;newmain.c: 230:        if(y != -1)
  1227  000A68  282D               	incf	main@y^0,w,c
  1228  000A6A  E108               	bnz	u2560
  1229  000A6C  282E               	incf	(main@y+1)^0,w,c
  1230  000A6E  B4D8               	btfsc	status,2,c
  1231  000A70  EF3C  F005         	goto	u2561
  1232  000A74  EF3E  F005         	goto	u2560
  1233  000A78                     u2561:
  1234  000A78  EF44  F005         	goto	l2535
  1235  000A7C                     u2560:
  1236  000A7C                     
  1237                           ;newmain.c: 231:            reles(2);
  1238  000A7C  0E00               	movlw	0
  1239  000A7E  6E02               	movwf	(reles@rele+1)^0,c
  1240  000A80  0E02               	movlw	2
  1241  000A82  6E01               	movwf	reles@rele^0,c
  1242  000A84  EC57  F00D         	call	_reles	;wreg free
  1243  000A88                     l2535:
  1244                           
  1245                           ;newmain.c: 233:        if(operacao == 0 && x != -1 && y != -1 && igual == 1){
  1246  000A88  503F               	movf	_operacao^0,w,c
  1247  000A8A  1040               	iorwf	(_operacao+1)^0,w,c
  1248  000A8C  A4D8               	btfss	status,2,c
  1249  000A8E  EF4B  F005         	goto	u2571
  1250  000A92  EF4D  F005         	goto	u2570
  1251  000A96                     u2571:
  1252  000A96  EF7C  F005         	goto	l2553
  1253  000A9A                     u2570:
  1254  000A9A  282B               	incf	main@x^0,w,c
  1255  000A9C  E108               	bnz	u2580
  1256  000A9E  282C               	incf	(main@x+1)^0,w,c
  1257  000AA0  B4D8               	btfsc	status,2,c
  1258  000AA2  EF55  F005         	goto	u2581
  1259  000AA6  EF57  F005         	goto	u2580
  1260  000AAA                     u2581:
  1261  000AAA  EF7C  F005         	goto	l2553
  1262  000AAE                     u2580:
  1263  000AAE  282D               	incf	main@y^0,w,c
  1264  000AB0  E108               	bnz	u2590
  1265  000AB2  282E               	incf	(main@y+1)^0,w,c
  1266  000AB4  B4D8               	btfsc	status,2,c
  1267  000AB6  EF5F  F005         	goto	u2591
  1268  000ABA  EF61  F005         	goto	u2590
  1269  000ABE                     u2591:
  1270  000ABE  EF7C  F005         	goto	l2553
  1271  000AC2                     u2590:
  1272  000AC2  0449               	decf	_igual^0,w,c
  1273  000AC4  104A               	iorwf	(_igual+1)^0,w,c
  1274  000AC6  A4D8               	btfss	status,2,c
  1275  000AC8  EF68  F005         	goto	u2601
  1276  000ACC  EF6A  F005         	goto	u2600
  1277  000AD0                     u2601:
  1278  000AD0  EF7C  F005         	goto	l2553
  1279  000AD4                     u2600:
  1280  000AD4                     
  1281                           ;newmain.c: 234:                 n = x + y;
  1282  000AD4  502D               	movf	main@y^0,w,c
  1283  000AD6  242B               	addwf	main@x^0,w,c
  1284  000AD8  6E27               	movwf	main@n^0,c
  1285  000ADA  502E               	movf	(main@y+1)^0,w,c
  1286  000ADC  202C               	addwfc	(main@x+1)^0,w,c
  1287  000ADE  6E28               	movwf	(main@n+1)^0,c
  1288  000AE0                     
  1289                           ;newmain.c: 235:                 print(n);
  1290  000AE0  C027  F011         	movff	main@n,print@n
  1291  000AE4  C028  F012         	movff	main@n+1,print@n+1
  1292  000AE8  ECA8  F00B         	call	_print	;wreg free
  1293  000AEC                     
  1294                           ;newmain.c: 236:                 operacao = -1;
  1295  000AEC  683F               	setf	_operacao^0,c
  1296  000AEE  6840               	setf	(_operacao+1)^0,c
  1297  000AF0                     
  1298                           ;newmain.c: 237:                 x = -1;
  1299  000AF0  682B               	setf	main@x^0,c
  1300  000AF2  682C               	setf	(main@x+1)^0,c
  1301  000AF4                     
  1302                           ;newmain.c: 238:                 y = -1;
  1303  000AF4  682D               	setf	main@y^0,c
  1304  000AF6  682E               	setf	(main@y+1)^0,c
  1305  000AF8                     l2553:
  1306                           
  1307                           ;newmain.c: 241:        if(operacao == 1 && x != -1 && y != -1 && igual == 1){
  1308  000AF8  043F               	decf	_operacao^0,w,c
  1309  000AFA  1040               	iorwf	(_operacao+1)^0,w,c
  1310  000AFC  A4D8               	btfss	status,2,c
  1311  000AFE  EF83  F005         	goto	u2611
  1312  000B02  EF85  F005         	goto	u2610
  1313  000B06                     u2611:
  1314  000B06  EFB4  F005         	goto	l2571
  1315  000B0A                     u2610:
  1316  000B0A  282B               	incf	main@x^0,w,c
  1317  000B0C  E108               	bnz	u2620
  1318  000B0E  282C               	incf	(main@x+1)^0,w,c
  1319  000B10  B4D8               	btfsc	status,2,c
  1320  000B12  EF8D  F005         	goto	u2621
  1321  000B16  EF8F  F005         	goto	u2620
  1322  000B1A                     u2621:
  1323  000B1A  EFB4  F005         	goto	l2571
  1324  000B1E                     u2620:
  1325  000B1E  282D               	incf	main@y^0,w,c
  1326  000B20  E108               	bnz	u2630
  1327  000B22  282E               	incf	(main@y+1)^0,w,c
  1328  000B24  B4D8               	btfsc	status,2,c
  1329  000B26  EF97  F005         	goto	u2631
  1330  000B2A  EF99  F005         	goto	u2630
  1331  000B2E                     u2631:
  1332  000B2E  EFB4  F005         	goto	l2571
  1333  000B32                     u2630:
  1334  000B32  0449               	decf	_igual^0,w,c
  1335  000B34  104A               	iorwf	(_igual+1)^0,w,c
  1336  000B36  A4D8               	btfss	status,2,c
  1337  000B38  EFA0  F005         	goto	u2641
  1338  000B3C  EFA2  F005         	goto	u2640
  1339  000B40                     u2641:
  1340  000B40  EFB4  F005         	goto	l2571
  1341  000B44                     u2640:
  1342  000B44                     
  1343                           ;newmain.c: 242:                 n = x - y;
  1344  000B44  502D               	movf	main@y^0,w,c
  1345  000B46  5C2B               	subwf	main@x^0,w,c
  1346  000B48  6E27               	movwf	main@n^0,c
  1347  000B4A  502E               	movf	(main@y+1)^0,w,c
  1348  000B4C  582C               	subwfb	(main@x+1)^0,w,c
  1349  000B4E  6E28               	movwf	(main@n+1)^0,c
  1350  000B50                     
  1351                           ;newmain.c: 243:                 print(n);
  1352  000B50  C027  F011         	movff	main@n,print@n
  1353  000B54  C028  F012         	movff	main@n+1,print@n+1
  1354  000B58  ECA8  F00B         	call	_print	;wreg free
  1355  000B5C                     
  1356                           ;newmain.c: 244:                 operacao = -1;
  1357  000B5C  683F               	setf	_operacao^0,c
  1358  000B5E  6840               	setf	(_operacao+1)^0,c
  1359  000B60                     
  1360                           ;newmain.c: 245:                 x = -1;
  1361  000B60  682B               	setf	main@x^0,c
  1362  000B62  682C               	setf	(main@x+1)^0,c
  1363  000B64                     
  1364                           ;newmain.c: 246:                 y = -1;
  1365  000B64  682D               	setf	main@y^0,c
  1366  000B66  682E               	setf	(main@y+1)^0,c
  1367  000B68                     l2571:
  1368                           
  1369                           ;newmain.c: 249:        if(operacao == 2 && x != -1 && y != -1 && igual == 1){
  1370  000B68  0E02               	movlw	2
  1371  000B6A  183F               	xorwf	_operacao^0,w,c
  1372  000B6C  1040               	iorwf	(_operacao+1)^0,w,c
  1373  000B6E  A4D8               	btfss	status,2,c
  1374  000B70  EFBC  F005         	goto	u2651
  1375  000B74  EFBE  F005         	goto	u2650
  1376  000B78                     u2651:
  1377  000B78  EFF5  F005         	goto	l2589
  1378  000B7C                     u2650:
  1379  000B7C  282B               	incf	main@x^0,w,c
  1380  000B7E  E108               	bnz	u2660
  1381  000B80  282C               	incf	(main@x+1)^0,w,c
  1382  000B82  B4D8               	btfsc	status,2,c
  1383  000B84  EFC6  F005         	goto	u2661
  1384  000B88  EFC8  F005         	goto	u2660
  1385  000B8C                     u2661:
  1386  000B8C  EFF5  F005         	goto	l2589
  1387  000B90                     u2660:
  1388  000B90  282D               	incf	main@y^0,w,c
  1389  000B92  E108               	bnz	u2670
  1390  000B94  282E               	incf	(main@y+1)^0,w,c
  1391  000B96  B4D8               	btfsc	status,2,c
  1392  000B98  EFD0  F005         	goto	u2671
  1393  000B9C  EFD2  F005         	goto	u2670
  1394  000BA0                     u2671:
  1395  000BA0  EFF5  F005         	goto	l2589
  1396  000BA4                     u2670:
  1397  000BA4  0449               	decf	_igual^0,w,c
  1398  000BA6  104A               	iorwf	(_igual+1)^0,w,c
  1399  000BA8  A4D8               	btfss	status,2,c
  1400  000BAA  EFD9  F005         	goto	u2681
  1401  000BAE  EFDB  F005         	goto	u2680
  1402  000BB2                     u2681:
  1403  000BB2  EFF5  F005         	goto	l2589
  1404  000BB6                     u2680:
  1405  000BB6                     
  1406                           ;newmain.c: 250:                 n = x * y;
  1407  000BB6  C02B  F001         	movff	main@x,___wmul@multiplier
  1408  000BBA  C02C  F002         	movff	main@x+1,___wmul@multiplier+1
  1409  000BBE  C02D  F003         	movff	main@y,___wmul@multiplicand
  1410  000BC2  C02E  F004         	movff	main@y+1,___wmul@multiplicand+1
  1411  000BC6  ECEA  F00D         	call	___wmul	;wreg free
  1412  000BCA  C001  F027         	movff	?___wmul,main@n
  1413  000BCE  C002  F028         	movff	?___wmul+1,main@n+1
  1414  000BD2                     
  1415                           ;newmain.c: 251:                 print(n);
  1416  000BD2  C027  F011         	movff	main@n,print@n
  1417  000BD6  C028  F012         	movff	main@n+1,print@n+1
  1418  000BDA  ECA8  F00B         	call	_print	;wreg free
  1419  000BDE                     
  1420                           ;newmain.c: 252:                 operacao = -1;
  1421  000BDE  683F               	setf	_operacao^0,c
  1422  000BE0  6840               	setf	(_operacao+1)^0,c
  1423  000BE2                     
  1424                           ;newmain.c: 253:                 x = -1;
  1425  000BE2  682B               	setf	main@x^0,c
  1426  000BE4  682C               	setf	(main@x+1)^0,c
  1427  000BE6                     
  1428                           ;newmain.c: 254:                 y = -1;
  1429  000BE6  682D               	setf	main@y^0,c
  1430  000BE8  682E               	setf	(main@y+1)^0,c
  1431  000BEA                     l2589:
  1432                           
  1433                           ;newmain.c: 257:        if(operacao == 3 && x != -1 && y != -1 && igual == 1){
  1434  000BEA  0E03               	movlw	3
  1435  000BEC  183F               	xorwf	_operacao^0,w,c
  1436  000BEE  1040               	iorwf	(_operacao+1)^0,w,c
  1437  000BF0  A4D8               	btfss	status,2,c
  1438  000BF2  EFFD  F005         	goto	u2691
  1439  000BF6  EFFF  F005         	goto	u2690
  1440  000BFA                     u2691:
  1441  000BFA  EF36  F006         	goto	l2605
  1442  000BFE                     u2690:
  1443  000BFE  282B               	incf	main@x^0,w,c
  1444  000C00  E108               	bnz	u2700
  1445  000C02  282C               	incf	(main@x+1)^0,w,c
  1446  000C04  B4D8               	btfsc	status,2,c
  1447  000C06  EF07  F006         	goto	u2701
  1448  000C0A  EF09  F006         	goto	u2700
  1449  000C0E                     u2701:
  1450  000C0E  EF36  F006         	goto	l2605
  1451  000C12                     u2700:
  1452  000C12  282D               	incf	main@y^0,w,c
  1453  000C14  E108               	bnz	u2710
  1454  000C16  282E               	incf	(main@y+1)^0,w,c
  1455  000C18  B4D8               	btfsc	status,2,c
  1456  000C1A  EF11  F006         	goto	u2711
  1457  000C1E  EF13  F006         	goto	u2710
  1458  000C22                     u2711:
  1459  000C22  EF36  F006         	goto	l2605
  1460  000C26                     u2710:
  1461  000C26  0449               	decf	_igual^0,w,c
  1462  000C28  104A               	iorwf	(_igual+1)^0,w,c
  1463  000C2A  A4D8               	btfss	status,2,c
  1464  000C2C  EF1A  F006         	goto	u2721
  1465  000C30  EF1C  F006         	goto	u2720
  1466  000C34                     u2721:
  1467  000C34  EF36  F006         	goto	l2605
  1468  000C38                     u2720:
  1469  000C38                     
  1470                           ;newmain.c: 258:                 n = x / y;
  1471  000C38  C02B  F001         	movff	main@x,___awdiv@dividend
  1472  000C3C  C02C  F002         	movff	main@x+1,___awdiv@dividend+1
  1473  000C40  C02D  F003         	movff	main@y,___awdiv@divisor
  1474  000C44  C02E  F004         	movff	main@y+1,___awdiv@divisor+1
  1475  000C48  EC46  F00B         	call	___awdiv	;wreg free
  1476  000C4C  C001  F027         	movff	?___awdiv,main@n
  1477  000C50  C002  F028         	movff	?___awdiv+1,main@n+1
  1478                           
  1479                           ;newmain.c: 259:                 print(n);
  1480  000C54  C027  F011         	movff	main@n,print@n
  1481  000C58  C028  F012         	movff	main@n+1,print@n+1
  1482  000C5C  ECA8  F00B         	call	_print	;wreg free
  1483  000C60                     
  1484                           ;newmain.c: 260:                 operacao = -1;
  1485  000C60  683F               	setf	_operacao^0,c
  1486  000C62  6840               	setf	(_operacao+1)^0,c
  1487  000C64                     
  1488                           ;newmain.c: 261:                 x = -1;
  1489  000C64  682B               	setf	main@x^0,c
  1490  000C66  682C               	setf	(main@x+1)^0,c
  1491  000C68                     
  1492                           ;newmain.c: 262:                 y = -1;
  1493  000C68  682D               	setf	main@y^0,c
  1494  000C6A  682E               	setf	(main@y+1)^0,c
  1495  000C6C                     l2605:
  1496                           
  1497                           ;newmain.c: 265:        if(igual == 1){
  1498  000C6C  0449               	decf	_igual^0,w,c
  1499  000C6E  104A               	iorwf	(_igual+1)^0,w,c
  1500  000C70  A4D8               	btfss	status,2,c
  1501  000C72  EF3D  F006         	goto	u2731
  1502  000C76  EF3F  F006         	goto	u2730
  1503  000C7A                     u2731:
  1504  000C7A  EF58  F006         	goto	l2613
  1505  000C7E                     u2730:
  1506  000C7E                     
  1507                           ;newmain.c: 269:            ventoinha(1);
  1508  000C7E  0E00               	movlw	0
  1509  000C80  6E02               	movwf	(ventoinha@v+1)^0,c
  1510  000C82  0E01               	movlw	1
  1511  000C84  6E01               	movwf	ventoinha@v^0,c
  1512  000C86  EC7D  F00D         	call	_ventoinha	;wreg free
  1513                           
  1514                           ;newmain.c: 270:            ventoinha(0);
  1515  000C8A  0E00               	movlw	0
  1516  000C8C  6E02               	movwf	(ventoinha@v+1)^0,c
  1517  000C8E  0E00               	movlw	0
  1518  000C90  6E01               	movwf	ventoinha@v^0,c
  1519  000C92  EC7D  F00D         	call	_ventoinha	;wreg free
  1520                           
  1521                           ;newmain.c: 271:            reles(-1);
  1522  000C96  0EFF               	movlw	255
  1523  000C98  6E02               	movwf	(reles@rele+1)^0,c
  1524  000C9A  6801               	setf	reles@rele^0,c
  1525  000C9C  EC57  F00D         	call	_reles	;wreg free
  1526  000CA0                     
  1527                           ;newmain.c: 272:            igual = 0;
  1528  000CA0  0E00               	movlw	0
  1529  000CA2  6E4A               	movwf	(_igual+1)^0,c
  1530  000CA4  0E00               	movlw	0
  1531  000CA6  6E49               	movwf	_igual^0,c
  1532  000CA8                     
  1533                           ;newmain.c: 273:            a1 = 1;
  1534  000CA8  0E00               	movlw	0
  1535  000CAA  6E48               	movwf	(_a1+1)^0,c
  1536  000CAC  0E01               	movlw	1
  1537  000CAE  6E47               	movwf	_a1^0,c
  1538  000CB0                     l2613:
  1539                           
  1540                           ;newmain.c: 277:         for(tempo=0; tempo < 900; tempo++);
  1541  000CB0  0E00               	movlw	0
  1542  000CB2  6E26               	movwf	(main@tempo+1)^0,c
  1543  000CB4  0E00               	movlw	0
  1544  000CB6  6E25               	movwf	main@tempo^0,c
  1545  000CB8                     l2615:
  1546  000CB8  BE26               	btfsc	(main@tempo+1)^0,7,c
  1547  000CBA  EF68  F006         	goto	u2741
  1548  000CBE  0E84               	movlw	132
  1549  000CC0  5C25               	subwf	main@tempo^0,w,c
  1550  000CC2  0E03               	movlw	3
  1551  000CC4  5826               	subwfb	(main@tempo+1)^0,w,c
  1552  000CC6  A0D8               	btfss	status,0,c
  1553  000CC8  EF68  F006         	goto	u2741
  1554  000CCC  EF6A  F006         	goto	u2740
  1555  000CD0                     u2741:
  1556  000CD0  EF6C  F006         	goto	l2619
  1557  000CD4                     u2740:
  1558  000CD4  EF70  F006         	goto	l2623
  1559  000CD8                     l2619:
  1560  000CD8  4A25               	infsnz	main@tempo^0,f,c
  1561  000CDA  2A26               	incf	(main@tempo+1)^0,f,c
  1562  000CDC  EF5C  F006         	goto	l2615
  1563  000CE0                     l2623:
  1564                           
  1565                           ;newmain.c: 278:         ssdUpdate();
  1566  000CE0  EC83  F009         	call	_ssdUpdate	;wreg free
  1567  000CE4                     
  1568                           ;newmain.c: 279:         kpDebounce();
  1569  000CE4  ECC6  F008         	call	_kpDebounce	;wreg free
  1570                           
  1571                           ;newmain.c: 281:     }
  1572  000CE8  EF6E  F003         	goto	l2379
  1573  000CEC  EF00  F000         	goto	start
  1574  000CF0                     __end_of_main:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _ventoinha *****************
  1578 ;; Defined at:
  1579 ;;		line 74 in file "Calculator.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  v               2    0[COMRAM] int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  i               2    2[COMRAM] int 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         2       0       0       0       0       0       0
  1594 ;;      Locals:         2       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0
  1596 ;;      Totals:         4       0       0       0       0       0       0
  1597 ;;Total ram usage:        4 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text1
  1607  001AFA                     __ptext1:
  1608                           	callstack 0
  1609  001AFA                     _ventoinha:
  1610                           	callstack 30
  1611  001AFA                     
  1612                           ;Calculator.c: 76:     int i;;Calculator.c: 78:     if(v == 1)
  1613  001AFA  0401               	decf	ventoinha@v^0,w,c
  1614  001AFC  1002               	iorwf	(ventoinha@v+1)^0,w,c
  1615  001AFE  A4D8               	btfss	status,2,c
  1616  001B00  EF84  F00D         	goto	u2261
  1617  001B04  EF86  F00D         	goto	u2260
  1618  001B08                     u2261:
  1619  001B08  EF89  F00D         	goto	l341
  1620  001B0C                     u2260:
  1621  001B0C                     
  1622                           ;Calculator.c: 79:         TRISCbits.RC2 = 1;
  1623  001B0C  8494               	bsf	148,2,c	;volatile
  1624  001B0E  EF8A  F00D         	goto	l2289
  1625  001B12                     l341:
  1626                           
  1627                           ;Calculator.c: 82:         TRISCbits.RC2 = 0;
  1628  001B12  9494               	bcf	148,2,c	;volatile
  1629  001B14                     l2289:
  1630                           
  1631                           ;Calculator.c: 84:     for(i = 0; i < 30000; i++);
  1632  001B14  0E00               	movlw	0
  1633  001B16  6E04               	movwf	(ventoinha@i+1)^0,c
  1634  001B18  0E00               	movlw	0
  1635  001B1A  6E03               	movwf	ventoinha@i^0,c
  1636  001B1C                     l2295:
  1637  001B1C  4A03               	infsnz	ventoinha@i^0,f,c
  1638  001B1E  2A04               	incf	(ventoinha@i+1)^0,f,c
  1639  001B20  BE04               	btfsc	(ventoinha@i+1)^0,7,c
  1640  001B22  EF9C  F00D         	goto	u2271
  1641  001B26  0E30               	movlw	48
  1642  001B28  5C03               	subwf	ventoinha@i^0,w,c
  1643  001B2A  0E75               	movlw	117
  1644  001B2C  5804               	subwfb	(ventoinha@i+1)^0,w,c
  1645  001B2E  A0D8               	btfss	status,0,c
  1646  001B30  EF9C  F00D         	goto	u2271
  1647  001B34  EF9E  F00D         	goto	u2270
  1648  001B38                     u2271:
  1649  001B38  EF8E  F00D         	goto	l2295
  1650  001B3C                     u2270:
  1651  001B3C  0012               	return		;funcret
  1652  001B3E                     __end_of_ventoinha:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _updateCalc *****************
  1656 ;; Defined at:
  1657 ;;		line 16 in file "newmain.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0
  1674 ;;      Totals:         0       0       0       0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    2
  1678 ;; This function calls:
  1679 ;;		_print
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text2
  1686  001B3E                     __ptext2:
  1687                           	callstack 0
  1688  001B3E                     _updateCalc:
  1689                           	callstack 28
  1690  001B3E                     
  1691                           ;newmain.c: 18:     if(igual == 1 || a1 == 1){
  1692  001B3E  0449               	decf	_igual^0,w,c
  1693  001B40  104A               	iorwf	(_igual+1)^0,w,c
  1694  001B42  B4D8               	btfsc	status,2,c
  1695  001B44  EFA6  F00D         	goto	u2131
  1696  001B48  EFA8  F00D         	goto	u2130
  1697  001B4C                     u2131:
  1698  001B4C  EFB1  F00D         	goto	l2155
  1699  001B50                     u2130:
  1700  001B50  0447               	decf	_a1^0,w,c
  1701  001B52  1048               	iorwf	(_a1+1)^0,w,c
  1702  001B54  A4D8               	btfss	status,2,c
  1703  001B56  EFAF  F00D         	goto	u2141
  1704  001B5A  EFB1  F00D         	goto	u2140
  1705  001B5E                     u2141:
  1706  001B5E  EFBB  F00D         	goto	l44
  1707  001B62                     u2140:
  1708  001B62                     l2155:
  1709                           
  1710                           ;newmain.c: 19:         igual = 0;
  1711  001B62  0E00               	movlw	0
  1712  001B64  6E4A               	movwf	(_igual+1)^0,c
  1713  001B66  0E00               	movlw	0
  1714  001B68  6E49               	movwf	_igual^0,c
  1715  001B6A                     
  1716                           ;newmain.c: 20:         print(0);
  1717  001B6A  0E00               	movlw	0
  1718  001B6C  6E12               	movwf	(print@n+1)^0,c
  1719  001B6E  0E00               	movlw	0
  1720  001B70  6E11               	movwf	print@n^0,c
  1721  001B72  ECA8  F00B         	call	_print	;wreg free
  1722  001B76                     l44:
  1723  001B76  0012               	return		;funcret
  1724  001B78                     __end_of_updateCalc:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _print *****************
  1728 ;; Defined at:
  1729 ;;		line 11 in file "Calculator.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  n               2   16[COMRAM] int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1743 ;;      Params:         2       0       0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0
  1746 ;;      Totals:         2       0       0       0       0       0       0
  1747 ;;Total ram usage:        2 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    1
  1750 ;; This function calls:
  1751 ;;		___awdiv
  1752 ;;		___awmod
  1753 ;;		_ssdDigit
  1754 ;; This function is called by:
  1755 ;;		_updateCalc
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text3
  1761  001750                     __ptext3:
  1762                           	callstack 0
  1763  001750                     _print:
  1764                           	callstack 28
  1765  001750                     
  1766                           ;Calculator.c: 13:     ssdDigit(n % 10, 3);
  1767  001750  0E03               	movlw	3
  1768  001752  6E0F               	movwf	ssdDigit@pos^0,c
  1769  001754  C011  F009         	movff	print@n,___awmod@dividend
  1770  001758  C012  F00A         	movff	print@n+1,___awmod@dividend+1
  1771  00175C  0E00               	movlw	0
  1772  00175E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1773  001760  0E0A               	movlw	10
  1774  001762  6E0B               	movwf	___awmod@divisor^0,c
  1775  001764  EC03  F00C         	call	___awmod	;wreg free
  1776  001768  5009               	movf	?___awmod^0,w,c
  1777  00176A  ECD6  F00C         	call	_ssdDigit
  1778                           
  1779                           ;Calculator.c: 14:     ssdDigit((n/10) % 10, 2);
  1780  00176E  0E02               	movlw	2
  1781  001770  6E0F               	movwf	ssdDigit@pos^0,c
  1782  001772  0E00               	movlw	0
  1783  001774  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1784  001776  0E0A               	movlw	10
  1785  001778  6E03               	movwf	___awdiv@divisor^0,c
  1786  00177A  C011  F001         	movff	print@n,___awdiv@dividend
  1787  00177E  C012  F002         	movff	print@n+1,___awdiv@dividend+1
  1788  001782  EC46  F00B         	call	___awdiv	;wreg free
  1789  001786  C001  F009         	movff	?___awdiv,___awmod@dividend
  1790  00178A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1791  00178E  0E00               	movlw	0
  1792  001790  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1793  001792  0E0A               	movlw	10
  1794  001794  6E0B               	movwf	___awmod@divisor^0,c
  1795  001796  EC03  F00C         	call	___awmod	;wreg free
  1796  00179A  5009               	movf	?___awmod^0,w,c
  1797  00179C  ECD6  F00C         	call	_ssdDigit
  1798                           
  1799                           ;Calculator.c: 15:     ssdDigit((n/100) % 10, 1);
  1800  0017A0  0E01               	movlw	1
  1801  0017A2  6E0F               	movwf	ssdDigit@pos^0,c
  1802  0017A4  0E00               	movlw	0
  1803  0017A6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1804  0017A8  0E64               	movlw	100
  1805  0017AA  6E03               	movwf	___awdiv@divisor^0,c
  1806  0017AC  C011  F001         	movff	print@n,___awdiv@dividend
  1807  0017B0  C012  F002         	movff	print@n+1,___awdiv@dividend+1
  1808  0017B4  EC46  F00B         	call	___awdiv	;wreg free
  1809  0017B8  C001  F009         	movff	?___awdiv,___awmod@dividend
  1810  0017BC  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1811  0017C0  0E00               	movlw	0
  1812  0017C2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1813  0017C4  0E0A               	movlw	10
  1814  0017C6  6E0B               	movwf	___awmod@divisor^0,c
  1815  0017C8  EC03  F00C         	call	___awmod	;wreg free
  1816  0017CC  5009               	movf	?___awmod^0,w,c
  1817  0017CE  ECD6  F00C         	call	_ssdDigit
  1818                           
  1819                           ;Calculator.c: 16:     ssdDigit((n/1000) % 10, 0);
  1820  0017D2  0E00               	movlw	0
  1821  0017D4  6E0F               	movwf	ssdDigit@pos^0,c
  1822  0017D6  0E03               	movlw	3
  1823  0017D8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1824  0017DA  0EE8               	movlw	232
  1825  0017DC  6E03               	movwf	___awdiv@divisor^0,c
  1826  0017DE  C011  F001         	movff	print@n,___awdiv@dividend
  1827  0017E2  C012  F002         	movff	print@n+1,___awdiv@dividend+1
  1828  0017E6  EC46  F00B         	call	___awdiv	;wreg free
  1829  0017EA  C001  F009         	movff	?___awdiv,___awmod@dividend
  1830  0017EE  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1831  0017F2  0E00               	movlw	0
  1832  0017F4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1833  0017F6  0E0A               	movlw	10
  1834  0017F8  6E0B               	movwf	___awmod@divisor^0,c
  1835  0017FA  EC03  F00C         	call	___awmod	;wreg free
  1836  0017FE  5009               	movf	?___awmod^0,w,c
  1837  001800  ECD6  F00C         	call	_ssdDigit
  1838  001804  0012               	return		;funcret
  1839  001806                     __end_of_print:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _ssdDigit *****************
  1843 ;; Defined at:
  1844 ;;		line 38 in file "ssd.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  val             1    wreg     unsigned char 
  1847 ;;  pos             1   14[COMRAM] unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  val             1   15[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1859 ;;      Params:         1       0       0       0       0       0       0
  1860 ;;      Locals:         1       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0
  1862 ;;      Totals:         2       0       0       0       0       0       0
  1863 ;;Total ram usage:        2 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;;		_print
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text4
  1874  0019AC                     __ptext4:
  1875                           	callstack 0
  1876  0019AC                     _ssdDigit:
  1877                           	callstack 28
  1878                           
  1879                           ;incstack = 0
  1880                           ;ssdDigit@val stored from wreg
  1881  0019AC  6E10               	movwf	ssdDigit@val^0,c
  1882  0019AE                     
  1883                           ;ssd.c: 39:     if (pos == 0) {
  1884  0019AE  500F               	movf	ssdDigit@pos^0,w,c
  1885  0019B0  A4D8               	btfss	status,2,c
  1886  0019B2  EFDD  F00C         	goto	u1491
  1887  0019B6  EFDF  F00C         	goto	u1490
  1888  0019BA                     u1491:
  1889  0019BA  EFE1  F00C         	goto	l1893
  1890  0019BE                     u1490:
  1891  0019BE                     
  1892                           ;ssd.c: 40:         v0 = val;
  1893  0019BE  C010  F04E         	movff	ssdDigit@val,_v0
  1894  0019C2                     l1893:
  1895                           
  1896                           ;ssd.c: 42:     if (pos == 1) {
  1897  0019C2  040F               	decf	ssdDigit@pos^0,w,c
  1898  0019C4  A4D8               	btfss	status,2,c
  1899  0019C6  EFE7  F00C         	goto	u1501
  1900  0019CA  EFE9  F00C         	goto	u1500
  1901  0019CE                     u1501:
  1902  0019CE  EFEB  F00C         	goto	l1897
  1903  0019D2                     u1500:
  1904  0019D2                     
  1905                           ;ssd.c: 43:         v1 = val;
  1906  0019D2  C010  F04D         	movff	ssdDigit@val,_v1
  1907  0019D6                     l1897:
  1908                           
  1909                           ;ssd.c: 45:     if (pos == 2) {
  1910  0019D6  0E02               	movlw	2
  1911  0019D8  180F               	xorwf	ssdDigit@pos^0,w,c
  1912  0019DA  A4D8               	btfss	status,2,c
  1913  0019DC  EFF2  F00C         	goto	u1511
  1914  0019E0  EFF4  F00C         	goto	u1510
  1915  0019E4                     u1511:
  1916  0019E4  EFF6  F00C         	goto	l1901
  1917  0019E8                     u1510:
  1918  0019E8                     
  1919                           ;ssd.c: 46:         v2 = val;
  1920  0019E8  C010  F04C         	movff	ssdDigit@val,_v2
  1921  0019EC                     l1901:
  1922                           
  1923                           ;ssd.c: 48:     if (pos == 3) {
  1924  0019EC  0E03               	movlw	3
  1925  0019EE  180F               	xorwf	ssdDigit@pos^0,w,c
  1926  0019F0  A4D8               	btfss	status,2,c
  1927  0019F2  EFFD  F00C         	goto	u1521
  1928  0019F6  EFFF  F00C         	goto	u1520
  1929  0019FA                     u1521:
  1930  0019FA  EF01  F00D         	goto	l287
  1931  0019FE                     u1520:
  1932  0019FE                     
  1933                           ;ssd.c: 49:         v3 = val;
  1934  0019FE  C010  F04B         	movff	ssdDigit@val,_v3
  1935  001A02                     l287:
  1936  001A02  0012               	return		;funcret
  1937  001A04                     __end_of_ssdDigit:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function ___awmod *****************
  1941 ;; Defined at:
  1942 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  dividend        2    8[COMRAM] int 
  1945 ;;  divisor         2   10[COMRAM] int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  sign            1   13[COMRAM] unsigned char 
  1948 ;;  counter         1   12[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2    8[COMRAM] int 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         4       0       0       0       0       0       0
  1959 ;;      Locals:         2       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0
  1961 ;;      Totals:         6       0       0       0       0       0       0
  1962 ;;Total ram usage:        6 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_print
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text5
  1972  001806                     __ptext5:
  1973                           	callstack 0
  1974  001806                     ___awmod:
  1975                           	callstack 28
  1976  001806  0E00               	movlw	0
  1977  001808  6E0E               	movwf	___awmod@sign^0,c
  1978  00180A  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  1979  00180C  EF0C  F00C         	goto	u1850
  1980  001810  EF0A  F00C         	goto	u1851
  1981  001814                     u1851:
  1982  001814  EF12  F00C         	goto	l2041
  1983  001818                     u1850:
  1984  001818  6C09               	negf	___awmod@dividend^0,c
  1985  00181A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  1986  00181C  B0D8               	btfsc	status,0,c
  1987  00181E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  1988  001820  0E01               	movlw	1
  1989  001822  6E0E               	movwf	___awmod@sign^0,c
  1990  001824                     l2041:
  1991  001824  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  1992  001826  EF19  F00C         	goto	u1860
  1993  00182A  EF17  F00C         	goto	u1861
  1994  00182E                     u1861:
  1995  00182E  EF1D  F00C         	goto	l2045
  1996  001832                     u1860:
  1997  001832  6C0B               	negf	___awmod@divisor^0,c
  1998  001834  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  1999  001836  B0D8               	btfsc	status,0,c
  2000  001838  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  2001  00183A                     l2045:
  2002  00183A  500B               	movf	___awmod@divisor^0,w,c
  2003  00183C  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  2004  00183E  B4D8               	btfsc	status,2,c
  2005  001840  EF24  F00C         	goto	u1871
  2006  001844  EF26  F00C         	goto	u1870
  2007  001848                     u1871:
  2008  001848  EF4A  F00C         	goto	l2061
  2009  00184C                     u1870:
  2010  00184C  0E01               	movlw	1
  2011  00184E  6E0D               	movwf	___awmod@counter^0,c
  2012  001850  EF2E  F00C         	goto	l2051
  2013  001854                     l2049:
  2014  001854  90D8               	bcf	status,0,c
  2015  001856  360B               	rlcf	___awmod@divisor^0,f,c
  2016  001858  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  2017  00185A  2A0D               	incf	___awmod@counter^0,f,c
  2018  00185C                     l2051:
  2019  00185C  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  2020  00185E  EF33  F00C         	goto	u1881
  2021  001862  EF35  F00C         	goto	u1880
  2022  001866                     u1881:
  2023  001866  EF2A  F00C         	goto	l2049
  2024  00186A                     u1880:
  2025  00186A                     l2053:
  2026  00186A  500B               	movf	___awmod@divisor^0,w,c
  2027  00186C  5C09               	subwf	___awmod@dividend^0,w,c
  2028  00186E  500C               	movf	(___awmod@divisor+1)^0,w,c
  2029  001870  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  2030  001872  A0D8               	btfss	status,0,c
  2031  001874  EF3E  F00C         	goto	u1891
  2032  001878  EF40  F00C         	goto	u1890
  2033  00187C                     u1891:
  2034  00187C  EF44  F00C         	goto	l2057
  2035  001880                     u1890:
  2036  001880  500B               	movf	___awmod@divisor^0,w,c
  2037  001882  5E09               	subwf	___awmod@dividend^0,f,c
  2038  001884  500C               	movf	(___awmod@divisor+1)^0,w,c
  2039  001886  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  2040  001888                     l2057:
  2041  001888  90D8               	bcf	status,0,c
  2042  00188A  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  2043  00188C  320B               	rrcf	___awmod@divisor^0,f,c
  2044  00188E  2E0D               	decfsz	___awmod@counter^0,f,c
  2045  001890  EF35  F00C         	goto	l2053
  2046  001894                     l2061:
  2047  001894  500E               	movf	___awmod@sign^0,w,c
  2048  001896  B4D8               	btfsc	status,2,c
  2049  001898  EF50  F00C         	goto	u1901
  2050  00189C  EF52  F00C         	goto	u1900
  2051  0018A0                     u1901:
  2052  0018A0  EF56  F00C         	goto	l2065
  2053  0018A4                     u1900:
  2054  0018A4  6C09               	negf	___awmod@dividend^0,c
  2055  0018A6  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2056  0018A8  B0D8               	btfsc	status,0,c
  2057  0018AA  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2058  0018AC                     l2065:
  2059  0018AC  C009  F009         	movff	___awmod@dividend,?___awmod
  2060  0018B0  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  2061  0018B4  0012               	return		;funcret
  2062  0018B6                     __end_of___awmod:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function ___awdiv *****************
  2066 ;; Defined at:
  2067 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  dividend        2    0[COMRAM] int 
  2070 ;;  divisor         2    2[COMRAM] int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  quotient        2    6[COMRAM] int 
  2073 ;;  sign            1    5[COMRAM] unsigned char 
  2074 ;;  counter         1    4[COMRAM] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2    0[COMRAM] int 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2084 ;;      Params:         4       0       0       0       0       0       0
  2085 ;;      Locals:         4       0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0
  2087 ;;      Totals:         8       0       0       0       0       0       0
  2088 ;;Total ram usage:        8 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;;		_print
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text6
  2099  00168C                     __ptext6:
  2100                           	callstack 0
  2101  00168C                     ___awdiv:
  2102                           	callstack 28
  2103  00168C  0E00               	movlw	0
  2104  00168E  6E06               	movwf	___awdiv@sign^0,c
  2105  001690  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2106  001692  EF4F  F00B         	goto	u1790
  2107  001696  EF4D  F00B         	goto	u1791
  2108  00169A                     u1791:
  2109  00169A  EF55  F00B         	goto	l1997
  2110  00169E                     u1790:
  2111  00169E  6C03               	negf	___awdiv@divisor^0,c
  2112  0016A0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2113  0016A2  B0D8               	btfsc	status,0,c
  2114  0016A4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2115  0016A6  0E01               	movlw	1
  2116  0016A8  6E06               	movwf	___awdiv@sign^0,c
  2117  0016AA                     l1997:
  2118  0016AA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2119  0016AC  EF5C  F00B         	goto	u1800
  2120  0016B0  EF5A  F00B         	goto	u1801
  2121  0016B4                     u1801:
  2122  0016B4  EF62  F00B         	goto	l2003
  2123  0016B8                     u1800:
  2124  0016B8  6C01               	negf	___awdiv@dividend^0,c
  2125  0016BA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2126  0016BC  B0D8               	btfsc	status,0,c
  2127  0016BE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2128  0016C0  0E01               	movlw	1
  2129  0016C2  1A06               	xorwf	___awdiv@sign^0,f,c
  2130  0016C4                     l2003:
  2131  0016C4  0E00               	movlw	0
  2132  0016C6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2133  0016C8  0E00               	movlw	0
  2134  0016CA  6E07               	movwf	___awdiv@quotient^0,c
  2135  0016CC  5003               	movf	___awdiv@divisor^0,w,c
  2136  0016CE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2137  0016D0  B4D8               	btfsc	status,2,c
  2138  0016D2  EF6D  F00B         	goto	u1811
  2139  0016D6  EF6F  F00B         	goto	u1810
  2140  0016DA                     u1811:
  2141  0016DA  EF97  F00B         	goto	l2025
  2142  0016DE                     u1810:
  2143  0016DE  0E01               	movlw	1
  2144  0016E0  6E05               	movwf	___awdiv@counter^0,c
  2145  0016E2  EF77  F00B         	goto	l2011
  2146  0016E6                     l2009:
  2147  0016E6  90D8               	bcf	status,0,c
  2148  0016E8  3603               	rlcf	___awdiv@divisor^0,f,c
  2149  0016EA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2150  0016EC  2A05               	incf	___awdiv@counter^0,f,c
  2151  0016EE                     l2011:
  2152  0016EE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2153  0016F0  EF7C  F00B         	goto	u1821
  2154  0016F4  EF7E  F00B         	goto	u1820
  2155  0016F8                     u1821:
  2156  0016F8  EF73  F00B         	goto	l2009
  2157  0016FC                     u1820:
  2158  0016FC                     l2013:
  2159  0016FC  90D8               	bcf	status,0,c
  2160  0016FE  3607               	rlcf	___awdiv@quotient^0,f,c
  2161  001700  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2162  001702  5003               	movf	___awdiv@divisor^0,w,c
  2163  001704  5C01               	subwf	___awdiv@dividend^0,w,c
  2164  001706  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2165  001708  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2166  00170A  A0D8               	btfss	status,0,c
  2167  00170C  EF8A  F00B         	goto	u1831
  2168  001710  EF8C  F00B         	goto	u1830
  2169  001714                     u1831:
  2170  001714  EF91  F00B         	goto	l2021
  2171  001718                     u1830:
  2172  001718  5003               	movf	___awdiv@divisor^0,w,c
  2173  00171A  5E01               	subwf	___awdiv@dividend^0,f,c
  2174  00171C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2175  00171E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2176  001720  8007               	bsf	___awdiv@quotient^0,0,c
  2177  001722                     l2021:
  2178  001722  90D8               	bcf	status,0,c
  2179  001724  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2180  001726  3203               	rrcf	___awdiv@divisor^0,f,c
  2181  001728  2E05               	decfsz	___awdiv@counter^0,f,c
  2182  00172A  EF7E  F00B         	goto	l2013
  2183  00172E                     l2025:
  2184  00172E  5006               	movf	___awdiv@sign^0,w,c
  2185  001730  B4D8               	btfsc	status,2,c
  2186  001732  EF9D  F00B         	goto	u1841
  2187  001736  EF9F  F00B         	goto	u1840
  2188  00173A                     u1841:
  2189  00173A  EFA3  F00B         	goto	l2029
  2190  00173E                     u1840:
  2191  00173E  6C07               	negf	___awdiv@quotient^0,c
  2192  001740  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2193  001742  B0D8               	btfsc	status,0,c
  2194  001744  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2195  001746                     l2029:
  2196  001746  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2197  00174A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2198  00174E  0012               	return		;funcret
  2199  001750                     __end_of___awdiv:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _ssdUpdate *****************
  2203 ;; Defined at:
  2204 ;;		line 54 in file "ssd.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2218 ;;      Params:         0       0       0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0
  2220 ;;      Temps:          2       0       0       0       0       0       0
  2221 ;;      Totals:         2       0       0       0       0       0       0
  2222 ;;Total ram usage:        2 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    1
  2225 ;; This function calls:
  2226 ;;		_digitalWrite
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text7
  2233  001306                     __ptext7:
  2234                           	callstack 0
  2235  001306                     _ssdUpdate:
  2236                           	callstack 29
  2237  001306                     
  2238                           ;ssd.c: 58:     TRISD= 0x00;
  2239  001306  0E00               	movlw	0
  2240  001308  6E95               	movwf	149,c	;volatile
  2241  00130A                     
  2242                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2243  00130A  0E00               	movlw	0
  2244  00130C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2245  00130E  0E02               	movlw	2
  2246  001310  6E01               	movwf	digitalWrite@pin^0,c
  2247  001312  0E00               	movlw	0
  2248  001314  6E04               	movwf	(digitalWrite@value+1)^0,c
  2249  001316  0E00               	movlw	0
  2250  001318  6E03               	movwf	digitalWrite@value^0,c
  2251  00131A  EC9F  F007         	call	_digitalWrite	;wreg free
  2252  00131E                     
  2253                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2254  00131E  0E00               	movlw	0
  2255  001320  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2256  001322  0E03               	movlw	3
  2257  001324  6E01               	movwf	digitalWrite@pin^0,c
  2258  001326  0E00               	movlw	0
  2259  001328  6E04               	movwf	(digitalWrite@value+1)^0,c
  2260  00132A  0E00               	movlw	0
  2261  00132C  6E03               	movwf	digitalWrite@value^0,c
  2262  00132E  EC9F  F007         	call	_digitalWrite	;wreg free
  2263  001332                     
  2264                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2265  001332  0E00               	movlw	0
  2266  001334  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2267  001336  0E04               	movlw	4
  2268  001338  6E01               	movwf	digitalWrite@pin^0,c
  2269  00133A  0E00               	movlw	0
  2270  00133C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2271  00133E  0E00               	movlw	0
  2272  001340  6E03               	movwf	digitalWrite@value^0,c
  2273  001342  EC9F  F007         	call	_digitalWrite	;wreg free
  2274  001346                     
  2275                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2276  001346  0E00               	movlw	0
  2277  001348  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2278  00134A  0E05               	movlw	5
  2279  00134C  6E01               	movwf	digitalWrite@pin^0,c
  2280  00134E  0E00               	movlw	0
  2281  001350  6E04               	movwf	(digitalWrite@value+1)^0,c
  2282  001352  0E00               	movlw	0
  2283  001354  6E03               	movwf	digitalWrite@value^0,c
  2284  001356  EC9F  F007         	call	_digitalWrite	;wreg free
  2285                           
  2286                           ;ssd.c: 66:     PORTD = 0x00;
  2287  00135A  0E00               	movlw	0
  2288  00135C  6E83               	movwf	131,c	;volatile
  2289                           
  2290                           ;ssd.c: 69:     switch (display)
  2291  00135E  EF0D  F00A         	goto	l2337
  2292  001362                     l2309:
  2293                           
  2294                           ;ssd.c: 72:             PORTD = valor[v0];
  2295  001362  0E01               	movlw	low _valor@ssd$F336
  2296  001364  244E               	addwf	_v0^0,w,c
  2297  001366  6EF6               	movwf	tblptrl,c
  2298  001368  6AF7               	clrf	tblptrh,c
  2299  00136A  0E06               	movlw	high _valor@ssd$F336
  2300  00136C  22F7               	addwfc	tblptrh,f,c
  2301  00136E                     	if	0	;There are less than 3 active tblptr bytes
  2302  00136E                     	endif
  2303  00136E  0008               	tblrd		*
  2304  001370  CFF5 FF83          	movff	tablat,3971	;volatile
  2305  001374                     
  2306                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2307  001374  0E00               	movlw	0
  2308  001376  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2309  001378  0E02               	movlw	2
  2310  00137A  6E01               	movwf	digitalWrite@pin^0,c
  2311  00137C  0E00               	movlw	0
  2312  00137E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2313  001380  0E01               	movlw	1
  2314  001382  6E03               	movwf	digitalWrite@value^0,c
  2315  001384  EC9F  F007         	call	_digitalWrite	;wreg free
  2316  001388                     
  2317                           ;ssd.c: 74:             display = 1;
  2318  001388  0E01               	movlw	1
  2319  00138A  6E4F               	movwf	_display^0,c
  2320                           
  2321                           ;ssd.c: 75:             break;
  2322  00138C  EF2A  F00A         	goto	l297
  2323  001390                     l2315:
  2324                           
  2325                           ;ssd.c: 78:             PORTD = valor[v1];
  2326  001390  0E01               	movlw	low _valor@ssd$F336
  2327  001392  244D               	addwf	_v1^0,w,c
  2328  001394  6EF6               	movwf	tblptrl,c
  2329  001396  6AF7               	clrf	tblptrh,c
  2330  001398  0E06               	movlw	high _valor@ssd$F336
  2331  00139A  22F7               	addwfc	tblptrh,f,c
  2332  00139C                     	if	0	;There are less than 3 active tblptr bytes
  2333  00139C                     	endif
  2334  00139C  0008               	tblrd		*
  2335  00139E  CFF5 FF83          	movff	tablat,3971	;volatile
  2336  0013A2                     
  2337                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2338  0013A2  0E00               	movlw	0
  2339  0013A4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2340  0013A6  0E03               	movlw	3
  2341  0013A8  6E01               	movwf	digitalWrite@pin^0,c
  2342  0013AA  0E00               	movlw	0
  2343  0013AC  6E04               	movwf	(digitalWrite@value+1)^0,c
  2344  0013AE  0E01               	movlw	1
  2345  0013B0  6E03               	movwf	digitalWrite@value^0,c
  2346  0013B2  EC9F  F007         	call	_digitalWrite	;wreg free
  2347  0013B6                     
  2348                           ;ssd.c: 80:             display = 2;
  2349  0013B6  0E02               	movlw	2
  2350  0013B8  6E4F               	movwf	_display^0,c
  2351                           
  2352                           ;ssd.c: 81:             break;
  2353  0013BA  EF2A  F00A         	goto	l297
  2354  0013BE                     l2321:
  2355                           
  2356                           ;ssd.c: 84:             PORTD = valor[v2];
  2357  0013BE  0E01               	movlw	low _valor@ssd$F336
  2358  0013C0  244C               	addwf	_v2^0,w,c
  2359  0013C2  6EF6               	movwf	tblptrl,c
  2360  0013C4  6AF7               	clrf	tblptrh,c
  2361  0013C6  0E06               	movlw	high _valor@ssd$F336
  2362  0013C8  22F7               	addwfc	tblptrh,f,c
  2363  0013CA                     	if	0	;There are less than 3 active tblptr bytes
  2364  0013CA                     	endif
  2365  0013CA  0008               	tblrd		*
  2366  0013CC  CFF5 FF83          	movff	tablat,3971	;volatile
  2367  0013D0                     
  2368                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2369  0013D0  0E00               	movlw	0
  2370  0013D2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2371  0013D4  0E04               	movlw	4
  2372  0013D6  6E01               	movwf	digitalWrite@pin^0,c
  2373  0013D8  0E00               	movlw	0
  2374  0013DA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2375  0013DC  0E01               	movlw	1
  2376  0013DE  6E03               	movwf	digitalWrite@value^0,c
  2377  0013E0  EC9F  F007         	call	_digitalWrite	;wreg free
  2378  0013E4                     
  2379                           ;ssd.c: 86:             display = 3;
  2380  0013E4  0E03               	movlw	3
  2381  0013E6  6E4F               	movwf	_display^0,c
  2382                           
  2383                           ;ssd.c: 87:             break;
  2384  0013E8  EF2A  F00A         	goto	l297
  2385  0013EC                     l2327:
  2386                           
  2387                           ;ssd.c: 90:             PORTD = valor[v3];
  2388  0013EC  0E01               	movlw	low _valor@ssd$F336
  2389  0013EE  244B               	addwf	_v3^0,w,c
  2390  0013F0  6EF6               	movwf	tblptrl,c
  2391  0013F2  6AF7               	clrf	tblptrh,c
  2392  0013F4  0E06               	movlw	high _valor@ssd$F336
  2393  0013F6  22F7               	addwfc	tblptrh,f,c
  2394  0013F8                     	if	0	;There are less than 3 active tblptr bytes
  2395  0013F8                     	endif
  2396  0013F8  0008               	tblrd		*
  2397  0013FA  CFF5 FF83          	movff	tablat,3971	;volatile
  2398  0013FE                     
  2399                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2400  0013FE  0E00               	movlw	0
  2401  001400  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2402  001402  0E05               	movlw	5
  2403  001404  6E01               	movwf	digitalWrite@pin^0,c
  2404  001406  0E00               	movlw	0
  2405  001408  6E04               	movwf	(digitalWrite@value+1)^0,c
  2406  00140A  0E01               	movlw	1
  2407  00140C  6E03               	movwf	digitalWrite@value^0,c
  2408  00140E  EC9F  F007         	call	_digitalWrite	;wreg free
  2409  001412                     l2331:
  2410                           
  2411                           ;ssd.c: 92:             display = 0;
  2412  001412  0E00               	movlw	0
  2413  001414  6E4F               	movwf	_display^0,c
  2414                           
  2415                           ;ssd.c: 93:             break;
  2416  001416  EF2A  F00A         	goto	l297
  2417  00141A                     l2337:
  2418  00141A  504F               	movf	_display^0,w,c
  2419  00141C  6E07               	movwf	??_ssdUpdate^0,c
  2420  00141E  6A08               	clrf	(??_ssdUpdate+1)^0,c
  2421                           
  2422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2423                           ; Switch size 1, requested type "simple"
  2424                           ; Number of cases is 1, Range of values is 0 to 0
  2425                           ; switch strategies available:
  2426                           ; Name         Instructions Cycles
  2427                           ; simple_byte            4     3 (average)
  2428                           ;	Chosen strategy is simple_byte
  2429  001420  5008               	movf	(??_ssdUpdate+1)^0,w,c
  2430  001422  0A00               	xorlw	0	; case 0
  2431  001424  B4D8               	btfsc	status,2,c
  2432  001426  EF17  F00A         	goto	l2641
  2433  00142A  EF09  F00A         	goto	l2331
  2434  00142E                     l2641:
  2435                           
  2436                           ; Switch size 1, requested type "simple"
  2437                           ; Number of cases is 4, Range of values is 0 to 3
  2438                           ; switch strategies available:
  2439                           ; Name         Instructions Cycles
  2440                           ; simple_byte           13     7 (average)
  2441                           ;	Chosen strategy is simple_byte
  2442  00142E  5007               	movf	??_ssdUpdate^0,w,c
  2443  001430  0A00               	xorlw	0	; case 0
  2444  001432  B4D8               	btfsc	status,2,c
  2445  001434  EFB1  F009         	goto	l2309
  2446  001438  0A01               	xorlw	1	; case 1
  2447  00143A  B4D8               	btfsc	status,2,c
  2448  00143C  EFC8  F009         	goto	l2315
  2449  001440  0A03               	xorlw	3	; case 2
  2450  001442  B4D8               	btfsc	status,2,c
  2451  001444  EFDF  F009         	goto	l2321
  2452  001448  0A01               	xorlw	1	; case 3
  2453  00144A  B4D8               	btfsc	status,2,c
  2454  00144C  EFF6  F009         	goto	l2327
  2455  001450  EF09  F00A         	goto	l2331
  2456  001454                     l297:
  2457  001454  0012               	return		;funcret
  2458  001456                     __end_of_ssdUpdate:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _ssdInit *****************
  2462 ;; Defined at:
  2463 ;;		line 101 in file "ssd.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2477 ;;      Params:         0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    1
  2484 ;; This function calls:
  2485 ;;		_pinMode
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text8
  2492  001A04                     __ptext8:
  2493                           	callstack 0
  2494  001A04                     _ssdInit:
  2495                           	callstack 29
  2496  001A04                     
  2497                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  2498  001A04  0E00               	movlw	0
  2499  001A06  6E02               	movwf	(pinMode@pin+1)^0,c
  2500  001A08  0E02               	movlw	2
  2501  001A0A  6E01               	movwf	pinMode@pin^0,c
  2502  001A0C  0E00               	movlw	0
  2503  001A0E  6E04               	movwf	(pinMode@type+1)^0,c
  2504  001A10  0E00               	movlw	0
  2505  001A12  6E03               	movwf	pinMode@type^0,c
  2506  001A14  EC78  F006         	call	_pinMode	;wreg free
  2507                           
  2508                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  2509  001A18  0E00               	movlw	0
  2510  001A1A  6E02               	movwf	(pinMode@pin+1)^0,c
  2511  001A1C  0E03               	movlw	3
  2512  001A1E  6E01               	movwf	pinMode@pin^0,c
  2513  001A20  0E00               	movlw	0
  2514  001A22  6E04               	movwf	(pinMode@type+1)^0,c
  2515  001A24  0E00               	movlw	0
  2516  001A26  6E03               	movwf	pinMode@type^0,c
  2517  001A28  EC78  F006         	call	_pinMode	;wreg free
  2518                           
  2519                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  2520  001A2C  0E00               	movlw	0
  2521  001A2E  6E02               	movwf	(pinMode@pin+1)^0,c
  2522  001A30  0E04               	movlw	4
  2523  001A32  6E01               	movwf	pinMode@pin^0,c
  2524  001A34  0E00               	movlw	0
  2525  001A36  6E04               	movwf	(pinMode@type+1)^0,c
  2526  001A38  0E00               	movlw	0
  2527  001A3A  6E03               	movwf	pinMode@type^0,c
  2528  001A3C  EC78  F006         	call	_pinMode	;wreg free
  2529                           
  2530                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  2531  001A40  0E00               	movlw	0
  2532  001A42  6E02               	movwf	(pinMode@pin+1)^0,c
  2533  001A44  0E05               	movlw	5
  2534  001A46  6E01               	movwf	pinMode@pin^0,c
  2535  001A48  0E00               	movlw	0
  2536  001A4A  6E04               	movwf	(pinMode@type+1)^0,c
  2537  001A4C  0E00               	movlw	0
  2538  001A4E  6E03               	movwf	pinMode@type^0,c
  2539  001A50  EC78  F006         	call	_pinMode	;wreg free
  2540  001A54                     
  2541                           ;ssd.c: 109:     TRISD = 0x00;
  2542  001A54  0E00               	movlw	0
  2543  001A56  6E95               	movwf	149,c	;volatile
  2544  001A58  0012               	return		;funcret
  2545  001A5A                     __end_of_ssdInit:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _reles *****************
  2549 ;; Defined at:
  2550 ;;		line 20 in file "Calculator.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  rele            2    0[COMRAM] int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2564 ;;      Params:         2       0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0
  2567 ;;      Totals:         2       0       0       0       0       0       0
  2568 ;;Total ram usage:        2 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text9
  2578  001AAE                     __ptext9:
  2579                           	callstack 0
  2580  001AAE                     _reles:
  2581                           	callstack 30
  2582  001AAE                     
  2583                           ;Calculator.c: 22:     TRISCbits.TRISC0=0;
  2584  001AAE  9094               	bcf	148,0,c	;volatile
  2585                           
  2586                           ;Calculator.c: 23:     TRISEbits.TRISE0=0;
  2587  001AB0  9096               	bcf	150,0,c	;volatile
  2588  001AB2                     
  2589                           ;Calculator.c: 25:     if(rele == 1){
  2590  001AB2  0401               	decf	reles@rele^0,w,c
  2591  001AB4  1002               	iorwf	(reles@rele+1)^0,w,c
  2592  001AB6  A4D8               	btfss	status,2,c
  2593  001AB8  EF60  F00D         	goto	u2231
  2594  001ABC  EF62  F00D         	goto	u2230
  2595  001AC0                     u2231:
  2596  001AC0  EF64  F00D         	goto	l320
  2597  001AC4                     u2230:
  2598  001AC4                     
  2599                           ;Calculator.c: 26:         PORTCbits.RC0^=1;
  2600  001AC4  7082               	btg	130,0,c	;volatile
  2601  001AC6                     
  2602                           ;Calculator.c: 27:         PORTEbits.RE0=0;
  2603  001AC6  9084               	bcf	132,0,c	;volatile
  2604  001AC8                     l320:
  2605                           
  2606                           ;Calculator.c: 30:     if(rele == 2){
  2607  001AC8  0E02               	movlw	2
  2608  001ACA  1801               	xorwf	reles@rele^0,w,c
  2609  001ACC  1002               	iorwf	(reles@rele+1)^0,w,c
  2610  001ACE  A4D8               	btfss	status,2,c
  2611  001AD0  EF6C  F00D         	goto	u2241
  2612  001AD4  EF6E  F00D         	goto	u2240
  2613  001AD8                     u2241:
  2614  001AD8  EF70  F00D         	goto	l321
  2615  001ADC                     u2240:
  2616  001ADC                     
  2617                           ;Calculator.c: 31:         PORTEbits.RE0^=1;
  2618  001ADC  7084               	btg	132,0,c	;volatile
  2619  001ADE                     
  2620                           ;Calculator.c: 32:         PORTCbits.RC0=0;
  2621  001ADE  9082               	bcf	130,0,c	;volatile
  2622  001AE0                     l321:
  2623                           
  2624                           ;Calculator.c: 35:     if(rele == -1){
  2625  001AE0  2801               	incf	reles@rele^0,w,c
  2626  001AE2  E106               	bnz	u2251
  2627  001AE4  2802               	incf	(reles@rele+1)^0,w,c
  2628  001AE6  A4D8               	btfss	status,2,c
  2629  001AE8  EF78  F00D         	goto	u2251
  2630  001AEC  EF7A  F00D         	goto	u2250
  2631  001AF0                     u2251:
  2632  001AF0  EF7C  F00D         	goto	l323
  2633  001AF4                     u2250:
  2634  001AF4                     
  2635                           ;Calculator.c: 36:         PORTCbits.RC0=0;
  2636  001AF4  9082               	bcf	130,0,c	;volatile
  2637                           
  2638                           ;Calculator.c: 37:         PORTEbits.RE0=0;
  2639  001AF6  9084               	bcf	132,0,c	;volatile
  2640  001AF8                     l323:
  2641  001AF8  0012               	return		;funcret
  2642  001AFA                     __end_of_reles:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _pwmInit *****************
  2646 ;; Defined at:
  2647 ;;		line 51 in file "pwm.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2661 ;;      Params:         0       0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    2
  2668 ;; This function calls:
  2669 ;;		_pwmFrequency
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text10
  2676  001C16                     __ptext10:
  2677                           	callstack 0
  2678  001C16                     _pwmInit:
  2679                           	callstack 28
  2680  001C16                     
  2681                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
  2682  001C16  9494               	bcf	148,2,c	;volatile
  2683  001C18                     
  2684                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2685  001C18  0E03               	movlw	3
  2686  001C1A  12CA               	iorwf	202,f,c	;volatile
  2687  001C1C                     
  2688                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2689  001C1C  84CA               	bsf	202,2,c	;volatile
  2690  001C1E                     
  2691                           ;pwm.c: 58:  CCP1CON = 0b00001100;
  2692  001C1E  0E0C               	movlw	12
  2693  001C20  6EBD               	movwf	189,c	;volatile
  2694  001C22                     
  2695                           ;pwm.c: 60:     pwmFrequency(100);
  2696  001C22  0E00               	movlw	0
  2697  001C24  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2698  001C26  0E64               	movlw	100
  2699  001C28  6E0F               	movwf	pwmFrequency@freq^0,c
  2700  001C2A  ECD7  F00D         	call	_pwmFrequency	;wreg free
  2701  001C2E  0012               	return		;funcret
  2702  001C30                     __end_of_pwmInit:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _pwmFrequency *****************
  2706 ;; Defined at:
  2707 ;;		line 44 in file "pwm.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  freq            2   14[COMRAM] unsigned int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2721 ;;      Params:         2       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0
  2724 ;;      Totals:         2       0       0       0       0       0       0
  2725 ;;Total ram usage:        2 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		___aldiv
  2730 ;; This function is called by:
  2731 ;;		_pwmInit
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text11
  2736  001BAE                     __ptext11:
  2737                           	callstack 0
  2738  001BAE                     _pwmFrequency:
  2739                           	callstack 28
  2740  001BAE                     
  2741                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2742  001BAE  0E48               	movlw	72
  2743  001BB0  6E01               	movwf	___aldiv@dividend^0,c
  2744  001BB2  0EE8               	movlw	232
  2745  001BB4  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2746  001BB6  0E01               	movlw	1
  2747  001BB8  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2748  001BBA  0E00               	movlw	0
  2749  001BBC  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2750  001BBE  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2751  001BC2  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2752  001BC6  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2753  001BC8  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2754  001BCA  ECC0  F00A         	call	___aldiv	;wreg free
  2755  001BCE  0401               	decf	?___aldiv^0,w,c
  2756  001BD0  6ECB               	movwf	203,c	;volatile
  2757  001BD2  0012               	return		;funcret
  2758  001BD4                     __end_of_pwmFrequency:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function ___aldiv *****************
  2762 ;; Defined at:
  2763 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aldiv.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  dividend        4    0[COMRAM] long 
  2766 ;;  divisor         4    4[COMRAM] long 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  quotient        4   10[COMRAM] long 
  2769 ;;  sign            1    9[COMRAM] unsigned char 
  2770 ;;  counter         1    8[COMRAM] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  4    0[COMRAM] long 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2780 ;;      Params:         8       0       0       0       0       0       0
  2781 ;;      Locals:         6       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0
  2783 ;;      Totals:        14       0       0       0       0       0       0
  2784 ;;Total ram usage:       14 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_pwmFrequency
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text12
  2794  001580                     __ptext12:
  2795                           	callstack 0
  2796  001580                     ___aldiv:
  2797                           	callstack 28
  2798  001580  0E00               	movlw	0
  2799  001582  6E0A               	movwf	___aldiv@sign^0,c
  2800  001584  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2801  001586  EFC9  F00A         	goto	u1730
  2802  00158A  EFC7  F00A         	goto	u1731
  2803  00158E                     u1731:
  2804  00158E  EFD3  F00A         	goto	l1953
  2805  001592                     u1730:
  2806  001592  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2807  001594  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2808  001596  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2809  001598  6C05               	negf	___aldiv@divisor^0,c
  2810  00159A  0E00               	movlw	0
  2811  00159C  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2812  00159E  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2813  0015A0  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2814  0015A2  0E01               	movlw	1
  2815  0015A4  6E0A               	movwf	___aldiv@sign^0,c
  2816  0015A6                     l1953:
  2817  0015A6  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2818  0015A8  EFDA  F00A         	goto	u1740
  2819  0015AC  EFD8  F00A         	goto	u1741
  2820  0015B0                     u1741:
  2821  0015B0  EFE4  F00A         	goto	l1959
  2822  0015B4                     u1740:
  2823  0015B4  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2824  0015B6  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2825  0015B8  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2826  0015BA  6C01               	negf	___aldiv@dividend^0,c
  2827  0015BC  0E00               	movlw	0
  2828  0015BE  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2829  0015C0  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2830  0015C2  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2831  0015C4  0E01               	movlw	1
  2832  0015C6  1A0A               	xorwf	___aldiv@sign^0,f,c
  2833  0015C8                     l1959:
  2834  0015C8  0E00               	movlw	0
  2835  0015CA  6E0B               	movwf	___aldiv@quotient^0,c
  2836  0015CC  0E00               	movlw	0
  2837  0015CE  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2838  0015D0  0E00               	movlw	0
  2839  0015D2  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2840  0015D4  0E00               	movlw	0
  2841  0015D6  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2842  0015D8  5005               	movf	___aldiv@divisor^0,w,c
  2843  0015DA  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2844  0015DC  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2845  0015DE  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2846  0015E0  B4D8               	btfsc	status,2,c
  2847  0015E2  EFF5  F00A         	goto	u1751
  2848  0015E6  EFF7  F00A         	goto	u1750
  2849  0015EA                     u1751:
  2850  0015EA  EF2D  F00B         	goto	l1981
  2851  0015EE                     u1750:
  2852  0015EE  0E01               	movlw	1
  2853  0015F0  6E09               	movwf	___aldiv@counter^0,c
  2854  0015F2  EF01  F00B         	goto	l1967
  2855  0015F6                     l1965:
  2856  0015F6  90D8               	bcf	status,0,c
  2857  0015F8  3605               	rlcf	___aldiv@divisor^0,f,c
  2858  0015FA  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2859  0015FC  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2860  0015FE  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2861  001600  2A09               	incf	___aldiv@counter^0,f,c
  2862  001602                     l1967:
  2863  001602  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2864  001604  EF06  F00B         	goto	u1761
  2865  001608  EF08  F00B         	goto	u1760
  2866  00160C                     u1761:
  2867  00160C  EFFB  F00A         	goto	l1965
  2868  001610                     u1760:
  2869  001610                     l1969:
  2870  001610  90D8               	bcf	status,0,c
  2871  001612  360B               	rlcf	___aldiv@quotient^0,f,c
  2872  001614  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2873  001616  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2874  001618  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2875  00161A  5005               	movf	___aldiv@divisor^0,w,c
  2876  00161C  5C01               	subwf	___aldiv@dividend^0,w,c
  2877  00161E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2878  001620  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2879  001622  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2880  001624  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2881  001626  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2882  001628  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2883  00162A  A0D8               	btfss	status,0,c
  2884  00162C  EF1A  F00B         	goto	u1771
  2885  001630  EF1C  F00B         	goto	u1770
  2886  001634                     u1771:
  2887  001634  EF25  F00B         	goto	l1977
  2888  001638                     u1770:
  2889  001638  5005               	movf	___aldiv@divisor^0,w,c
  2890  00163A  5E01               	subwf	___aldiv@dividend^0,f,c
  2891  00163C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2892  00163E  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2893  001640  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2894  001642  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2895  001644  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2896  001646  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2897  001648  800B               	bsf	___aldiv@quotient^0,0,c
  2898  00164A                     l1977:
  2899  00164A  90D8               	bcf	status,0,c
  2900  00164C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2901  00164E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2902  001650  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2903  001652  3205               	rrcf	___aldiv@divisor^0,f,c
  2904  001654  2E09               	decfsz	___aldiv@counter^0,f,c
  2905  001656  EF08  F00B         	goto	l1969
  2906  00165A                     l1981:
  2907  00165A  500A               	movf	___aldiv@sign^0,w,c
  2908  00165C  B4D8               	btfsc	status,2,c
  2909  00165E  EF33  F00B         	goto	u1781
  2910  001662  EF35  F00B         	goto	u1780
  2911  001666                     u1781:
  2912  001666  EF3D  F00B         	goto	l1985
  2913  00166A                     u1780:
  2914  00166A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2915  00166C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2916  00166E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2917  001670  6C0B               	negf	___aldiv@quotient^0,c
  2918  001672  0E00               	movlw	0
  2919  001674  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2920  001676  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2921  001678  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2922  00167A                     l1985:
  2923  00167A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2924  00167E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2925  001682  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2926  001686  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2927  00168A  0012               	return		;funcret
  2928  00168C                     __end_of___aldiv:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _lcdPrint *****************
  2932 ;; Defined at:
  2933 ;;		line 42 in file "Calculator.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  msg             2    8[COMRAM] PTR unsigned char 
  2936 ;;		 -> STR_4(14), STR_3(16), STR_2(16), STR_1(16), 
  2937 ;;  linha           2   10[COMRAM] int 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  i               1   14[COMRAM] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2949 ;;      Params:         4       0       0       0       0       0       0
  2950 ;;      Locals:         1       0       0       0       0       0       0
  2951 ;;      Temps:          2       0       0       0       0       0       0
  2952 ;;      Totals:         7       0       0       0       0       0       0
  2953 ;;Total ram usage:        7 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    3
  2956 ;; This function calls:
  2957 ;;		_lcdCommand
  2958 ;;		_lcdData
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text13
  2965  001456                     __ptext13:
  2966                           	callstack 0
  2967  001456                     _lcdPrint:
  2968                           	callstack 27
  2969  001456                     
  2970                           ;Calculator.c: 44:     unsigned char i;;Calculator.c: 46:     if(linha == 1){
  2971  001456  040B               	decf	lcdPrint@linha^0,w,c
  2972  001458  100C               	iorwf	(lcdPrint@linha+1)^0,w,c
  2973  00145A  A4D8               	btfss	status,2,c
  2974  00145C  EF32  F00A         	goto	u2151
  2975  001460  EF34  F00A         	goto	u2150
  2976  001464                     u2151:
  2977  001464  EF4D  F00A         	goto	l2221
  2978  001468                     u2150:
  2979  001468                     
  2980                           ;Calculator.c: 47:         for(i=0; i < 16; i++)
  2981  001468  0E00               	movlw	0
  2982  00146A  6E0F               	movwf	lcdPrint@i^0,c
  2983  00146C                     l2215:
  2984                           
  2985                           ;Calculator.c: 48:             lcdData(msg[i]);
  2986  00146C  500F               	movf	lcdPrint@i^0,w,c
  2987  00146E  2409               	addwf	lcdPrint@msg^0,w,c
  2988  001470  6E0D               	movwf	??_lcdPrint^0,c
  2989  001472  0E00               	movlw	0
  2990  001474  200A               	addwfc	(lcdPrint@msg+1)^0,w,c
  2991  001476  6E0E               	movwf	(??_lcdPrint+1)^0,c
  2992  001478  C00D  FFF6         	movff	??_lcdPrint,tblptrl
  2993  00147C  C00E  FFF7         	movff	??_lcdPrint+1,tblptrh
  2994  001480                     	if	0	;tblptru may be non-zero
  2995  001480                     	endif
  2996  001480                     	if	0	;tblptru may be non-zero
  2997  001480                     	endif
  2998  001480  0008               	tblrd		*
  2999  001482  50F5               	movf	tablat,w,c
  3000  001484  EC2D  F00D         	call	_lcdData
  3001  001488  2A0F               	incf	lcdPrint@i^0,f,c
  3002  00148A  0E0F               	movlw	15
  3003  00148C  640F               	cpfsgt	lcdPrint@i^0,c
  3004  00148E  EF4B  F00A         	goto	u2161
  3005  001492  EF4D  F00A         	goto	u2160
  3006  001496                     u2161:
  3007  001496  EF36  F00A         	goto	l2215
  3008  00149A                     u2160:
  3009  00149A                     l2221:
  3010                           
  3011                           ;Calculator.c: 51:     if(linha == 2){
  3012  00149A  0E02               	movlw	2
  3013  00149C  180B               	xorwf	lcdPrint@linha^0,w,c
  3014  00149E  100C               	iorwf	(lcdPrint@linha+1)^0,w,c
  3015  0014A0  A4D8               	btfss	status,2,c
  3016  0014A2  EF55  F00A         	goto	u2171
  3017  0014A6  EF57  F00A         	goto	u2170
  3018  0014AA                     u2171:
  3019  0014AA  EF73  F00A         	goto	l2237
  3020  0014AE                     u2170:
  3021  0014AE                     
  3022                           ;Calculator.c: 52:         lcdCommand(0xC0);
  3023  0014AE  0EC0               	movlw	192
  3024  0014B0  EC5B  F00C         	call	_lcdCommand
  3025  0014B4                     
  3026                           ;Calculator.c: 54:         for(i=0; i < 16; i++)
  3027  0014B4  0E00               	movlw	0
  3028  0014B6  6E0F               	movwf	lcdPrint@i^0,c
  3029  0014B8                     l2231:
  3030                           
  3031                           ;Calculator.c: 55:             lcdData(msg[i]);
  3032  0014B8  500F               	movf	lcdPrint@i^0,w,c
  3033  0014BA  2409               	addwf	lcdPrint@msg^0,w,c
  3034  0014BC  6E0D               	movwf	??_lcdPrint^0,c
  3035  0014BE  0E00               	movlw	0
  3036  0014C0  200A               	addwfc	(lcdPrint@msg+1)^0,w,c
  3037  0014C2  6E0E               	movwf	(??_lcdPrint+1)^0,c
  3038  0014C4  C00D  FFF6         	movff	??_lcdPrint,tblptrl
  3039  0014C8  C00E  FFF7         	movff	??_lcdPrint+1,tblptrh
  3040  0014CC                     	if	0	;tblptru may be non-zero
  3041  0014CC                     	endif
  3042  0014CC                     	if	0	;tblptru may be non-zero
  3043  0014CC                     	endif
  3044  0014CC  0008               	tblrd		*
  3045  0014CE  50F5               	movf	tablat,w,c
  3046  0014D0  EC2D  F00D         	call	_lcdData
  3047  0014D4  2A0F               	incf	lcdPrint@i^0,f,c
  3048  0014D6  0E0F               	movlw	15
  3049  0014D8  640F               	cpfsgt	lcdPrint@i^0,c
  3050  0014DA  EF71  F00A         	goto	u2181
  3051  0014DE  EF73  F00A         	goto	u2180
  3052  0014E2                     u2181:
  3053  0014E2  EF5C  F00A         	goto	l2231
  3054  0014E6                     u2180:
  3055  0014E6                     l2237:
  3056                           
  3057                           ;Calculator.c: 58:     if(linha == 3){
  3058  0014E6  0E03               	movlw	3
  3059  0014E8  180B               	xorwf	lcdPrint@linha^0,w,c
  3060  0014EA  100C               	iorwf	(lcdPrint@linha+1)^0,w,c
  3061  0014EC  A4D8               	btfss	status,2,c
  3062  0014EE  EF7B  F00A         	goto	u2191
  3063  0014F2  EF7D  F00A         	goto	u2190
  3064  0014F6                     u2191:
  3065  0014F6  EF99  F00A         	goto	l2253
  3066  0014FA                     u2190:
  3067  0014FA                     
  3068                           ;Calculator.c: 59:         lcdCommand(0x90);
  3069  0014FA  0E90               	movlw	144
  3070  0014FC  EC5B  F00C         	call	_lcdCommand
  3071  001500                     
  3072                           ;Calculator.c: 61:         for(i=0; i < 16; i++)
  3073  001500  0E00               	movlw	0
  3074  001502  6E0F               	movwf	lcdPrint@i^0,c
  3075  001504                     l2247:
  3076                           
  3077                           ;Calculator.c: 62:             lcdData(msg[i]);
  3078  001504  500F               	movf	lcdPrint@i^0,w,c
  3079  001506  2409               	addwf	lcdPrint@msg^0,w,c
  3080  001508  6E0D               	movwf	??_lcdPrint^0,c
  3081  00150A  0E00               	movlw	0
  3082  00150C  200A               	addwfc	(lcdPrint@msg+1)^0,w,c
  3083  00150E  6E0E               	movwf	(??_lcdPrint+1)^0,c
  3084  001510  C00D  FFF6         	movff	??_lcdPrint,tblptrl
  3085  001514  C00E  FFF7         	movff	??_lcdPrint+1,tblptrh
  3086  001518                     	if	0	;tblptru may be non-zero
  3087  001518                     	endif
  3088  001518                     	if	0	;tblptru may be non-zero
  3089  001518                     	endif
  3090  001518  0008               	tblrd		*
  3091  00151A  50F5               	movf	tablat,w,c
  3092  00151C  EC2D  F00D         	call	_lcdData
  3093  001520  2A0F               	incf	lcdPrint@i^0,f,c
  3094  001522  0E0F               	movlw	15
  3095  001524  640F               	cpfsgt	lcdPrint@i^0,c
  3096  001526  EF97  F00A         	goto	u2201
  3097  00152A  EF99  F00A         	goto	u2200
  3098  00152E                     u2201:
  3099  00152E  EF82  F00A         	goto	l2247
  3100  001532                     u2200:
  3101  001532                     l2253:
  3102                           
  3103                           ;Calculator.c: 65:     if(linha == 4){
  3104  001532  0E04               	movlw	4
  3105  001534  180B               	xorwf	lcdPrint@linha^0,w,c
  3106  001536  100C               	iorwf	(lcdPrint@linha+1)^0,w,c
  3107  001538  A4D8               	btfss	status,2,c
  3108  00153A  EFA1  F00A         	goto	u2211
  3109  00153E  EFA3  F00A         	goto	u2210
  3110  001542                     u2211:
  3111  001542  EFBF  F00A         	goto	l338
  3112  001546                     u2210:
  3113  001546                     
  3114                           ;Calculator.c: 66:         lcdCommand(0xD0);
  3115  001546  0ED0               	movlw	208
  3116  001548  EC5B  F00C         	call	_lcdCommand
  3117  00154C                     
  3118                           ;Calculator.c: 68:         for(i=0; i < 16; i++)
  3119  00154C  0E00               	movlw	0
  3120  00154E  6E0F               	movwf	lcdPrint@i^0,c
  3121  001550                     l2263:
  3122                           
  3123                           ;Calculator.c: 69:             lcdData(msg[i]);
  3124  001550  500F               	movf	lcdPrint@i^0,w,c
  3125  001552  2409               	addwf	lcdPrint@msg^0,w,c
  3126  001554  6E0D               	movwf	??_lcdPrint^0,c
  3127  001556  0E00               	movlw	0
  3128  001558  200A               	addwfc	(lcdPrint@msg+1)^0,w,c
  3129  00155A  6E0E               	movwf	(??_lcdPrint+1)^0,c
  3130  00155C  C00D  FFF6         	movff	??_lcdPrint,tblptrl
  3131  001560  C00E  FFF7         	movff	??_lcdPrint+1,tblptrh
  3132  001564                     	if	0	;tblptru may be non-zero
  3133  001564                     	endif
  3134  001564                     	if	0	;tblptru may be non-zero
  3135  001564                     	endif
  3136  001564  0008               	tblrd		*
  3137  001566  50F5               	movf	tablat,w,c
  3138  001568  EC2D  F00D         	call	_lcdData
  3139  00156C  2A0F               	incf	lcdPrint@i^0,f,c
  3140  00156E  0E0F               	movlw	15
  3141  001570  640F               	cpfsgt	lcdPrint@i^0,c
  3142  001572  EFBD  F00A         	goto	u2221
  3143  001576  EFBF  F00A         	goto	u2220
  3144  00157A                     u2221:
  3145  00157A  EFA8  F00A         	goto	l2263
  3146  00157E                     u2220:
  3147  00157E                     l338:
  3148  00157E  0012               	return		;funcret
  3149  001580                     __end_of_lcdPrint:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _lcdData *****************
  3153 ;; Defined at:
  3154 ;;		line 74 in file "lcd.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  valor           1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  valor           1    6[COMRAM] unsigned char 
  3159 ;;  old_D           1    7[COMRAM] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3169 ;;      Params:         0       0       0       0       0       0       0
  3170 ;;      Locals:         2       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0
  3172 ;;      Totals:         2       0       0       0       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    1
  3176 ;; This function calls:
  3177 ;;		_Delay40us
  3178 ;;		_digitalWrite
  3179 ;; This function is called by:
  3180 ;;		_lcdPrint
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text14
  3185  001A5A                     __ptext14:
  3186                           	callstack 0
  3187  001A5A                     _lcdData:
  3188                           	callstack 28
  3189                           
  3190                           ;incstack = 0
  3191                           ;lcdData@valor stored from wreg
  3192  001A5A  6E07               	movwf	lcdData@valor^0,c
  3193  001A5C                     
  3194                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  3195  001A5C  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  3196  001A60                     
  3197                           ;lcd.c: 80:     TRISD = 0x00;
  3198  001A60  0E00               	movlw	0
  3199  001A62  6E95               	movwf	149,c	;volatile
  3200  001A64                     
  3201                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  3202  001A64  0E00               	movlw	0
  3203  001A66  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3204  001A68  0E22               	movlw	34
  3205  001A6A  6E01               	movwf	digitalWrite@pin^0,c
  3206  001A6C  0E00               	movlw	0
  3207  001A6E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3208  001A70  0E01               	movlw	1
  3209  001A72  6E03               	movwf	digitalWrite@value^0,c
  3210  001A74  EC9F  F007         	call	_digitalWrite	;wreg free
  3211  001A78                     
  3212                           ;lcd.c: 83:  PORTD = valor;
  3213  001A78  C007  FF83         	movff	lcdData@valor,3971	;volatile
  3214  001A7C                     
  3215                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  3216  001A7C  0E00               	movlw	0
  3217  001A7E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3218  001A80  0E21               	movlw	33
  3219  001A82  6E01               	movwf	digitalWrite@pin^0,c
  3220  001A84  0E00               	movlw	0
  3221  001A86  6E04               	movwf	(digitalWrite@value+1)^0,c
  3222  001A88  0E01               	movlw	1
  3223  001A8A  6E03               	movwf	digitalWrite@value^0,c
  3224  001A8C  EC9F  F007         	call	_digitalWrite	;wreg free
  3225  001A90                     
  3226                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  3227  001A90  0E00               	movlw	0
  3228  001A92  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3229  001A94  0E21               	movlw	33
  3230  001A96  6E01               	movwf	digitalWrite@pin^0,c
  3231  001A98  0E00               	movlw	0
  3232  001A9A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3233  001A9C  0E00               	movlw	0
  3234  001A9E  6E03               	movwf	digitalWrite@value^0,c
  3235  001AA0  EC9F  F007         	call	_digitalWrite	;wreg free
  3236  001AA4                     
  3237                           ;lcd.c: 88:     PORTD= old_D;
  3238  001AA4  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  3239  001AA8                     
  3240                           ;lcd.c: 90:  Delay40us();
  3241  001AA8  EC18  F00E         	call	_Delay40us	;wreg free
  3242  001AAC  0012               	return		;funcret
  3243  001AAE                     __end_of_lcdData:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _lcdInit *****************
  3247 ;; Defined at:
  3248 ;;		line 95 in file "lcd.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3262 ;;      Params:         0       0       0       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		_Delay2ms
  3271 ;;		_lcdCommand
  3272 ;;		_pinMode
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text15
  3279  001934                     __ptext15:
  3280                           	callstack 0
  3281  001934                     _lcdInit:
  3282                           	callstack 27
  3283  001934                     
  3284                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  3285  001934  0E00               	movlw	0
  3286  001936  6E02               	movwf	(pinMode@pin+1)^0,c
  3287  001938  0E22               	movlw	34
  3288  00193A  6E01               	movwf	pinMode@pin^0,c
  3289  00193C  0E00               	movlw	0
  3290  00193E  6E04               	movwf	(pinMode@type+1)^0,c
  3291  001940  0E00               	movlw	0
  3292  001942  6E03               	movwf	pinMode@type^0,c
  3293  001944  EC78  F006         	call	_pinMode	;wreg free
  3294                           
  3295                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  3296  001948  0E00               	movlw	0
  3297  00194A  6E02               	movwf	(pinMode@pin+1)^0,c
  3298  00194C  0E21               	movlw	33
  3299  00194E  6E01               	movwf	pinMode@pin^0,c
  3300  001950  0E00               	movlw	0
  3301  001952  6E04               	movwf	(pinMode@type+1)^0,c
  3302  001954  0E00               	movlw	0
  3303  001956  6E03               	movwf	pinMode@type^0,c
  3304  001958  EC78  F006         	call	_pinMode	;wreg free
  3305  00195C                     
  3306                           ;lcd.c: 99:  TRISD = 0x00;
  3307  00195C  0E00               	movlw	0
  3308  00195E  6E95               	movwf	149,c	;volatile
  3309  001960                     
  3310                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  3311  001960  ECFD  F00D         	call	_Delay2ms	;wreg free
  3312  001964  ECFD  F00D         	call	_Delay2ms	;wreg free
  3313  001968  ECFD  F00D         	call	_Delay2ms	;wreg free
  3314  00196C  ECFD  F00D         	call	_Delay2ms	;wreg free
  3315  001970  ECFD  F00D         	call	_Delay2ms	;wreg free
  3316  001974                     
  3317                           ;lcd.c: 104:     lcdCommand(0x38);
  3318  001974  0E38               	movlw	56
  3319  001976  EC5B  F00C         	call	_lcdCommand
  3320  00197A                     
  3321                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  3322  00197A  ECFD  F00D         	call	_Delay2ms	;wreg free
  3323  00197E  ECFD  F00D         	call	_Delay2ms	;wreg free
  3324  001982                     
  3325                           ;lcd.c: 106:     lcdCommand(0x38);
  3326  001982  0E38               	movlw	56
  3327  001984  EC5B  F00C         	call	_lcdCommand
  3328  001988                     
  3329                           ;lcd.c: 107:     Delay2ms();
  3330  001988  ECFD  F00D         	call	_Delay2ms	;wreg free
  3331  00198C                     
  3332                           ;lcd.c: 108:     lcdCommand(0x38);
  3333  00198C  0E38               	movlw	56
  3334  00198E  EC5B  F00C         	call	_lcdCommand
  3335  001992                     
  3336                           ;lcd.c: 110:     lcdCommand(0x38);
  3337  001992  0E38               	movlw	56
  3338  001994  EC5B  F00C         	call	_lcdCommand
  3339  001998                     
  3340                           ;lcd.c: 111:     lcdCommand(0x06);
  3341  001998  0E06               	movlw	6
  3342  00199A  EC5B  F00C         	call	_lcdCommand
  3343  00199E                     
  3344                           ;lcd.c: 114:     lcdCommand(0x0C);
  3345  00199E  0E0C               	movlw	12
  3346  0019A0  EC5B  F00C         	call	_lcdCommand
  3347  0019A4                     
  3348                           ;lcd.c: 115:     lcdCommand(0x01);
  3349  0019A4  0E01               	movlw	1
  3350  0019A6  EC5B  F00C         	call	_lcdCommand
  3351  0019AA  0012               	return		;funcret
  3352  0019AC                     __end_of_lcdInit:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _pinMode *****************
  3356 ;; Defined at:
  3357 ;;		line 54 in file "io.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  pin             2    0[COMRAM] int 
  3360 ;;  type            2    2[COMRAM] int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3372 ;;      Params:         4       0       0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0       0       0
  3375 ;;      Totals:         6       0       0       0       0       0       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_lcdInit
  3382 ;;		_ssdInit
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text16
  3387  000CF0                     __ptext16:
  3388                           	callstack 0
  3389  000CF0                     _pinMode:
  3390                           	callstack 29
  3391  000CF0                     
  3392                           ;io.c: 56:     if(pin <8){
  3393  000CF0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3394  000CF2  EF86  F006         	goto	u1910
  3395  000CF6  5002               	movf	(pinMode@pin+1)^0,w,c
  3396  000CF8  E107               	bnz	u1911
  3397  000CFA  0E08               	movlw	8
  3398  000CFC  5C01               	subwf	pinMode@pin^0,w,c
  3399  000CFE  B0D8               	btfsc	status,0,c
  3400  000D00  EF84  F006         	goto	u1911
  3401  000D04  EF86  F006         	goto	u1910
  3402  000D08                     u1911:
  3403  000D08  EFB0  F006         	goto	l2079
  3404  000D0C                     u1910:
  3405  000D0C                     
  3406                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3407  000D0C  5003               	movf	pinMode@type^0,w,c
  3408  000D0E  1004               	iorwf	(pinMode@type+1)^0,w,c
  3409  000D10  B4D8               	btfsc	status,2,c
  3410  000D12  EF8D  F006         	goto	u1921
  3411  000D16  EF8F  F006         	goto	u1920
  3412  000D1A                     u1921:
  3413  000D1A  EF9F  F006         	goto	l2077
  3414  000D1E                     u1920:
  3415  000D1E  C001  F005         	movff	pinMode@pin,??_pinMode
  3416  000D22  0E01               	movlw	1
  3417  000D24  6E06               	movwf	(??_pinMode+1)^0,c
  3418  000D26  2A05               	incf	??_pinMode^0,f,c
  3419  000D28  EF98  F006         	goto	u1934
  3420  000D2C                     u1935:
  3421  000D2C  90D8               	bcf	status,0,c
  3422  000D2E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3423  000D30                     u1934:
  3424  000D30  2E05               	decfsz	??_pinMode^0,f,c
  3425  000D32  EF96  F006         	goto	u1935
  3426  000D36  5006               	movf	(??_pinMode+1)^0,w,c
  3427  000D38  1292               	iorwf	146,f,c	;volatile
  3428  000D3A  EF9E  F007         	goto	l174
  3429  000D3E                     l2077:
  3430  000D3E  C001  F005         	movff	pinMode@pin,??_pinMode
  3431  000D42  0E01               	movlw	1
  3432  000D44  6E06               	movwf	(??_pinMode+1)^0,c
  3433  000D46  2A05               	incf	??_pinMode^0,f,c
  3434  000D48  EFA8  F006         	goto	u1944
  3435  000D4C                     u1945:
  3436  000D4C  90D8               	bcf	status,0,c
  3437  000D4E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3438  000D50                     u1944:
  3439  000D50  2E05               	decfsz	??_pinMode^0,f,c
  3440  000D52  EFA6  F006         	goto	u1945
  3441  000D56  5006               	movf	(??_pinMode+1)^0,w,c
  3442  000D58  0AFF               	xorlw	255
  3443  000D5A  1692               	andwf	146,f,c	;volatile
  3444  000D5C  EF9E  F007         	goto	l174
  3445  000D60                     l2079:
  3446  000D60  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3447  000D62  EFBE  F006         	goto	u1950
  3448  000D66  5002               	movf	(pinMode@pin+1)^0,w,c
  3449  000D68  E107               	bnz	u1951
  3450  000D6A  0E10               	movlw	16
  3451  000D6C  5C01               	subwf	pinMode@pin^0,w,c
  3452  000D6E  B0D8               	btfsc	status,0,c
  3453  000D70  EFBC  F006         	goto	u1951
  3454  000D74  EFBE  F006         	goto	u1950
  3455  000D78                     u1951:
  3456  000D78  EFEC  F006         	goto	l2087
  3457  000D7C                     u1950:
  3458  000D7C                     
  3459                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3460  000D7C  5003               	movf	pinMode@type^0,w,c
  3461  000D7E  1004               	iorwf	(pinMode@type+1)^0,w,c
  3462  000D80  B4D8               	btfsc	status,2,c
  3463  000D82  EFC5  F006         	goto	u1961
  3464  000D86  EFC7  F006         	goto	u1960
  3465  000D8A                     u1961:
  3466  000D8A  EFD9  F006         	goto	l2085
  3467  000D8E                     u1960:
  3468  000D8E  C001  F005         	movff	pinMode@pin,??_pinMode
  3469  000D92  0EF8               	movlw	-8
  3470  000D94  2605               	addwf	??_pinMode^0,f,c
  3471  000D96  0E01               	movlw	1
  3472  000D98  6E06               	movwf	(??_pinMode+1)^0,c
  3473  000D9A  2A05               	incf	??_pinMode^0,f,c
  3474  000D9C  EFD2  F006         	goto	u1974
  3475  000DA0                     u1975:
  3476  000DA0  90D8               	bcf	status,0,c
  3477  000DA2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3478  000DA4                     u1974:
  3479  000DA4  2E05               	decfsz	??_pinMode^0,f,c
  3480  000DA6  EFD0  F006         	goto	u1975
  3481  000DAA  5006               	movf	(??_pinMode+1)^0,w,c
  3482  000DAC  1293               	iorwf	147,f,c	;volatile
  3483  000DAE  EF9E  F007         	goto	l174
  3484  000DB2                     l2085:
  3485  000DB2  C001  F005         	movff	pinMode@pin,??_pinMode
  3486  000DB6  0EF8               	movlw	-8
  3487  000DB8  2605               	addwf	??_pinMode^0,f,c
  3488  000DBA  0E01               	movlw	1
  3489  000DBC  6E06               	movwf	(??_pinMode+1)^0,c
  3490  000DBE  2A05               	incf	??_pinMode^0,f,c
  3491  000DC0  EFE4  F006         	goto	u1984
  3492  000DC4                     u1985:
  3493  000DC4  90D8               	bcf	status,0,c
  3494  000DC6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3495  000DC8                     u1984:
  3496  000DC8  2E05               	decfsz	??_pinMode^0,f,c
  3497  000DCA  EFE2  F006         	goto	u1985
  3498  000DCE  5006               	movf	(??_pinMode+1)^0,w,c
  3499  000DD0  0AFF               	xorlw	255
  3500  000DD2  1693               	andwf	147,f,c	;volatile
  3501  000DD4  EF9E  F007         	goto	l174
  3502  000DD8                     l2087:
  3503  000DD8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3504  000DDA  EFFA  F006         	goto	u1990
  3505  000DDE  5002               	movf	(pinMode@pin+1)^0,w,c
  3506  000DE0  E107               	bnz	u1991
  3507  000DE2  0E18               	movlw	24
  3508  000DE4  5C01               	subwf	pinMode@pin^0,w,c
  3509  000DE6  B0D8               	btfsc	status,0,c
  3510  000DE8  EFF8  F006         	goto	u1991
  3511  000DEC  EFFA  F006         	goto	u1990
  3512  000DF0                     u1991:
  3513  000DF0  EF28  F007         	goto	l2095
  3514  000DF4                     u1990:
  3515  000DF4                     
  3516                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3517  000DF4  5003               	movf	pinMode@type^0,w,c
  3518  000DF6  1004               	iorwf	(pinMode@type+1)^0,w,c
  3519  000DF8  B4D8               	btfsc	status,2,c
  3520  000DFA  EF01  F007         	goto	u2001
  3521  000DFE  EF03  F007         	goto	u2000
  3522  000E02                     u2001:
  3523  000E02  EF15  F007         	goto	l2093
  3524  000E06                     u2000:
  3525  000E06  C001  F005         	movff	pinMode@pin,??_pinMode
  3526  000E0A  0EF0               	movlw	-16
  3527  000E0C  2605               	addwf	??_pinMode^0,f,c
  3528  000E0E  0E01               	movlw	1
  3529  000E10  6E06               	movwf	(??_pinMode+1)^0,c
  3530  000E12  2A05               	incf	??_pinMode^0,f,c
  3531  000E14  EF0E  F007         	goto	u2014
  3532  000E18                     u2015:
  3533  000E18  90D8               	bcf	status,0,c
  3534  000E1A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3535  000E1C                     u2014:
  3536  000E1C  2E05               	decfsz	??_pinMode^0,f,c
  3537  000E1E  EF0C  F007         	goto	u2015
  3538  000E22  5006               	movf	(??_pinMode+1)^0,w,c
  3539  000E24  1294               	iorwf	148,f,c	;volatile
  3540  000E26  EF9E  F007         	goto	l174
  3541  000E2A                     l2093:
  3542  000E2A  C001  F005         	movff	pinMode@pin,??_pinMode
  3543  000E2E  0EF0               	movlw	-16
  3544  000E30  2605               	addwf	??_pinMode^0,f,c
  3545  000E32  0E01               	movlw	1
  3546  000E34  6E06               	movwf	(??_pinMode+1)^0,c
  3547  000E36  2A05               	incf	??_pinMode^0,f,c
  3548  000E38  EF20  F007         	goto	u2024
  3549  000E3C                     u2025:
  3550  000E3C  90D8               	bcf	status,0,c
  3551  000E3E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3552  000E40                     u2024:
  3553  000E40  2E05               	decfsz	??_pinMode^0,f,c
  3554  000E42  EF1E  F007         	goto	u2025
  3555  000E46  5006               	movf	(??_pinMode+1)^0,w,c
  3556  000E48  0AFF               	xorlw	255
  3557  000E4A  1694               	andwf	148,f,c	;volatile
  3558  000E4C  EF9E  F007         	goto	l174
  3559  000E50                     l2095:
  3560  000E50  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3561  000E52  EF36  F007         	goto	u2030
  3562  000E56  5002               	movf	(pinMode@pin+1)^0,w,c
  3563  000E58  E107               	bnz	u2031
  3564  000E5A  0E20               	movlw	32
  3565  000E5C  5C01               	subwf	pinMode@pin^0,w,c
  3566  000E5E  B0D8               	btfsc	status,0,c
  3567  000E60  EF34  F007         	goto	u2031
  3568  000E64  EF36  F007         	goto	u2030
  3569  000E68                     u2031:
  3570  000E68  EF64  F007         	goto	l2103
  3571  000E6C                     u2030:
  3572  000E6C                     
  3573                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3574  000E6C  5003               	movf	pinMode@type^0,w,c
  3575  000E6E  1004               	iorwf	(pinMode@type+1)^0,w,c
  3576  000E70  B4D8               	btfsc	status,2,c
  3577  000E72  EF3D  F007         	goto	u2041
  3578  000E76  EF3F  F007         	goto	u2040
  3579  000E7A                     u2041:
  3580  000E7A  EF51  F007         	goto	l2101
  3581  000E7E                     u2040:
  3582  000E7E  C001  F005         	movff	pinMode@pin,??_pinMode
  3583  000E82  0EE8               	movlw	-24
  3584  000E84  2605               	addwf	??_pinMode^0,f,c
  3585  000E86  0E01               	movlw	1
  3586  000E88  6E06               	movwf	(??_pinMode+1)^0,c
  3587  000E8A  2A05               	incf	??_pinMode^0,f,c
  3588  000E8C  EF4A  F007         	goto	u2054
  3589  000E90                     u2055:
  3590  000E90  90D8               	bcf	status,0,c
  3591  000E92  3606               	rlcf	(??_pinMode+1)^0,f,c
  3592  000E94                     u2054:
  3593  000E94  2E05               	decfsz	??_pinMode^0,f,c
  3594  000E96  EF48  F007         	goto	u2055
  3595  000E9A  5006               	movf	(??_pinMode+1)^0,w,c
  3596  000E9C  1295               	iorwf	149,f,c	;volatile
  3597  000E9E  EF9E  F007         	goto	l174
  3598  000EA2                     l2101:
  3599  000EA2  C001  F005         	movff	pinMode@pin,??_pinMode
  3600  000EA6  0EE8               	movlw	-24
  3601  000EA8  2605               	addwf	??_pinMode^0,f,c
  3602  000EAA  0E01               	movlw	1
  3603  000EAC  6E06               	movwf	(??_pinMode+1)^0,c
  3604  000EAE  2A05               	incf	??_pinMode^0,f,c
  3605  000EB0  EF5C  F007         	goto	u2064
  3606  000EB4                     u2065:
  3607  000EB4  90D8               	bcf	status,0,c
  3608  000EB6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3609  000EB8                     u2064:
  3610  000EB8  2E05               	decfsz	??_pinMode^0,f,c
  3611  000EBA  EF5A  F007         	goto	u2065
  3612  000EBE  5006               	movf	(??_pinMode+1)^0,w,c
  3613  000EC0  0AFF               	xorlw	255
  3614  000EC2  1695               	andwf	149,f,c	;volatile
  3615  000EC4  EF9E  F007         	goto	l174
  3616  000EC8                     l2103:
  3617  000EC8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3618  000ECA  EF72  F007         	goto	u2070
  3619  000ECE  5002               	movf	(pinMode@pin+1)^0,w,c
  3620  000ED0  E107               	bnz	u2071
  3621  000ED2  0E28               	movlw	40
  3622  000ED4  5C01               	subwf	pinMode@pin^0,w,c
  3623  000ED6  B0D8               	btfsc	status,0,c
  3624  000ED8  EF70  F007         	goto	u2071
  3625  000EDC  EF72  F007         	goto	u2070
  3626  000EE0                     u2071:
  3627  000EE0  EF9E  F007         	goto	l174
  3628  000EE4                     u2070:
  3629  000EE4                     
  3630                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3631  000EE4  5003               	movf	pinMode@type^0,w,c
  3632  000EE6  1004               	iorwf	(pinMode@type+1)^0,w,c
  3633  000EE8  B4D8               	btfsc	status,2,c
  3634  000EEA  EF79  F007         	goto	u2081
  3635  000EEE  EF7B  F007         	goto	u2080
  3636  000EF2                     u2081:
  3637  000EF2  EF8D  F007         	goto	l2109
  3638  000EF6                     u2080:
  3639  000EF6  C001  F005         	movff	pinMode@pin,??_pinMode
  3640  000EFA  0EE0               	movlw	-32
  3641  000EFC  2605               	addwf	??_pinMode^0,f,c
  3642  000EFE  0E01               	movlw	1
  3643  000F00  6E06               	movwf	(??_pinMode+1)^0,c
  3644  000F02  2A05               	incf	??_pinMode^0,f,c
  3645  000F04  EF86  F007         	goto	u2094
  3646  000F08                     u2095:
  3647  000F08  90D8               	bcf	status,0,c
  3648  000F0A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3649  000F0C                     u2094:
  3650  000F0C  2E05               	decfsz	??_pinMode^0,f,c
  3651  000F0E  EF84  F007         	goto	u2095
  3652  000F12  5006               	movf	(??_pinMode+1)^0,w,c
  3653  000F14  1296               	iorwf	150,f,c	;volatile
  3654  000F16  EF9E  F007         	goto	l174
  3655  000F1A                     l2109:
  3656  000F1A  C001  F005         	movff	pinMode@pin,??_pinMode
  3657  000F1E  0EE0               	movlw	-32
  3658  000F20  2605               	addwf	??_pinMode^0,f,c
  3659  000F22  0E01               	movlw	1
  3660  000F24  6E06               	movwf	(??_pinMode+1)^0,c
  3661  000F26  2A05               	incf	??_pinMode^0,f,c
  3662  000F28  EF98  F007         	goto	u2104
  3663  000F2C                     u2105:
  3664  000F2C  90D8               	bcf	status,0,c
  3665  000F2E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3666  000F30                     u2104:
  3667  000F30  2E05               	decfsz	??_pinMode^0,f,c
  3668  000F32  EF96  F007         	goto	u2105
  3669  000F36  5006               	movf	(??_pinMode+1)^0,w,c
  3670  000F38  0AFF               	xorlw	255
  3671  000F3A  1696               	andwf	150,f,c	;volatile
  3672  000F3C                     l174:
  3673  000F3C  0012               	return		;funcret
  3674  000F3E                     __end_of_pinMode:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _lcdCommand *****************
  3678 ;; Defined at:
  3679 ;;		line 48 in file "lcd.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  cmd             1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  cmd             1    7[COMRAM] unsigned char 
  3684 ;;  old_D           1    6[COMRAM] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3694 ;;      Params:         0       0       0       0       0       0       0
  3695 ;;      Locals:         2       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0
  3697 ;;      Totals:         2       0       0       0       0       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		_Delay2ms
  3703 ;;		_Delay40us
  3704 ;;		_digitalWrite
  3705 ;; This function is called by:
  3706 ;;		_lcdInit
  3707 ;;		_lcdPrint
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text17
  3712  0018B6                     __ptext17:
  3713                           	callstack 0
  3714  0018B6                     _lcdCommand:
  3715                           	callstack 27
  3716                           
  3717                           ;incstack = 0
  3718                           ;lcdCommand@cmd stored from wreg
  3719  0018B6  6E08               	movwf	lcdCommand@cmd^0,c
  3720  0018B8                     
  3721                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  3722  0018B8  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  3723  0018BC                     
  3724                           ;lcd.c: 54:     TRISD = 0x00;
  3725  0018BC  0E00               	movlw	0
  3726  0018BE  6E95               	movwf	149,c	;volatile
  3727  0018C0                     
  3728                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  3729  0018C0  0E00               	movlw	0
  3730  0018C2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3731  0018C4  0E22               	movlw	34
  3732  0018C6  6E01               	movwf	digitalWrite@pin^0,c
  3733  0018C8  0E00               	movlw	0
  3734  0018CA  6E04               	movwf	(digitalWrite@value+1)^0,c
  3735  0018CC  0E00               	movlw	0
  3736  0018CE  6E03               	movwf	digitalWrite@value^0,c
  3737  0018D0  EC9F  F007         	call	_digitalWrite	;wreg free
  3738  0018D4                     
  3739                           ;lcd.c: 57:  PORTD = cmd;
  3740  0018D4  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3741  0018D8                     
  3742                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  3743  0018D8  0E00               	movlw	0
  3744  0018DA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3745  0018DC  0E21               	movlw	33
  3746  0018DE  6E01               	movwf	digitalWrite@pin^0,c
  3747  0018E0  0E00               	movlw	0
  3748  0018E2  6E04               	movwf	(digitalWrite@value+1)^0,c
  3749  0018E4  0E01               	movlw	1
  3750  0018E6  6E03               	movwf	digitalWrite@value^0,c
  3751  0018E8  EC9F  F007         	call	_digitalWrite	;wreg free
  3752  0018EC                     
  3753                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  3754  0018EC  0E00               	movlw	0
  3755  0018EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3756  0018F0  0E21               	movlw	33
  3757  0018F2  6E01               	movwf	digitalWrite@pin^0,c
  3758  0018F4  0E00               	movlw	0
  3759  0018F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  3760  0018F8  0E00               	movlw	0
  3761  0018FA  6E03               	movwf	digitalWrite@value^0,c
  3762  0018FC  EC9F  F007         	call	_digitalWrite	;wreg free
  3763  001900                     
  3764                           ;lcd.c: 63:     PORTD= old_D;
  3765  001900  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3766  001904                     
  3767                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  3768  001904  0E02               	movlw	2
  3769  001906  1808               	xorwf	lcdCommand@cmd^0,w,c
  3770  001908  B4D8               	btfsc	status,2,c
  3771  00190A  EF89  F00C         	goto	u2111
  3772  00190E  EF8B  F00C         	goto	u2110
  3773  001912                     u2111:
  3774  001912  EF93  F00C         	goto	l2129
  3775  001916                     u2110:
  3776  001916  0408               	decf	lcdCommand@cmd^0,w,c
  3777  001918  A4D8               	btfss	status,2,c
  3778  00191A  EF91  F00C         	goto	u2121
  3779  00191E  EF93  F00C         	goto	u2120
  3780  001922                     u2121:
  3781  001922  EF97  F00C         	goto	l2131
  3782  001926                     u2120:
  3783  001926                     l2129:
  3784                           
  3785                           ;lcd.c: 66:        Delay2ms();
  3786  001926  ECFD  F00D         	call	_Delay2ms	;wreg free
  3787                           
  3788                           ;lcd.c: 67:     }else{
  3789  00192A  EF99  F00C         	goto	l235
  3790  00192E                     l2131:
  3791                           
  3792                           ;lcd.c: 68:     Delay40us();
  3793  00192E  EC18  F00E         	call	_Delay40us	;wreg free
  3794  001932                     l235:
  3795  001932  0012               	return		;funcret
  3796  001934                     __end_of_lcdCommand:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _digitalWrite *****************
  3800 ;; Defined at:
  3801 ;;		line 14 in file "io.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  pin             2    0[COMRAM] int 
  3804 ;;  value           2    2[COMRAM] int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3816 ;;      Params:         4       0       0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0
  3818 ;;      Temps:          2       0       0       0       0       0       0
  3819 ;;      Totals:         6       0       0       0       0       0       0
  3820 ;;Total ram usage:        6 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_lcdCommand
  3826 ;;		_lcdData
  3827 ;;		_ssdUpdate
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text18
  3832  000F3E                     __ptext18:
  3833                           	callstack 0
  3834  000F3E                     _digitalWrite:
  3835                           	callstack 29
  3836  000F3E                     
  3837                           ;io.c: 16:     if(pin <8){
  3838  000F3E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3839  000F40  EFAD  F007         	goto	u1530
  3840  000F44  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3841  000F46  E107               	bnz	u1531
  3842  000F48  0E08               	movlw	8
  3843  000F4A  5C01               	subwf	digitalWrite@pin^0,w,c
  3844  000F4C  B0D8               	btfsc	status,0,c
  3845  000F4E  EFAB  F007         	goto	u1531
  3846  000F52  EFAD  F007         	goto	u1530
  3847  000F56                     u1531:
  3848  000F56  EFD7  F007         	goto	l1913
  3849  000F5A                     u1530:
  3850  000F5A                     
  3851                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3852  000F5A  5003               	movf	digitalWrite@value^0,w,c
  3853  000F5C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3854  000F5E  B4D8               	btfsc	status,2,c
  3855  000F60  EFB4  F007         	goto	u1541
  3856  000F64  EFB6  F007         	goto	u1540
  3857  000F68                     u1541:
  3858  000F68  EFC6  F007         	goto	l1911
  3859  000F6C                     u1540:
  3860  000F6C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3861  000F70  0E01               	movlw	1
  3862  000F72  6E06               	movwf	(??_digitalWrite+1)^0,c
  3863  000F74  2A05               	incf	??_digitalWrite^0,f,c
  3864  000F76  EFBF  F007         	goto	u1554
  3865  000F7A                     u1555:
  3866  000F7A  90D8               	bcf	status,0,c
  3867  000F7C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3868  000F7E                     u1554:
  3869  000F7E  2E05               	decfsz	??_digitalWrite^0,f,c
  3870  000F80  EFBD  F007         	goto	u1555
  3871  000F84  5006               	movf	(??_digitalWrite+1)^0,w,c
  3872  000F86  1280               	iorwf	128,f,c	;volatile
  3873  000F88  EFC5  F008         	goto	l140
  3874  000F8C                     l1911:
  3875  000F8C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3876  000F90  0E01               	movlw	1
  3877  000F92  6E06               	movwf	(??_digitalWrite+1)^0,c
  3878  000F94  2A05               	incf	??_digitalWrite^0,f,c
  3879  000F96  EFCF  F007         	goto	u1564
  3880  000F9A                     u1565:
  3881  000F9A  90D8               	bcf	status,0,c
  3882  000F9C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3883  000F9E                     u1564:
  3884  000F9E  2E05               	decfsz	??_digitalWrite^0,f,c
  3885  000FA0  EFCD  F007         	goto	u1565
  3886  000FA4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3887  000FA6  0AFF               	xorlw	255
  3888  000FA8  1680               	andwf	128,f,c	;volatile
  3889  000FAA  EFC5  F008         	goto	l140
  3890  000FAE                     l1913:
  3891  000FAE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3892  000FB0  EFE5  F007         	goto	u1570
  3893  000FB4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3894  000FB6  E107               	bnz	u1571
  3895  000FB8  0E10               	movlw	16
  3896  000FBA  5C01               	subwf	digitalWrite@pin^0,w,c
  3897  000FBC  B0D8               	btfsc	status,0,c
  3898  000FBE  EFE3  F007         	goto	u1571
  3899  000FC2  EFE5  F007         	goto	u1570
  3900  000FC6                     u1571:
  3901  000FC6  EF13  F008         	goto	l1921
  3902  000FCA                     u1570:
  3903  000FCA                     
  3904                           ;io.c: 20:         pin -=8;
  3905  000FCA  0EF8               	movlw	248
  3906  000FCC  2601               	addwf	digitalWrite@pin^0,f,c
  3907  000FCE  0EFF               	movlw	255
  3908  000FD0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3909                           
  3910                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3911  000FD2  5003               	movf	digitalWrite@value^0,w,c
  3912  000FD4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3913  000FD6  B4D8               	btfsc	status,2,c
  3914  000FD8  EFF0  F007         	goto	u1581
  3915  000FDC  EFF2  F007         	goto	u1580
  3916  000FE0                     u1581:
  3917  000FE0  EF02  F008         	goto	l1919
  3918  000FE4                     u1580:
  3919  000FE4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3920  000FE8  0E01               	movlw	1
  3921  000FEA  6E06               	movwf	(??_digitalWrite+1)^0,c
  3922  000FEC  2A05               	incf	??_digitalWrite^0,f,c
  3923  000FEE  EFFB  F007         	goto	u1594
  3924  000FF2                     u1595:
  3925  000FF2  90D8               	bcf	status,0,c
  3926  000FF4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3927  000FF6                     u1594:
  3928  000FF6  2E05               	decfsz	??_digitalWrite^0,f,c
  3929  000FF8  EFF9  F007         	goto	u1595
  3930  000FFC  5006               	movf	(??_digitalWrite+1)^0,w,c
  3931  000FFE  1281               	iorwf	129,f,c	;volatile
  3932  001000  EFC5  F008         	goto	l140
  3933  001004                     l1919:
  3934  001004  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3935  001008  0E01               	movlw	1
  3936  00100A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3937  00100C  2A05               	incf	??_digitalWrite^0,f,c
  3938  00100E  EF0B  F008         	goto	u1604
  3939  001012                     u1605:
  3940  001012  90D8               	bcf	status,0,c
  3941  001014  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3942  001016                     u1604:
  3943  001016  2E05               	decfsz	??_digitalWrite^0,f,c
  3944  001018  EF09  F008         	goto	u1605
  3945  00101C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3946  00101E  0AFF               	xorlw	255
  3947  001020  1681               	andwf	129,f,c	;volatile
  3948  001022  EFC5  F008         	goto	l140
  3949  001026                     l1921:
  3950  001026  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3951  001028  EF21  F008         	goto	u1610
  3952  00102C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3953  00102E  E107               	bnz	u1611
  3954  001030  0E18               	movlw	24
  3955  001032  5C01               	subwf	digitalWrite@pin^0,w,c
  3956  001034  B0D8               	btfsc	status,0,c
  3957  001036  EF1F  F008         	goto	u1611
  3958  00103A  EF21  F008         	goto	u1610
  3959  00103E                     u1611:
  3960  00103E  EF4F  F008         	goto	l1929
  3961  001042                     u1610:
  3962  001042                     
  3963                           ;io.c: 24:         pin -=16;
  3964  001042  0EF0               	movlw	240
  3965  001044  2601               	addwf	digitalWrite@pin^0,f,c
  3966  001046  0EFF               	movlw	255
  3967  001048  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3968                           
  3969                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3970  00104A  5003               	movf	digitalWrite@value^0,w,c
  3971  00104C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3972  00104E  B4D8               	btfsc	status,2,c
  3973  001050  EF2C  F008         	goto	u1621
  3974  001054  EF2E  F008         	goto	u1620
  3975  001058                     u1621:
  3976  001058  EF3E  F008         	goto	l1927
  3977  00105C                     u1620:
  3978  00105C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3979  001060  0E01               	movlw	1
  3980  001062  6E06               	movwf	(??_digitalWrite+1)^0,c
  3981  001064  2A05               	incf	??_digitalWrite^0,f,c
  3982  001066  EF37  F008         	goto	u1634
  3983  00106A                     u1635:
  3984  00106A  90D8               	bcf	status,0,c
  3985  00106C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3986  00106E                     u1634:
  3987  00106E  2E05               	decfsz	??_digitalWrite^0,f,c
  3988  001070  EF35  F008         	goto	u1635
  3989  001074  5006               	movf	(??_digitalWrite+1)^0,w,c
  3990  001076  1282               	iorwf	130,f,c	;volatile
  3991  001078  EFC5  F008         	goto	l140
  3992  00107C                     l1927:
  3993  00107C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3994  001080  0E01               	movlw	1
  3995  001082  6E06               	movwf	(??_digitalWrite+1)^0,c
  3996  001084  2A05               	incf	??_digitalWrite^0,f,c
  3997  001086  EF47  F008         	goto	u1644
  3998  00108A                     u1645:
  3999  00108A  90D8               	bcf	status,0,c
  4000  00108C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4001  00108E                     u1644:
  4002  00108E  2E05               	decfsz	??_digitalWrite^0,f,c
  4003  001090  EF45  F008         	goto	u1645
  4004  001094  5006               	movf	(??_digitalWrite+1)^0,w,c
  4005  001096  0AFF               	xorlw	255
  4006  001098  1682               	andwf	130,f,c	;volatile
  4007  00109A  EFC5  F008         	goto	l140
  4008  00109E                     l1929:
  4009  00109E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4010  0010A0  EF5D  F008         	goto	u1650
  4011  0010A4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4012  0010A6  E107               	bnz	u1651
  4013  0010A8  0E20               	movlw	32
  4014  0010AA  5C01               	subwf	digitalWrite@pin^0,w,c
  4015  0010AC  B0D8               	btfsc	status,0,c
  4016  0010AE  EF5B  F008         	goto	u1651
  4017  0010B2  EF5D  F008         	goto	u1650
  4018  0010B6                     u1651:
  4019  0010B6  EF8B  F008         	goto	l1937
  4020  0010BA                     u1650:
  4021  0010BA                     
  4022                           ;io.c: 28:         pin -=24;
  4023  0010BA  0EE8               	movlw	232
  4024  0010BC  2601               	addwf	digitalWrite@pin^0,f,c
  4025  0010BE  0EFF               	movlw	255
  4026  0010C0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4027                           
  4028                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4029  0010C2  5003               	movf	digitalWrite@value^0,w,c
  4030  0010C4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4031  0010C6  B4D8               	btfsc	status,2,c
  4032  0010C8  EF68  F008         	goto	u1661
  4033  0010CC  EF6A  F008         	goto	u1660
  4034  0010D0                     u1661:
  4035  0010D0  EF7A  F008         	goto	l1935
  4036  0010D4                     u1660:
  4037  0010D4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4038  0010D8  0E01               	movlw	1
  4039  0010DA  6E06               	movwf	(??_digitalWrite+1)^0,c
  4040  0010DC  2A05               	incf	??_digitalWrite^0,f,c
  4041  0010DE  EF73  F008         	goto	u1674
  4042  0010E2                     u1675:
  4043  0010E2  90D8               	bcf	status,0,c
  4044  0010E4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4045  0010E6                     u1674:
  4046  0010E6  2E05               	decfsz	??_digitalWrite^0,f,c
  4047  0010E8  EF71  F008         	goto	u1675
  4048  0010EC  5006               	movf	(??_digitalWrite+1)^0,w,c
  4049  0010EE  1283               	iorwf	131,f,c	;volatile
  4050  0010F0  EFC5  F008         	goto	l140
  4051  0010F4                     l1935:
  4052  0010F4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4053  0010F8  0E01               	movlw	1
  4054  0010FA  6E06               	movwf	(??_digitalWrite+1)^0,c
  4055  0010FC  2A05               	incf	??_digitalWrite^0,f,c
  4056  0010FE  EF83  F008         	goto	u1684
  4057  001102                     u1685:
  4058  001102  90D8               	bcf	status,0,c
  4059  001104  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4060  001106                     u1684:
  4061  001106  2E05               	decfsz	??_digitalWrite^0,f,c
  4062  001108  EF81  F008         	goto	u1685
  4063  00110C  5006               	movf	(??_digitalWrite+1)^0,w,c
  4064  00110E  0AFF               	xorlw	255
  4065  001110  1683               	andwf	131,f,c	;volatile
  4066  001112  EFC5  F008         	goto	l140
  4067  001116                     l1937:
  4068  001116  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4069  001118  EF99  F008         	goto	u1690
  4070  00111C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4071  00111E  E107               	bnz	u1691
  4072  001120  0E28               	movlw	40
  4073  001122  5C01               	subwf	digitalWrite@pin^0,w,c
  4074  001124  B0D8               	btfsc	status,0,c
  4075  001126  EF97  F008         	goto	u1691
  4076  00112A  EF99  F008         	goto	u1690
  4077  00112E                     u1691:
  4078  00112E  EFC5  F008         	goto	l140
  4079  001132                     u1690:
  4080  001132                     
  4081                           ;io.c: 32:         pin -=32;
  4082  001132  0EE0               	movlw	224
  4083  001134  2601               	addwf	digitalWrite@pin^0,f,c
  4084  001136  0EFF               	movlw	255
  4085  001138  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4086                           
  4087                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4088  00113A  5003               	movf	digitalWrite@value^0,w,c
  4089  00113C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4090  00113E  B4D8               	btfsc	status,2,c
  4091  001140  EFA4  F008         	goto	u1701
  4092  001144  EFA6  F008         	goto	u1700
  4093  001148                     u1701:
  4094  001148  EFB6  F008         	goto	l1943
  4095  00114C                     u1700:
  4096  00114C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4097  001150  0E01               	movlw	1
  4098  001152  6E06               	movwf	(??_digitalWrite+1)^0,c
  4099  001154  2A05               	incf	??_digitalWrite^0,f,c
  4100  001156  EFAF  F008         	goto	u1714
  4101  00115A                     u1715:
  4102  00115A  90D8               	bcf	status,0,c
  4103  00115C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4104  00115E                     u1714:
  4105  00115E  2E05               	decfsz	??_digitalWrite^0,f,c
  4106  001160  EFAD  F008         	goto	u1715
  4107  001164  5006               	movf	(??_digitalWrite+1)^0,w,c
  4108  001166  1284               	iorwf	132,f,c	;volatile
  4109  001168  EFC5  F008         	goto	l140
  4110  00116C                     l1943:
  4111  00116C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4112  001170  0E01               	movlw	1
  4113  001172  6E06               	movwf	(??_digitalWrite+1)^0,c
  4114  001174  2A05               	incf	??_digitalWrite^0,f,c
  4115  001176  EFBF  F008         	goto	u1724
  4116  00117A                     u1725:
  4117  00117A  90D8               	bcf	status,0,c
  4118  00117C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4119  00117E                     u1724:
  4120  00117E  2E05               	decfsz	??_digitalWrite^0,f,c
  4121  001180  EFBD  F008         	goto	u1725
  4122  001184  5006               	movf	(??_digitalWrite+1)^0,w,c
  4123  001186  0AFF               	xorlw	255
  4124  001188  1684               	andwf	132,f,c	;volatile
  4125  00118A                     l140:
  4126  00118A  0012               	return		;funcret
  4127  00118C                     __end_of_digitalWrite:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function _Delay2ms *****************
  4131 ;; Defined at:
  4132 ;;		line 37 in file "lcd.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  i               1    1[COMRAM] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4146 ;;      Params:         0       0       0       0       0       0       0
  4147 ;;      Locals:         1       0       0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0
  4149 ;;      Totals:         1       0       0       0       0       0       0
  4150 ;;Total ram usage:        1 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    1
  4153 ;; This function calls:
  4154 ;;		_Delay40us
  4155 ;; This function is called by:
  4156 ;;		_lcdCommand
  4157 ;;		_lcdInit
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text19
  4162  001BFA                     __ptext19:
  4163                           	callstack 0
  4164  001BFA                     _Delay2ms:
  4165                           	callstack 27
  4166  001BFA                     
  4167                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  4168  001BFA  0E00               	movlw	0
  4169  001BFC  6E02               	movwf	Delay2ms@i^0,c
  4170  001BFE                     l1093:
  4171                           
  4172                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  4173  001BFE  EC18  F00E         	call	_Delay40us	;wreg free
  4174  001C02                     
  4175                           ;lcd.c: 43:  }
  4176  001C02  2A02               	incf	Delay2ms@i^0,f,c
  4177  001C04  0E31               	movlw	49
  4178  001C06  6402               	cpfsgt	Delay2ms@i^0,c
  4179  001C08  EF08  F00E         	goto	u261
  4180  001C0C  EF0A  F00E         	goto	u260
  4181  001C10                     u261:
  4182  001C10  EFFF  F00D         	goto	l1093
  4183  001C14                     u260:
  4184  001C14  0012               	return		;funcret
  4185  001C16                     __end_of_Delay2ms:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _Delay40us *****************
  4189 ;; Defined at:
  4190 ;;		line 31 in file "lcd.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  i               1    0[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4204 ;;      Params:         0       0       0       0       0       0       0
  4205 ;;      Locals:         1       0       0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0
  4207 ;;      Totals:         1       0       0       0       0       0       0
  4208 ;;Total ram usage:        1 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_Delay2ms
  4214 ;;		_lcdCommand
  4215 ;;		_lcdData
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text20
  4220  001C30                     __ptext20:
  4221                           	callstack 0
  4222  001C30                     _Delay40us:
  4223                           	callstack 28
  4224  001C30                     
  4225                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  4226  001C30  0E00               	movlw	0
  4227  001C32  6E01               	movwf	Delay40us@i^0,c
  4228  001C34                     l1027:
  4229  001C34  2A01               	incf	Delay40us@i^0,f,c
  4230  001C36  0E18               	movlw	24
  4231  001C38  6401               	cpfsgt	Delay40us@i^0,c
  4232  001C3A  EF21  F00E         	goto	u11
  4233  001C3E  EF23  F00E         	goto	u10
  4234  001C42                     u11:
  4235  001C42  EF1A  F00E         	goto	l1027
  4236  001C46                     u10:
  4237  001C46  0012               	return		;funcret
  4238  001C48                     __end_of_Delay40us:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _kpRead *****************
  4242 ;; Defined at:
  4243 ;;		line 35 in file "keypad.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  2    0[COMRAM] unsigned int 
  4250 ;; Registers used:
  4251 ;;		None
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4257 ;;      Params:         2       0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0
  4260 ;;      Totals:         2       0       0       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text21
  4271  001C5A                     __ptext21:
  4272                           	callstack 0
  4273  001C5A                     _kpRead:
  4274                           	callstack 30
  4275  001C5A                     
  4276                           ;keypad.c: 36:     return valor;
  4277  001C5A  C045  F001         	movff	_valor,?_kpRead
  4278  001C5E  C046  F002         	movff	_valor+1,?_kpRead+1
  4279  001C62  0012               	return		;funcret
  4280  001C64                     __end_of_kpRead:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _kpInit *****************
  4284 ;; Defined at:
  4285 ;;		line 87 in file "keypad.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4299 ;;      Params:         0       0       0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text22
  4313  001C64                     __ptext22:
  4314                           	callstack 0
  4315  001C64                     _kpInit:
  4316                           	callstack 30
  4317  001C64                     
  4318                           ;keypad.c: 89:     TRISB &= 0x07;
  4319  001C64  0E07               	movlw	7
  4320  001C66  1693               	andwf	147,f,c	;volatile
  4321                           
  4322                           ;keypad.c: 91:     TRISD |= 0x0f;
  4323  001C68  0E0F               	movlw	15
  4324  001C6A  1295               	iorwf	149,f,c	;volatile
  4325  001C6C  0012               	return		;funcret
  4326  001C6E                     __end_of_kpInit:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _kpDebounce *****************
  4330 ;; Defined at:
  4331 ;;		line 39 in file "keypad.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  k               2    6[COMRAM] int 
  4336 ;;  i               1    9[COMRAM] unsigned char 
  4337 ;;  j               1    8[COMRAM] unsigned char 
  4338 ;;  old_D           1    5[COMRAM] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, prodl, prodh
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4348 ;;      Params:         0       0       0       0       0       0       0
  4349 ;;      Locals:         5       0       0       0       0       0       0
  4350 ;;      Temps:          5       0       0       0       0       0       0
  4351 ;;      Totals:        10       0       0       0       0       0       0
  4352 ;;Total ram usage:       10 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_main
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text23
  4362  00118C                     __ptext23:
  4363                           	callstack 0
  4364  00118C                     _kpDebounce:
  4365                           	callstack 30
  4366  00118C                     
  4367                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  4368  00118C  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  4369  001190                     
  4370                           ;keypad.c: 51:     TRISD |= 0x0f;
  4371  001190  0E0F               	movlw	15
  4372  001192  1295               	iorwf	149,f,c	;volatile
  4373  001194                     
  4374                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  4375  001194  0E00               	movlw	0
  4376  001196  6E0A               	movwf	kpDebounce@i^0,c
  4377  001198                     l1509:
  4378                           
  4379                           ;keypad.c: 55:         TRISB &= 0xF8;
  4380  001198  0EF8               	movlw	248
  4381  00119A  1693               	andwf	147,f,c	;volatile
  4382                           
  4383                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  4384  00119C  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4385  0011A0  0E01               	movlw	1
  4386  0011A2  6E02               	movwf	(??_kpDebounce+1)^0,c
  4387  0011A4  2A01               	incf	??_kpDebounce^0,f,c
  4388  0011A6  EFD7  F008         	goto	u824
  4389  0011AA                     u825:
  4390  0011AA  90D8               	bcf	status,0,c
  4391  0011AC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4392  0011AE                     u824:
  4393  0011AE  2E01               	decfsz	??_kpDebounce^0,f,c
  4394  0011B0  EFD5  F008         	goto	u825
  4395  0011B4  5002               	movf	(??_kpDebounce+1)^0,w,c
  4396  0011B6  1293               	iorwf	147,f,c	;volatile
  4397                           
  4398                           ;keypad.c: 59:         PORTB |= 0x07;
  4399  0011B8  0E07               	movlw	7
  4400  0011BA  1281               	iorwf	129,f,c	;volatile
  4401                           
  4402                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  4403  0011BC  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4404  0011C0  0E01               	movlw	1
  4405  0011C2  6E02               	movwf	(??_kpDebounce+1)^0,c
  4406  0011C4  2A01               	incf	??_kpDebounce^0,f,c
  4407  0011C6  EFE7  F008         	goto	u834
  4408  0011CA                     u835:
  4409  0011CA  90D8               	bcf	status,0,c
  4410  0011CC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4411  0011CE                     u834:
  4412  0011CE  2E01               	decfsz	??_kpDebounce^0,f,c
  4413  0011D0  EFE5  F008         	goto	u835
  4414  0011D4  5002               	movf	(??_kpDebounce+1)^0,w,c
  4415  0011D6  0AFF               	xorlw	255
  4416  0011D8  1681               	andwf	129,f,c	;volatile
  4417  0011DA                     
  4418                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  4419  0011DA  0E00               	movlw	0
  4420  0011DC  6E08               	movwf	(kpDebounce@k+1)^0,c
  4421  0011DE  0E00               	movlw	0
  4422  0011E0  6E07               	movwf	kpDebounce@k^0,c
  4423  0011E2                     l1517:
  4424  0011E2  4A07               	infsnz	kpDebounce@k^0,f,c
  4425  0011E4  2A08               	incf	(kpDebounce@k+1)^0,f,c
  4426  0011E6  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  4427  0011E8  EFFF  F008         	goto	u841
  4428  0011EC  5008               	movf	(kpDebounce@k+1)^0,w,c
  4429  0011EE  E109               	bnz	u840
  4430  0011F0  0E0A               	movlw	10
  4431  0011F2  5C07               	subwf	kpDebounce@k^0,w,c
  4432  0011F4  A0D8               	btfss	status,0,c
  4433  0011F6  EFFF  F008         	goto	u841
  4434  0011FA  EF01  F009         	goto	u840
  4435  0011FE                     u841:
  4436  0011FE  EFF1  F008         	goto	l1517
  4437  001202                     u840:
  4438  001202                     
  4439                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  4440  001202  0E00               	movlw	0
  4441  001204  6E09               	movwf	kpDebounce@j^0,c
  4442  001206                     l1527:
  4443                           
  4444                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  4445  001206  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  4446  00120A  0E01               	movlw	1
  4447  00120C  6E02               	movwf	(??_kpDebounce+1)^0,c
  4448  00120E  2A01               	incf	??_kpDebounce^0,f,c
  4449  001210  EF0C  F009         	goto	u854
  4450  001214                     u855:
  4451  001214  90D8               	bcf	status,0,c
  4452  001216  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4453  001218                     u854:
  4454  001218  2E01               	decfsz	??_kpDebounce^0,f,c
  4455  00121A  EF0A  F009         	goto	u855
  4456  00121E  5002               	movf	(??_kpDebounce+1)^0,w,c
  4457  001220  1483               	andwf	131,w,c	;volatile
  4458  001222  0900               	iorlw	0
  4459  001224  A4D8               	btfss	status,2,c
  4460  001226  EF17  F009         	goto	u861
  4461  00122A  EF19  F009         	goto	u860
  4462  00122E                     u861:
  4463  00122E  EF31  F009         	goto	l1531
  4464  001232                     u860:
  4465  001232                     
  4466                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  4467  001232  500A               	movf	kpDebounce@i^0,w,c
  4468  001234  0D04               	mullw	4
  4469  001236  50F3               	movf	243,w,c
  4470  001238  2409               	addwf	kpDebounce@j^0,w,c
  4471  00123A  6E01               	movwf	??_kpDebounce^0,c
  4472  00123C  0E01               	movlw	1
  4473  00123E  6E02               	movwf	(??_kpDebounce+1)^0,c
  4474  001240  0E00               	movlw	0
  4475  001242  6E03               	movwf	(??_kpDebounce+2)^0,c
  4476  001244  2A01               	incf	??_kpDebounce^0,f,c
  4477  001246  EF28  F009         	goto	u874
  4478  00124A                     u875:
  4479  00124A  90D8               	bcf	status,0,c
  4480  00124C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4481  00124E  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4482  001250                     u874:
  4483  001250  2E01               	decfsz	??_kpDebounce^0,f,c
  4484  001252  EF25  F009         	goto	u875
  4485  001256  5002               	movf	(??_kpDebounce+1)^0,w,c
  4486  001258  1243               	iorwf	kpDebounce@valorNovo^0,f,c
  4487  00125A  5003               	movf	(??_kpDebounce+2)^0,w,c
  4488  00125C  1244               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  4489                           
  4490                           ;keypad.c: 69:             } else {
  4491  00125E  EF4B  F009         	goto	l1533
  4492  001262                     l1531:
  4493                           
  4494                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  4495  001262  500A               	movf	kpDebounce@i^0,w,c
  4496  001264  0D04               	mullw	4
  4497  001266  50F3               	movf	243,w,c
  4498  001268  2409               	addwf	kpDebounce@j^0,w,c
  4499  00126A  6E01               	movwf	??_kpDebounce^0,c
  4500  00126C  0E01               	movlw	1
  4501  00126E  6E02               	movwf	(??_kpDebounce+1)^0,c
  4502  001270  0E00               	movlw	0
  4503  001272  6E03               	movwf	(??_kpDebounce+2)^0,c
  4504  001274  2A01               	incf	??_kpDebounce^0,f,c
  4505  001276  EF40  F009         	goto	u884
  4506  00127A                     u885:
  4507  00127A  90D8               	bcf	status,0,c
  4508  00127C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4509  00127E  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4510  001280                     u884:
  4511  001280  2E01               	decfsz	??_kpDebounce^0,f,c
  4512  001282  EF3D  F009         	goto	u885
  4513  001286  1C02               	comf	(??_kpDebounce+1)^0,w,c
  4514  001288  6E04               	movwf	(??_kpDebounce+3)^0,c
  4515  00128A  1C03               	comf	(??_kpDebounce+2)^0,w,c
  4516  00128C  6E05               	movwf	(??_kpDebounce+4)^0,c
  4517  00128E  5004               	movf	(??_kpDebounce+3)^0,w,c
  4518  001290  1643               	andwf	kpDebounce@valorNovo^0,f,c
  4519  001292  5005               	movf	(??_kpDebounce+4)^0,w,c
  4520  001294  1644               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  4521  001296                     l1533:
  4522                           
  4523                           ;keypad.c: 72:         }
  4524  001296  2A09               	incf	kpDebounce@j^0,f,c
  4525  001298  0E03               	movlw	3
  4526  00129A  6409               	cpfsgt	kpDebounce@j^0,c
  4527  00129C  EF52  F009         	goto	u891
  4528  0012A0  EF54  F009         	goto	u890
  4529  0012A4                     u891:
  4530  0012A4  EF03  F009         	goto	l1527
  4531  0012A8                     u890:
  4532  0012A8                     
  4533                           ;keypad.c: 73:     }
  4534  0012A8  2A0A               	incf	kpDebounce@i^0,f,c
  4535  0012AA  0E02               	movlw	2
  4536  0012AC  640A               	cpfsgt	kpDebounce@i^0,c
  4537  0012AE  EF5B  F009         	goto	u901
  4538  0012B2  EF5D  F009         	goto	u900
  4539  0012B6                     u901:
  4540  0012B6  EFCC  F008         	goto	l1509
  4541  0012BA                     u900:
  4542  0012BA                     
  4543                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  4544  0012BA  5043               	movf	kpDebounce@valorNovo^0,w,c
  4545  0012BC  1841               	xorwf	kpDebounce@valorAntigo^0,w,c
  4546  0012BE  E107               	bnz	u911
  4547  0012C0  5044               	movf	(kpDebounce@valorNovo+1)^0,w,c
  4548  0012C2  1842               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  4549  0012C4  A4D8               	btfss	status,2,c
  4550  0012C6  EF67  F009         	goto	u911
  4551  0012CA  EF69  F009         	goto	u910
  4552  0012CE                     u911:
  4553  0012CE  EF6C  F009         	goto	l1545
  4554  0012D2                     u910:
  4555  0012D2                     
  4556                           ;keypad.c: 75:         tempo--;
  4557  0012D2  0650               	decf	kpDebounce@tempo^0,f,c
  4558                           
  4559                           ;keypad.c: 76:     } else {
  4560  0012D4  EF72  F009         	goto	l205
  4561  0012D8                     l1545:
  4562                           
  4563                           ;keypad.c: 77:         tempo = 10;
  4564  0012D8  0E0A               	movlw	10
  4565  0012DA  6E50               	movwf	kpDebounce@tempo^0,c
  4566  0012DC                     
  4567                           ;keypad.c: 78:         valorAntigo = valorNovo;
  4568  0012DC  C043  F041         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  4569  0012E0  C044  F042         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  4570  0012E4                     l205:
  4571                           
  4572                           ;keypad.c: 80:     if (tempo == 0) {
  4573  0012E4  5050               	movf	kpDebounce@tempo^0,w,c
  4574  0012E6  A4D8               	btfss	status,2,c
  4575  0012E8  EF78  F009         	goto	u921
  4576  0012EC  EF7A  F009         	goto	u920
  4577  0012F0                     u921:
  4578  0012F0  EF7E  F009         	goto	l206
  4579  0012F4                     u920:
  4580  0012F4                     
  4581                           ;keypad.c: 81:         valor = valorAntigo;
  4582  0012F4  C041  F045         	movff	kpDebounce@valorAntigo,_valor
  4583  0012F8  C042  F046         	movff	kpDebounce@valorAntigo+1,_valor+1
  4584  0012FC                     l206:
  4585                           
  4586                           ;keypad.c: 83:     PORTD = old_D;
  4587  0012FC  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4588  001300                     
  4589                           ;keypad.c: 84:     TRISD = 0x00;
  4590  001300  0E00               	movlw	0
  4591  001302  6E95               	movwf	149,c	;volatile
  4592  001304  0012               	return		;funcret
  4593  001306                     __end_of_kpDebounce:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function ___wmul *****************
  4597 ;; Defined at:
  4598 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  multiplier      2    0[COMRAM] unsigned int 
  4601 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  product         2    4[COMRAM] unsigned int 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2    0[COMRAM] unsigned int 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, prodl, prodh
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4613 ;;      Params:         4       0       0       0       0       0       0
  4614 ;;      Locals:         2       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0
  4616 ;;      Totals:         6       0       0       0       0       0       0
  4617 ;;Total ram usage:        6 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;;		_pwmSet
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text24
  4628  001BD4                     __ptext24:
  4629                           	callstack 0
  4630  001BD4                     ___wmul:
  4631                           	callstack 30
  4632  001BD4  5001               	movf	___wmul@multiplier^0,w,c
  4633  001BD6  0203               	mulwf	___wmul@multiplicand^0,c
  4634  001BD8  CFF3 F005          	movff	prodl,___wmul@product
  4635  001BDC  CFF4 F006          	movff	prodh,___wmul@product+1
  4636  001BE0  5001               	movf	___wmul@multiplier^0,w,c
  4637  001BE2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4638  001BE4  50F3               	movf	243,w,c
  4639  001BE6  2606               	addwf	(___wmul@product+1)^0,f,c
  4640  001BE8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4641  001BEA  0203               	mulwf	___wmul@multiplicand^0,c
  4642  001BEC  50F3               	movf	243,w,c
  4643  001BEE  2606               	addwf	(___wmul@product+1)^0,f,c
  4644  001BF0  C005  F001         	movff	___wmul@product,?___wmul
  4645  001BF4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4646  001BF8  0012               	return		;funcret
  4647  001BFA                     __end_of___wmul:
  4648                           	callstack 0
  4649                           
  4650                           	psect	rparam
  4651  0000                     
  4652                           	psect	idloc
  4653                           
  4654                           ;Config register IDLOC0 @ 0x200000
  4655                           ;	unspecified, using default values
  4656  200000                     	org	2097152
  4657  200000  FF                 	db	255
  4658                           
  4659                           ;Config register IDLOC1 @ 0x200001
  4660                           ;	unspecified, using default values
  4661  200001                     	org	2097153
  4662  200001  FF                 	db	255
  4663                           
  4664                           ;Config register IDLOC2 @ 0x200002
  4665                           ;	unspecified, using default values
  4666  200002                     	org	2097154
  4667  200002  FF                 	db	255
  4668                           
  4669                           ;Config register IDLOC3 @ 0x200003
  4670                           ;	unspecified, using default values
  4671  200003                     	org	2097155
  4672  200003  FF                 	db	255
  4673                           
  4674                           ;Config register IDLOC4 @ 0x200004
  4675                           ;	unspecified, using default values
  4676  200004                     	org	2097156
  4677  200004  FF                 	db	255
  4678                           
  4679                           ;Config register IDLOC5 @ 0x200005
  4680                           ;	unspecified, using default values
  4681  200005                     	org	2097157
  4682  200005  FF                 	db	255
  4683                           
  4684                           ;Config register IDLOC6 @ 0x200006
  4685                           ;	unspecified, using default values
  4686  200006                     	org	2097158
  4687  200006  FF                 	db	255
  4688                           
  4689                           ;Config register IDLOC7 @ 0x200007
  4690                           ;	unspecified, using default values
  4691  200007                     	org	2097159
  4692  200007  FF                 	db	255
  4693                           
  4694                           	psect	config
  4695                           
  4696                           ; Padding undefined space
  4697  300000                     	org	3145728
  4698  300000  FF                 	db	255
  4699                           
  4700                           ;Config register CONFIG1H @ 0x300001
  4701                           ;	Oscillator Selection bits
  4702                           ;	OSC = HS, HS oscillator
  4703                           ;	Fail-Safe Clock Monitor Enable bit
  4704                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4705                           ;	Internal/External Oscillator Switchover bit
  4706                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4707  300001                     	org	3145729
  4708  300001  02                 	db	2
  4709                           
  4710                           ;Config register CONFIG2L @ 0x300002
  4711                           ;	Power-up Timer Enable bit
  4712                           ;	PWRT = OFF, PWRT disabled
  4713                           ;	Brown-out Reset Enable bits
  4714                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4715                           ;	Brown Out Reset Voltage bits
  4716                           ;	BORV = 0x2E, user specified literal
  4717  300002                     	org	3145730
  4718  300002  71                 	db	369
  4719                           
  4720                           ;Config register CONFIG2H @ 0x300003
  4721                           ;	Watchdog Timer Enable bit
  4722                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4723                           ;	Watchdog Timer Postscale Select bits
  4724                           ;	WDTPS = 1, 1:1
  4725  300003                     	org	3145731
  4726  300003  00                 	db	0
  4727                           
  4728                           ; Padding undefined space
  4729  300004                     	org	3145732
  4730  300004  FF                 	db	255
  4731                           
  4732                           ;Config register CONFIG3H @ 0x300005
  4733                           ;	CCP2 MUX bit
  4734                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4735                           ;	PORTB A/D Enable bit
  4736                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4737                           ;	Low-Power Timer1 Oscillator Enable bit
  4738                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4739                           ;	MCLR Pin Enable bit
  4740                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4741  300005                     	org	3145733
  4742  300005  83                 	db	131
  4743                           
  4744                           ;Config register CONFIG4L @ 0x300006
  4745                           ;	Stack Full/Underflow Reset Enable bit
  4746                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4747                           ;	Single-Supply ICSP Enable bit
  4748                           ;	LVP = OFF, Single-Supply ICSP disabled
  4749                           ;	Extended Instruction Set Enable bit
  4750                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4751                           ;	Background Debugger Enable bit
  4752                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4753  300006                     	org	3145734
  4754  300006  80                 	db	128
  4755                           
  4756                           ; Padding undefined space
  4757  300007                     	org	3145735
  4758  300007  FF                 	db	255
  4759                           
  4760                           ;Config register CONFIG5L @ 0x300008
  4761                           ;	Code Protection bit
  4762                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4763                           ;	Code Protection bit
  4764                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4765                           ;	Code Protection bit
  4766                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4767                           ;	Code Protection bit
  4768                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4769  300008                     	org	3145736
  4770  300008  0F                 	db	15
  4771                           
  4772                           ;Config register CONFIG5H @ 0x300009
  4773                           ;	Boot Block Code Protection bit
  4774                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4775                           ;	Data EEPROM Code Protection bit
  4776                           ;	CPD = OFF, Data EEPROM not code-protected
  4777  300009                     	org	3145737
  4778  300009  C0                 	db	192
  4779                           
  4780                           ;Config register CONFIG6L @ 0x30000A
  4781                           ;	Write Protection bit
  4782                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4783                           ;	Write Protection bit
  4784                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4785                           ;	Write Protection bit
  4786                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4787                           ;	Write Protection bit
  4788                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4789  30000A                     	org	3145738
  4790  30000A  0F                 	db	15
  4791                           
  4792                           ;Config register CONFIG6H @ 0x30000B
  4793                           ;	Configuration Register Write Protection bit
  4794                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4795                           ;	Boot Block Write Protection bit
  4796                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4797                           ;	Data EEPROM Write Protection bit
  4798                           ;	WRTD = OFF, Data EEPROM not write-protected
  4799  30000B                     	org	3145739
  4800  30000B  E0                 	db	224
  4801                           
  4802                           ;Config register CONFIG7L @ 0x30000C
  4803                           ;	Table Read Protection bit
  4804                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4805                           ;	Table Read Protection bit
  4806                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4807                           ;	Table Read Protection bit
  4808                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4809                           ;	Table Read Protection bit
  4810                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4811  30000C                     	org	3145740
  4812  30000C  0F                 	db	15
  4813                           
  4814                           ;Config register CONFIG7H @ 0x30000D
  4815                           ;	Boot Block Table Read Protection bit
  4816                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4817  30000D                     	org	3145741
  4818  30000D  40                 	db	64
  4819                           tosu	equ	0xFFF
  4820                           tosh	equ	0xFFE
  4821                           tosl	equ	0xFFD
  4822                           stkptr	equ	0xFFC
  4823                           pclatu	equ	0xFFB
  4824                           pclath	equ	0xFFA
  4825                           pcl	equ	0xFF9
  4826                           tblptru	equ	0xFF8
  4827                           tblptrh	equ	0xFF7
  4828                           tblptrl	equ	0xFF6
  4829                           tablat	equ	0xFF5
  4830                           prodh	equ	0xFF4
  4831                           prodl	equ	0xFF3
  4832                           indf0	equ	0xFEF
  4833                           postinc0	equ	0xFEE
  4834                           postdec0	equ	0xFED
  4835                           preinc0	equ	0xFEC
  4836                           plusw0	equ	0xFEB
  4837                           fsr0h	equ	0xFEA
  4838                           fsr0l	equ	0xFE9
  4839                           wreg	equ	0xFE8
  4840                           indf1	equ	0xFE7
  4841                           postinc1	equ	0xFE6
  4842                           postdec1	equ	0xFE5
  4843                           preinc1	equ	0xFE4
  4844                           plusw1	equ	0xFE3
  4845                           fsr1h	equ	0xFE2
  4846                           fsr1l	equ	0xFE1
  4847                           bsr	equ	0xFE0
  4848                           indf2	equ	0xFDF
  4849                           postinc2	equ	0xFDE
  4850                           postdec2	equ	0xFDD
  4851                           preinc2	equ	0xFDC
  4852                           plusw2	equ	0xFDB
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8

Data Sizes:
    Strings     62
    Constant    16
    Data        18
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     46      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdPrint@msg	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[14]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_print
    _updateCalc->_print
    _print->_ssdDigit
    _ssdDigit->___awmod
    ___awmod->___awdiv
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdPrint->_lcdCommand
    _lcdPrint->_lcdData
    _lcdData->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   26285
                                             18 COMRAM    28    28      0
                            ___awdiv
                             ___wmul
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdInit
                           _lcdPrint
                              _print
                            _pwmInit
                              _reles
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                         _updateCalc
                          _ventoinha
 ---------------------------------------------------------------------------------
 (1) _ventoinha                                            4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _updateCalc                                           0     0      0    3520
                              _print
 ---------------------------------------------------------------------------------
 (2) _print                                                2     0      2    3520
                                             16 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1    1240
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _reles                                                2     0      2     294
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     3      4    6454
                                              8 COMRAM     7     3      4
                         _lcdCommand
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    2647
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4163
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2751
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
   _kpDebounce
   _kpInit
   _kpRead
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _lcdPrint
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdData
       _Delay40us
       _digitalWrite
   _print
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
   _pwmInit
     _pwmFrequency
       ___aldiv
   _reles
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
       ___awdiv (ARG)
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite
   _updateCalc
     _print
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _ssdDigit
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
   _ventoinha

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2E      50       1       63.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      15        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 30 14:07:55 2021

                     l44 1B76                       l54 0728                       u10 1C46  
                     u11 1C42                       _a1 0047             ___awdiv@sign 0006  
                     _v0 004E                       _v1 004D                       _v2 004C  
                     _v3 004B      ___wmul@multiplicand 0003                      l210 1C6C  
                    l140 118A                      l300 1A58                      l205 12E4  
                    l206 12FC                      l207 1304                      l223 1C46  
                    l320 1AC8                      l241 19AA                      l321 1AE0  
                    l235 1932                      l323 1AF8                      l228 1C14  
                    l260 1C2E                      l317 1804                      l341 1B12  
                    l174 0F3C                      l238 1AAC                      l257 1BD2  
                    l345 1B3C                      l338 157E                      l187 1C62  
                    l427 168A                      l348 1BF8                      l287 1A02  
                    l297 1454                      l592 18B4                      l579 174E  
                    u260 1C14                      u261 1C10                      _PR2 000FCB  
                    u900 12BA                      u901 12B6                      u910 12D2  
                    u911 12CE                      u920 12F4                      u840 1202  
                    u824 11AE                      u921 12F0                      u841 11FE  
                    u825 11AA                      u834 11CE                      u835 11CA  
                    u860 1232                      u861 122E                      u854 1218  
                    u855 1214                      u890 12A8                      u874 1250  
                    u891 12A4                      u875 124A                      u884 1280  
                    u885 127A             ___awmod@sign 000E                      wreg 000FE8  
                   l1021 1C30                     l2001 16C0                     l1027 1C34  
                   l2011 16EE                     l2003 16C4                     l1029 1C36  
                   l2101 0EA2                     l2021 1722                     l2013 16FC  
                   l2005 16CC                     l2111 18B8                     l2103 0EC8  
                   l2023 1728                     l2015 1702                     l2007 16DE  
                   l2121 18EC                     l2113 18BC                     l2105 0EE4  
                   l2201 1C1C                     l2017 1718                     l2009 16E6  
                   l2025 172E                     l2041 1824                     l2033 1806  
                   l2131 192E                     l2123 1900                     l2115 18C0  
                   l2107 0EF6                     l2203 1C1E                     l2027 173E  
                   l2019 1720                     l2051 185C                     l2043 1832  
                   l2035 180A                     l1501 1190                     l1317 1C64  
                   l1093 1BFE                     l2125 1904                     l2117 18D4  
                   l2109 0F1A                     l2141 1A7C                     l2133 1A5C  
                   l2221 149A                     l2205 1C22                     l2301 130A  
                   l2029 1746                     l2053 186A                     l2061 1894  
                   l2045 183A                     l2037 1818                     l1511 11DA  
                   l1503 1194                     l1095 1C02                     l1087 1BFA  
                   l2127 1916                     l2119 18D8                     l2071 0CF0  
                   l2143 1A90                     l2135 1A60                     l2231 14B8  
                   l2223 14AE                     l2215 146C                     l2207 1456  
                   l2311 1374                     l2303 131E                     l2063 18A4  
                   l2055 1880                     l2047 184C                     l2039 1820  
                   l2151 1B3E                     l1521 1202                     l1097 1C04  
                   l2129 1926                     l2081 0D7C                     l2073 0D0C  
                   l2145 1AA4                     l2137 1A64                     l2241 1500  
                   l2233 14D4                     l2225 14B4                     l2217 1488  
                   l2209 1468                     l2161 1A54                     l2321 13BE  
                   l2313 1388                     l2305 1332                     l2065 18AC  
                   l2057 1888                     l2049 1854                     l2153 1B50  
                   l2401 076A                     l1531 1262                     l2091 0E06  
                   l2083 0D8E                     l2075 0D1E                     l2171 1968  
                   l2163 1934                     l2147 1AA8                     l2139 1A78  
                   l2251 1522                     l2235 14D6                     l2219 148A  
                   l2331 1412                     l2323 13D0                     l2315 1390  
                   l2307 1346                     l2059 188E                     l2155 1B62  
                   l2403 0778                     l2411 079E                     l1541 12BA  
                   l1533 1296                     l1517 11E2                     l1509 1198  
                   l2093 0E2A                     l2085 0DB2                     l2077 0D3E  
                   l2181 197E                     l2173 196C                     l2165 195C  
                   l2253 1532                     l2237 14E6                     l2149 1BAE  
                   l2325 13E4                     l2317 13A2                     l2309 1362  
                   l2069 1750                     l2157 1B6A                     l2501 09B6  
                   l2421 07E0                     l2413 07B0                     l2405 0786  
                   l2343 1BD4                     l1551 1300                     l1543 12D2  
                   l1535 1298                     l1527 1206                     l1519 11E6  
                   l2095 0E50                     l2087 0DD8                     l2079 0D60  
                   l2191 1998                     l2183 1982                     l2175 1970  
                   l2167 1960                     l2263 1550                     l2255 1546  
                   l2247 1504                     l2239 14FA                     l2271 1AAE  
                   l2159 1A04                     l2327 13EC                     l2319 13B6  
                   l2511 09EE                     l2503 09C2                     l2431 081E  
                   l2415 07BE                     l2423 07E4                     l2407 0792  
                   l2351 0658                     l2345 1BF0                     l1545 12D8  
                   l1537 12A8                     l1529 1232                     l2097 0E6C  
                   l2089 0DF4                     l2193 199E                     l2185 1988  
                   l2177 1974                     l2169 1964                     l2265 156C  
                   l2257 154C                     l2249 1520                     l2281 1ADE  
                   l2273 1AB2                     l2329 13FE                     l2337 141A  
                   l2601 0C64                     l2521 0A26                     l2513 09FC  
                   l2505 09CA                     l2441 0858                     l2433 0826  
                   l2425 07F6                     l2417 07CC                     l2409 079A  
                   l2361 067A                     l2353 065C                     l1547 12DC  
                   l1539 12AA                     l2099 0E7E                     l2195 19A4  
                   l2187 198C                     l2179 197A                     l2267 156E  
                   l2283 1AF4                     l2275 1AC4                     l2611 0CA8  
                   l2603 0C68                     l2531 0A68                     l2523 0A2E  
                   l2515 0A08                     l2507 09CE                     l2451 0890  
                   l2443 0864                     l2427 0804                     l2435 082A  
                   l2419 07D8                     l2371 068C                     l2363 067E  
                   l2355 0660                     l1549 12F4                     l2269 1C5A  
                   l2189 1992                     l2197 1C16                     l2277 1AC6  
                   l1901 19EC                     l2285 1AFA                     l2613 0CB0  
                   l2605 0C6C                     l2541 0AC2                     l2533 0A7C  
                   l2525 0A40                     l2517 0A10                     l2509 09E0  
                   l2461 08C8                     l2453 089E                     l2445 086C  
                   l2437 083C                     l2429 0812                     l2381 06E0  
                   l2373 06A0                     l2365 0682                     l2357 0672  
                   l2349 0650                     l1911 0F8C                     l2199 1C18  
                   l2279 1ADC                     l1903 19FE                     l2295 1B1C  
                   l2287 1B0C                     l2623 0CE0                     l2615 0CB8  
                   l2607 0C7E                     l2551 0AF4                     l2543 0AD4  
                   l2535 0A88                     l2519 0A14                     l2463 08D6  
                   l2471 08FC                     l2455 08AA                     l2439 084A  
                   l2447 0870                     l2527 0A48                     l2391 070A  
                   l2383 06E2                     l2375 06B4                     l2367 0686  
                   l2359 0676                     l1921 1026                     l1913 0FAE  
                   l1905 0F3E                     l2641 142E                     l2297 1B20  
                   l2289 1B14                     l2625 0CE4                     l2609 0CA0  
                   l2561 0B44                     l2545 0AE0                     l2537 0A9A  
                   l2553 0AF8                     l2529 0A5C                     l2481 093E  
                   l2473 090E                     l2465 08E4                     l2457 08B2  
                   l2449 0882                     l2393 0712                     l2385 06E6  
                   l2377 06C8                     l2369 0688                     l1499 118C  
                   l1931 10BA                     l1923 1042                     l1915 0FCA  
                   l1907 0F5A                     l2299 1306                     l2619 0CD8  
                   l2563 0B50                     l2555 0B0A                     l2571 0B68  
                   l2547 0AEC                     l2539 0AAE                     l2491 097C  
                   l2475 091C                     l2483 0942                     l2467 08F0  
                   l2459 08B6                     l2395 0720                     l2387 06F4  
                   l2379 06DC                     l1941 114C                     l1933 10D4  
                   l1925 105C                     l1917 0FE4                     l1909 0F6C  
                   l2581 0BD2                     l2573 0B7C                     l2565 0B5C  
                   l2557 0B1E                     l2549 0AF0                     l2493 0984  
                   l2485 0954                     l2477 092A                     l2469 08F8  
                   l2397 0730                     l2389 06FC                     l1943 116C  
                   l1935 10F4                     l1927 107C                     l1919 1004  
                   l1951 15A2                     l2591 0BFE                     l2583 0BDE  
                   l2575 0B90                     l2567 0B60                     l2559 0B32  
                   l2487 0962                     l2495 0988                     l2479 0936  
                   l2399 074C                     l1937 1116                     l1929 109E  
                   l1961 15D8                     l1953 15A6                     l1945 1580  
                   l2593 0C12                     l2585 0BE2                     l2577 0BA4  
                   l2569 0B64                     l2497 099A                     l2489 0970  
                   l1939 1132                     l1971 161A                     l1963 15EE  
                   l1955 15B4                     l1947 1584                     l1891 19BE  
                   l2595 0C26                     l2587 0BE6                     l2579 0BB6  
                   l2499 09A8                     l1973 1638                     l1965 15F6  
                   l1981 165A                     l1957 15C4                     l1949 1592  
                   l1893 19C2                     l2597 0C38                     l2589 0BEA  
                   l1983 166A                     l1975 1648                     l1967 1602  
                   l1959 15C8                     l1991 1690                     l1895 19D2  
                   l2599 0C60                     l1985 167A                     l1977 164A  
                   l1969 1610                     l1993 169E                     l1897 19D6  
                   l1889 19AE                     l1979 1654                     l1995 16A6  
                   l1899 19E8                     l1997 16AA                     l1989 168C  
                   l1999 16B8                     STR_1 0611                     STR_2 0631  
                   STR_3 0621                     STR_4 0641                     u2000 0E06  
                   u2001 0E02                     u2110 1916                     u2030 0E6C  
                   u2014 0E1C                     u2111 1912                     u2031 0E68  
                   u2015 0E18                     u2120 1926                     u2104 0F30  
                   u2040 0E7E                     u2024 0E40                     u2200 1532  
                   u2121 1922                     u2105 0F2C                     u2041 0E7A  
                   u2025 0E3C                     u2201 152E                     u2210 1546  
                   u2130 1B50                     u2211 1542                     u2131 1B4C  
                   u2220 157E                     u1500 19D2                     u2140 1B62  
                   u2300 070A                     u2221 157A                     u1501 19CE  
                   u2141 1B5E                     u2301 0706                     u2070 0EE4  
                   u2054 0E94                     u2150 1468                     u2230 1AC4  
                   u1510 19E8                     u2310 0720                     u2071 0EE0  
                   u2055 0E90                     u2151 1464                     u2231 1AC0  
                   u1511 19E4                     u2311 071C                     u2080 0EF6  
                   u2064 0EB8                     u2160 149A                     u2240 1ADC  
                   u1520 19FE                     u2400 0858                     u2320 074C  
                   u2081 0EF2                     u2065 0EB4                     u2161 1496  
                   u2241 1AD8                     u1521 19FA                     u2401 0854  
                   u2321 0748                     u1610 1042                     u1530 0F5A  
                   u2170 14AE                     u2250 1AF4                     u2410 0882  
                   u2330 076A                     u1611 103E                     u1531 0F56  
                   u2171 14AA                     u2251 1AF0                     u2411 087E  
                   u2331 0766                     u1700 114C                     u1620 105C  
                   u1604 1016                     u1540 0F6C                     u2180 14E6  
                   u2260 1B0C                     u2500 09B6                     u2420 089E  
                   u2340 0786                     u1701 1148                     u1621 1058  
                   u1605 1012                     u1541 0F68                     u2181 14E2  
                   u2261 1B08                     u2501 09B2                     u2421 089A  
                   u2341 0782                     u2094 0F0C                     u2190 14FA  
                   u2270 1B3C                     u2510 09E0                     u2430 08C8  
                   u2350 07B0                     u2095 0F08                     u2191 14F6  
                   u2271 1B38                     u2511 09DC                     u2431 08C4  
                   u2351 07AC                     u1800 16B8                     u2600 0AD4  
                   u2520 09FC                     u2440 08E4                     u2360 07CC  
                   u1801 16B4                     u2601 0AD0                     u2521 09F8  
                   u2441 08E0                     u2361 07C8                     u2281 066A  
                   u1714 115E                     u1650 10BA                     u1634 106E  
                   u1570 0FCA                     u1554 0F7E                     u1730 1592  
                   u1810 16DE                     u1490 19BE                     u2610 0B0A  
                   u2530 0A26                     u2450 090E                     u2370 07F6  
                   u2290 06F4                     u1715 115A                     u1651 10B6  
                   u1635 106A                     u1571 0FC6                     u1555 0F7A  
                   u1731 158E                     u1811 16DA                     u1491 19BA  
                   u2611 0B06                     u2531 0A22                     u2451 090A  
                   u2371 07F2                     u2291 06F0                     u1724 117E  
                   u1660 10D4                     u1644 108E                     u1580 0FE4  
                   u1564 0F9E                     u1740 15B4                     u1820 16FC  
                   u1900 18A4                     u2700 0C12                     u2620 0B1E  
                   u2540 0A40                     u2460 092A                     u2380 0812  
                   u1725 117A                     u1661 10D0                     u1645 108A  
                   u1581 0FE0                     u1565 0F9A                     u1741 15B0  
                   u1821 16F8                     u1901 18A0                     u2701 0C0E  
                   u2621 0B1A                     u2541 0A3C                     u2461 0926  
                   u2381 080E                     u1910 0D0C                     u1750 15EE  
                   u1830 1718                     u2710 0C26                     u2630 0B32  
                   u2550 0A5C                     u2470 0954                     u2390 083C  
                   u1911 0D08                     u1751 15EA                     u1831 1714  
                   u2711 0C22                     u2631 0B2E                     u2551 0A58  
                   u2471 0950                     u2391 0838                     u1920 0D1E  
                   u1760 1610                     u1840 173E                     u2720 0C38  
                   u2640 0B44                     u2560 0A7C                     u2480 0970  
                   u1921 0D1A                     u1761 160C                     u1841 173A  
                   u2721 0C34                     u2641 0B40                     u2561 0A78  
                   u2481 096C                     u1690 1132                     u1674 10E6  
                   u1594 0FF6                     u1770 1638                     u1850 1818  
                   u2730 0C7E                     u2650 0B7C                     u2570 0A9A  
                   u2490 099A                     u1691 112E                     u1675 10E2  
                   u1595 0FF2                     u1771 1634                     u1851 1814  
                   u2731 0C7A                     u2651 0B78                     u2571 0A96  
                   u2491 0996                     u1684 1106                     u1780 166A  
                   u1860 1832                     u2740 0CD4                     u2660 0B90  
                   u2580 0AAE                     u1685 1102                     u1781 1666  
                   u1861 182E                     u2741 0CD0                     u2661 0B8C  
                   u2581 0AAA                     u1950 0D7C                     u1934 0D30  
                   u1790 169E                     u1870 184C                     u2670 0BA4  
                   u2590 0AC2                     u1951 0D78                     u1935 0D2C  
                   u1791 169A                     u1871 1848                     u2671 0BA0  
                   u2591 0ABE                     u1960 0D8E                     u1944 0D50  
                   u1880 186A                     u2680 0BB6                     u1961 0D8A  
                   u1945 0D4C                     u1881 1866                     u2681 0BB2  
                   u1890 1880                     u2690 0BFE                     u1891 187C  
                   u2691 0BFA                     u1990 0DF4                     u1974 0DA4  
                   u1991 0DF0                     u1975 0DA0                     u1984 0DC8  
                   u1985 0DC4                     _main 0650                     fsr1l 000FE1  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000          __end_of___aldiv 168C                    ?_main 0001  
        __end_of___awdiv 1750          __end_of___awmod 18B6          ___awdiv@divisor 0003  
                  _T2CON 000FCA          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 1AAE          __end_of_lcdInit 19AC                    _igual 0049  
                  _reles 1AAE          __end_of_pinMode 0F3E                    _valor 0045  
                  _print 1750                    main@n 0027                    main@x 002B  
                  main@y 002D                    tablat 000FF5          __end_of_ssdInit 1A5A  
        __end_of_pwmInit 1C30                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8         __end_of_Delay2ms 1C16     __end_of_digitalWrite 118C  
        __initialization 1B78             __end_of_main 0CF0       __size_of_Delay40us 0018  
                 ??_main 0013            __activetblptr 000002                   _ADCON1 000FC1  
                 _CCPR1L 000FBE                   ?_reles 0001         ___awdiv@dividend 0001  
                 ?_print 0011         __end_of_lcdPrint 1580                ??___aldiv 0009  
                 ___wmul 1BD4                ??___awdiv 0005                ??___awmod 000D  
                 _kpInit 1C64                   _kpRead 1C5A                   clear_0 1B9E  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdData 0007  
              ??_lcdInit 0009          ___awmod@counter 000D         __end_of_ssdDigit 1A04  
           __pdataCOMRAM 002F                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0007                   print@n 0011                ??_pwmInit 0011  
      __end_of_Delay40us 1C48               __accesstop 0080  __end_of__initialization 1BA4  
          ___rparam_used 000001              pinMode@type 0003           __pcstackCOMRAM 0001  
          __end_of_reles 1AFA            __end_of_print 1806                ?_Delay2ms 0001  
                ??_reles 0003                  ??_print 0013    __size_of_digitalWrite 024E  
             _lcdCommand 18B6                  ?___wmul 0001                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP1CON 000FBD               _kpDebounce 118C  
     __size_of_ssdUpdate 0150               ??_Delay2ms 0002             _digitalWrite 0F3E  
     __size_of_ventoinha 0044                ?_lcdPrint 0009                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 000F          kpDebounce@old_D 0006  
        kpDebounce@tempo 0050                  ___aldiv 1580                  ___awdiv 168C  
                ___awmod 1806          __size_of___wmul 0026             __psmallconst 0600  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 0010  
            ssdDigit@pos 000F                  __pcinit 1B78                  _lcdData 1A5A  
                __ramtop 0600                  _lcdInit 1934                  __ptext0 0650  
                __ptext1 1AFA                  __ptext2 1B3E                  __ptext3 1750  
                __ptext4 19AC                  __ptext5 1806                  __ptext6 168C  
                __ptext7 1306                  __ptext8 1A04                  __ptext9 1AAE  
                _display 004F                  _pinMode 0CF0         ___awmod@dividend 0009  
       ___aldiv@dividend 0001                  _ssdInit 1A04                  _pwmInit 1C16  
             ??_lcdPrint 000D                Delay2ms@i 0002                  main@aux 0023  
                main@msg 0013      kpDebounce@valorNovo 0043     end_of_initialization 1BA4  
          __Lmediumconst 0000            ?_pwmFrequency 000F        __end_of_ssdUpdate 1456  
             ??_ssdDigit 0010         ___aldiv@quotient 000B                  postdec1 000FE5  
            ?_lcdCommand 0001        __end_of_ventoinha 1B3E                  postinc0 000FEE  
            ?_kpDebounce 0001                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTEbits 000F84           _valor@ssd$F336 0601               _updateCalc 1B3E  
              _TRISCbits 000F94                _TRISEbits 000F96           ??_pwmFrequency 0011  
              _Delay40us 1C30           __end_of___wmul 1BFA            __pidataCOMRAM 1C48  
         __end_of_kpInit 1C6E           __end_of_kpRead 1C64   __end_of_valor@ssd$F336 0611  
    start_initialization 1B78        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0001                 ??___wmul 0005  
               ??_kpInit 0001                 ??_kpRead 0003              __pbssCOMRAM 0041  
            ?_updateCalc 0001               pinMode@pin 0001        __size_of_lcdPrint 012A  
               ?___aldiv 0001                 ?___awdiv 0001                 ?___awmod 0009  
      __size_of_ssdDigit 0058                 ?_lcdData 0001                 ?_lcdInit 0001  
   __end_of_pwmFrequency 1BD4            lcdCommand@cmd 0008              __smallconst 0600  
               ?_pinMode 0001                 ?_ssdInit 0001                 ?_pwmInit 0001  
         __size_of_reles 004C           __size_of_print 00B6         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009              ??_Delay40us 0001  
         ___wmul@product 0005      __size_of_updateCalc 003A             ??_lcdCommand 0007  
              main@F2442 002F                _ssdUpdate 1306                lcdPrint@i 000F  
           ??_kpDebounce 0001                _ventoinha 1AFA        ___wmul@multiplier 0001  
        lcdCommand@old_D 0007    kpDebounce@valorAntigo 0041                 _Delay2ms 1BFA  
              main@tempo 0025                copy_data0 1B8C       __end_of_lcdCommand 1934  
           lcdData@old_D 0008             lcdData@valor 0007       __end_of_kpDebounce 1306  
             ventoinha@i 0003               ventoinha@v 0001                 __Hrparam 0000  
               __Lrparam 0000               ?_ssdUpdate 0001         __size_of___aldiv 010C  
       __size_of___awdiv 00C4         __size_of___awmod 00B0               ?_ventoinha 0001  
       __size_of_lcdData 0054         __size_of_lcdInit 0078         __size_of_pinMode 024E  
              reles@rele 0001                 __ptext10 1C16                 __ptext11 1BAE  
               __ptext20 1C30                 __ptext12 1580                 __ptext21 1C5A  
               __ptext13 1456                 __ptext22 1C64                 __ptext14 1A5A  
               __ptext23 118C                 __ptext15 1934                 __ptext24 1BD4  
               __ptext16 0CF0                 __ptext17 18B6                 __ptext18 0F3E  
               __ptext19 1BFA                 _lcdPrint 1456         __size_of_ssdInit 0056  
       __size_of_pwmInit 001A            __size_of_main 06A0               Delay40us@i 0001  
               _operacao 003F                 _ssdDigit 19AC    __size_of_pwmFrequency 0026  
               main@cont 0029             ??_updateCalc 0013            ?_digitalWrite 0001  
      digitalWrite@value 0003            lcdPrint@linha 000B             _pwmFrequency 1BAE  
     __end_of_updateCalc 1B78              ??_ssdUpdate 0007              ??_ventoinha 0003  
            kpDebounce@i 000A              kpDebounce@j 0009              kpDebounce@k 0007  
         ??_digitalWrite 0005             ___aldiv@sign 000A          digitalWrite@pin 0001  
            lcdPrint@msg 0009  
